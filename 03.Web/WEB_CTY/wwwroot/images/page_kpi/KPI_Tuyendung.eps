%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: (Adobe Illustrator Artwork)
%%Creator: (Adobe Illustrator\(R\) 26.3)
%%For: ayib
%%CreationDate: 13/09/22
%%BoundingBox: 0 0 820 312
%%HiResBoundingBox: 0 0 820 312
%%CropBox: 0 0 820 312
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 26.3.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 26.3.1 x1103 R agm 5.512 ct 6.513%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.cb7c5a1, 2022/04/14-05:22:35        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">UP_Business tmp_14-07</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2022-09-13T22:13:55+07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2022-09-13T22:13:55+07:00</xmp:ModifyDate>
         <xmp:CreateDate>2022-09-13T22:13:55+07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator 26.3 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>100</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEA8ADwAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAA8AAAAAEA&#xA;AQDwAAAAAQAB/+ICQElDQ19QUk9GSUxFAAEBAAACMEFEQkUCEAAAbW50clJHQiBYWVogB88ABgAD&#xA;AAAAAAAAYWNzcEFQUEwAAAAAbm9uZQAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1BREJFAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKY3BydAAAAPwAAAAy&#xA;ZGVzYwAAATAAAABrd3RwdAAAAZwAAAAUYmtwdAAAAbAAAAAUclRSQwAAAcQAAAAOZ1RSQwAAAdQA&#xA;AAAOYlRSQwAAAeQAAAAOclhZWgAAAfQAAAAUZ1hZWgAAAggAAAAUYlhZWgAAAhwAAAAUdGV4dAAA&#xA;AABDb3B5cmlnaHQgMTk5OSBBZG9iZSBTeXN0ZW1zIEluY29ycG9yYXRlZAAAAGRlc2MAAAAAAAAA&#xA;EUFkb2JlIFJHQiAoMTk5OCkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAA&#xA;ARbMWFlaIAAAAAAAAAAAAAAAAAAAAABjdXJ2AAAAAAAAAAECMwAAY3VydgAAAAAAAAABAjMAAGN1&#xA;cnYAAAAAAAAAAQIzAABYWVogAAAAAAAAnBgAAE+lAAAE/FhZWiAAAAAAAAA0jQAAoCwAAA+VWFla&#xA;IAAAAAAAACYxAAAQLwAAvpz/7gAOQWRvYmUAZMAAAAAB/9sAhAAGBAQEBQQGBQUGCQYFBgkLCAYG&#xA;CAsMCgoLCgoMEAwMDAwMDBAMDg8QDw4MExMUFBMTHBsbGxwfHx8fHx8fHx8fAQcHBw0MDRgQEBga&#xA;FREVGh8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx//wAAR&#xA;CABkAQADAREAAhEBAxEB/8QBogAAAAcBAQEBAQAAAAAAAAAABAUDAgYBAAcICQoLAQACAgMBAQEB&#xA;AQAAAAAAAAABAAIDBAUGBwgJCgsQAAIBAwMCBAIGBwMEAgYCcwECAxEEAAUhEjFBUQYTYSJxgRQy&#xA;kaEHFbFCI8FS0eEzFmLwJHKC8SVDNFOSorJjc8I1RCeTo7M2F1RkdMPS4ggmgwkKGBmElEVGpLRW&#xA;01UoGvLj88TU5PRldYWVpbXF1eX1ZnaGlqa2xtbm9jdHV2d3h5ent8fX5/c4SFhoeIiYqLjI2Oj4&#xA;KTlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+hEAAgIBAgMFBQQFBgQIAwNtAQACEQMEIRIxQQVR&#xA;E2EiBnGBkTKhsfAUwdHhI0IVUmJy8TMkNEOCFpJTJaJjssIHc9I14kSDF1STCAkKGBkmNkUaJ2R0&#xA;VTfyo7PDKCnT4/OElKS0xNTk9GV1hZWltcXV5fVGVmZ2hpamtsbW5vZHV2d3h5ent8fX5/c4SFho&#xA;eIiYqLjI2Oj4OUlZaXmJmam5ydnp+So6SlpqeoqaqrrK2ur6/9oADAMBAAIRAxEAPwDggGdI6JcB&#xA;hQvAwsVwGFC4DCxbIPE060xUKCJkQGwlXRaZIBrJROmyRw3jJMeNvco0MzdQofo9BufTcK9PbMXW&#xA;YpGNx+qJ4h8On+cLj8W/BkANH6Tsf1/Dn8E113T5Wk+vcKeu5W5XY+ndqP3yGm3xn94lNqGg6HLt&#xA;LkjkgOE+Y9zTnjKEjfuPvY/PY1fmvXuMslBYZtqLo4uPXbAAplbppgqFE6nq2GRWEd7KEjjHIu4/&#xA;dpu3v4L9OVU3mXQcypoGkmqdyTVj+ORG5ZHYIkjLGpRkbsOmRLOIUaEmgyLYv4hRhY3awmuBkirS&#xA;0aRgSPffYUHUk9gMHWhzYTkALKfeXfL2q+ZNVi0bRovUkk3mmNQioDvJIf2UXsO/zoMlKcccbLVC&#xA;Epy8/ufV35ffl7pPk3SltbZS93IQbu8YDnLJTp34jf4RX4fnUnS585yGy7fDhEB5sr5Hxb7VPp/k&#xA;+f8AlZQ3NgsenJviIoDTf+X5jryxVpWJ40LNWvGnw8/Gn8tPxxVysTxoWateNPh5+NP5afjiruRp&#xA;1b7Nfo/n+X+TiruR33b7Nfo/n+X+TirixHKpZaU5V+Lh4V/mr+GKuLEcqllpTlX4uHhX+av4Yq2S&#xA;wO/JfipQmu9Ps/M/zYq+CBnSOjTHQdIl1fVrfT4nEbTFi0jdFVFLu30KpOYXaOtGlwSykXw9O8k0&#xA;B8y5Wi0vj5o474b69wAs/YnFxoOgXGi3mo6PezM+nPELuC6jVOUczcBLGyFtg1NiK5r8HaGqhqIY&#xA;tRCA8US4TAk0Yi+GVju6jZytRpNPLHKeCUzwVxcQHU1Yrz6JrY+SvJlzcGJ/N9vCokEaySwlFIaE&#xA;sr15t8JkoP8AJFeVD8Obc5pj+F1wxQP8SOP5feRGuxFD51tjCW4mWSMLQCN25fbP7RiX6W/kODx8&#xA;lfQnwYX9TENdsdKs71IdMvGvYfSjeSZlVAHkXmUHFnrwBCk/zVzIxkkbinHmADsbS0RCu2TpjxLw&#xA;tMLG3MlRjSgp5o2soi/V7tUkVkETrMD6csa/ZSQj4lZP91yLuv2fs9NfPDLFIygLiTZA5g/zo+/+&#xA;KPX6h6r4suGSOQcMjUuQJ5Ed0v8Aey6fSfT9Im+0Wylo9jcqpYchaXjpDMB/kzNxt51/lZWBb+UZ&#xA;m4tZHIO/zH6RzB8iHFy6WWM77e/9B5EdxHNKJ9C1Vak2c5T/AH4IyU/4MVX8cmZQ70RurpAy2Ij3&#xA;nlRTSojjYSufoQlV/wBkRlcpANsSTyFpfdSBiI414op+FBvv4k/tHKiTL3N8YcPM2V8MPprv9o9c&#xA;sEaa5StbI1dh0xKQFIivTIs2+IQVPXHki7UmYsciWwBEWdo0rA0236mg23JJ7AdzkSd6HNEiALPL&#xA;72QeXPLmreZtWi0TRIvVkk3mmIIRUB3kkP7Ma9h1PzIGSlKOONlqjCU5ef3Pq/yD+XukeTNGNnaI&#xA;0l23Fr2+IAlkk8e+wrQLX4fckk6XNmOQ2XbYcIgPNlbJQ/3fH4gtFPiPs9PsnvlLc1x/yD9vj1/4&#xA;T/UxQ2qVP93y+IrRjtsPs9Ps+GKWkWvp/AW5V+0ftU/n+XbFDkWvp/AW5V+0ftU/n+XbFXcf8g/Y&#xA;5df+G/18Vdx/yD9jl1/4f/XxVzrT1PgK8afZP2a/yfPvirnWnqfAV40+yfs1/k+ffFW2Sh/u+PxB&#xA;aKfEfZ6fZPfFL4IGdI6JHaPqt7pOowajZP6dzbtyjYio3BVgR3DKSDmNrNHj1OKWLILhL8fYd2zB&#xA;nlimJx5hNrzzbJLA1vZWFtp0MsqT3KW6sPVeM8lDciaIG3CjMHSdjDHkGTJknllEER4q9N8+XU9S&#xA;5uo7U48ZxwhHHGRuXD/FXv6eSbXP5pa9O0pjs7C2EsdzGVigJp9cYPKwMjyNUsK7mh7g7U2Q00e8&#xA;/wBjgHUS8kg13XL7XNSfUL0J9YdURvTXgtEUKNvkP4dKDL8cBEUGmczI2UCBk2tcBhYrqYqorI5k&#xA;Ip8Nae+RvdmYilUjJMLXpdXUSFI5D6ZNTGd0J91NVOU5NPCZsjfv6/Pm349ROAoHbu6fLkpyXNwf&#xA;2I/ojjH/ABrkPy4/pf6aX62z8yf6P+lj+pDSCeTZm4r/ACigH3DbDHCBupzE/imkhRNxufE5YI01&#xA;mRKyRuw6YCUxCkRXYZFsbICCpx5I5oZ3LH27DIEtoFL7eL1HpvxG7U3NP89hkZSr3sgL9yf6LoWp&#xA;67rFroOkxCS8unCE1+BQN2LMK0jjG5Pc777YbGONlqAOSX3PrbyB5A0byZoy2FkvqXUnFr6929aa&#xA;QeHgF3ov7I9ySdNmzHIbLtMWIQHmyfbw7/sH/k3/AMbZS2u2r0X/AGB2/wCuPHFXbeH4/wCf7vFX&#xA;beC/7M7fR/keHvirtttu37Z/5Of8a4q7bbbt+2f+Tn/GuKu2p07eP+f7zFXGm+34/wCf7zFXbeHf&#xA;9g/8m/8AjbFXbeHf9g/8m/8AjbFXbV6L/sDt/wBceOKvgsZ0jolQYQxXDJIXgGlabeOFiuGFC8DF&#xA;iV4GFiuAwob4dTT5nFbaIxVaRgStIwMgpnFkh5piG4AV8Tlci2xjtazc/PAyboEFThRzQ0jlj7dh&#xA;lZLdEUpYGSY2g9C2MwNHFCp7h2qFPj8Khm+fHK4DikT3bfrXKaiI9+5/R+PN9Kf846+RY9L8st5l&#xA;u4x+kNZUi35ihS0U/AinxlI5+445ga3NxS4RyDmabHQvqXrzCqFaKdlHAH4tj9mvivfMJyXOOXqb&#xA;K3On2TTnT+Xwp3xVtjU/sN8Qao9h9rr9kYpap7L9vn1/4f8A1fbFDamhr8C/EWqfcU5dfsnpilpB&#xA;T09lXhXqa8K/zeNe2KHIKensq8K9TXhX+bxr2xV1PZfscev/AAnX7Xvirqey/Y4df+E/1vfFXOOX&#xA;qbK3On2TTnT+Xwp3xVzjl6mytzp9k050/l8Kd8VbY1P7DfEGqPYfa6/ZGKXwSM6V0JTPy5NbQa/p&#xA;k104jtYruB55CCQsayKWJA60GRmCYmu5YH1C2UaVaaJY6UbXVbizupFlvZ/q6Th1PDTpDbEyRMPt&#xA;zhQAGrXY0OVSMibF9PvbIgAUa6/citN/wdNBEbloLdbpbOS4slmlWH10+toVccywQlYi5rVQxoRX&#xA;BLj6ef6FHB936VG+0fSZLRBwsLTULjT5JIxFcf6ObmO+VaLLI7x8vq6t+2V8N9snGZvrV/o/WxlE&#xA;V0uv0/qTWS0/LuPTdRkjNvcyK0qiMSOkgHoIYHt3aVfh9TlUek5J2agpkActj8fNJGOigfJ2pRW2&#xA;mWiidk4X8slzEt/DZKYykAX1o5QxnT4W+Ee475PNGyfd3X3/ACYYZUB7++u75qK2Hl1iLgzWskK2&#xA;kqSASekz3a3DhSsdeShouJU8eNPfbJ8U+W/P7KYcMee3L7bTG6j8px3K8Gto7S4ltTNZwyuAI1uS&#xA;HWRhPOr/ALr9rag3Kg5Acddb3+73BmeC+lbff70v0iPytdxxTXSW1rdCOYC3ZpDEzRvGULh5kozI&#xA;zgVkA28clk4xysj8eTDHwHnQP481T0PKEkbOkFtFGlyWMUlwzPJH6wHpq4kUoAldzGwpvyrkbyef&#xA;LuZ1Dy5sc8xw2MWo0s3haJkViIK8VYjdT+8mFR34uRl2MkjdqyAXslBybFReIFuXfvkSGwSaIVBU&#xA;4E80NI5Y+3YZAltiKUWyJbAtVWZgqirMaAe5yJNCyyAvYJ5aae+p6lpmkW7/ABX9wkMTHqpnlEKV&#xA;/wBhGp+nIY/Tjs937SifqyGjtdD4cn29Y2ltZ2UFpaxqltbwrbQoOiog4rGB40HXNITZt2oFCgrn&#xA;cenRSSAvAbH4f2a+I8e+BXH4+Wyt6lKU25cfD+WmKtlgxr8LfFzqKjoKcvkPDFWvoX7XqfR/P8v8&#xA;nFWwwXf4Vqxepqeu3L5HwxVpfh47Kvp1rXfjy8f5q4q5fh47Kvp1rXfjy8f5q4q7t0X7Pp/T/J8/&#xA;fFXeOy/Z9P6f5Pn/AJWKuPx8tlb1KUpty4+H8tMVWTzQxxSzTNGsNOTyM3BSqCpNWNEC964QLUl5&#xA;X5l/Puxjnlt/LVgNV9Fx6mozMbe0V+imrUJBpTcrXsTmX+WjGvENE8gN5H3Ab/K3ClrLNQF+fIfN&#xA;8xDNy68o7SdPk1HUraxjIV7iQIGPQAnc/QMxdbqhp8Msp3EBbkaPSnPmjiG3EaZZc6L5AjkutNa/&#xA;ntr+1qn1mUFomlGxFFU9Dsen05zGDtDtaQhm8OE8U9+EbSEfievx+D0ep0PZUTLD4k45YbcR3BPw&#xA;HT4fFZpH5bapqFjbXLXlraS3wLWFrO9JJgBWqgDw32rtmVrfazDgyygIZJxx/XKI2j+OXR12n9n8&#xA;mTHGZnCJn9MSd5InTvyy1W6sY7m91G10+EXEloUunKlZUdkKrtxJZl2AO+Q1Ptfhx5Djx48mU8An&#xA;6RfpIBvvGx32YYuwskocU5wgOIx37waVLL8qtbl1TUrG5ure0TTPT9a5dmKN6w5IV2G1OtaUwZ/b&#xA;PTQw4skITmc11Ecxw7G/0VdtePsHLLJOBMY8FWem/JB3XkLUbWy1a7a6tpItIaNZDExcSCQKVMZA&#xA;p+1vXM3B7S4cmTDjEJg5wasVw8N3fy6NGTsfJGGSXFEjHXLrfcnPlbyFatewjVytxBe6U2o2yRM6&#xA;lCWj48iOO4D/ACzUds+1Exil+XuEseoGKVgG9pXXPudh2d2JEzHi+qM8XGKvb6f1qk3kPTILDQbu&#xA;C5hnuLySMTwSyn05+bKKRcAGotfip0yEPanPPLqccoTjDHGXDIR3hQP1Xtv/AA97bLsHHHHhnGUZ&#xA;SmRYMtpWRyrfbqgbryJNd3ep3YuLPTLO1u2gdHdxGmyt8LMOn7wAVpv4Zl4faiOLHix8OXNkniEh&#xA;QFnmNwD/AEfPbvap+z8sk8k+LHihCfDuTQ5Hmfeg/wDlXmrjVp7GWaGKG2iW4lvWY+l6b1CnpX9l&#xA;uvgcyD7Xaf8ALxyxjOUpyMRCvVxCr+8fMbMI+zOfxpYyYiMY8Rl0o3+o/Ipf5g8p3OjWlvdvdQXM&#xA;NyxETwMWBAFQ1SAKEeGZvZXb0NZkljEJwlAb8W3wcbtHsWekxxyGUZxny4d2PnN46hY5AFT0wFkA&#xA;hJHLH27DKyW+IpSY5FmFM5FkFWy/3sg/4yJ/xIZTn/u5e4t+D+8j7wzb8soI5vzN8uI4+FXikA/y&#xA;o7QSL1/yhh1B/dFqwj1vsWg/mH2KdPw/1f8AK/HNI7RzAcCOQPwqKEUXY9K+Hga74q5wD6nxA1p9&#xA;oUrT+bpx9umKttxJ+1X4wdxTt16D4vbFLVB/MPt16fj/AK3+T+GKG14g/ap8ZOwqenXofi9sUtIA&#xA;PT+IClfsitK/y9eXv1xQ5AB6fxAUr9kVpX+Xry9+uKtUH8w/u6dPw/1f8r8cVboP5h9inT8P9X/K&#xA;/HFXOAfU+IGtPtClafzdOPt0xV4V+fHnZrnV38p287R6ZZxpda7JH8MkjHiYYNxtuy9qVYE/ZzMx&#xA;AwiJAXOR4Y39p+As+dVzLh6iXEeE/SNz+Pl83lV/fxW6pHLEj3KD4LPf6vZhtwgWtXl6FuR9m5NX&#xA;jstLpxAbGyecj9Uvf5dwGw/hoOszTMv0DoPx5/GyxQZczRul6hPp+oW99BQy27rIoboaHofY5Rq9&#xA;NHPilil9MxTbptRLDkjkj9UTbNp/O3ktvrN/H5dEusXS/H9ZKy26uf2wrVHXfZRXOTxez/aA4cR1&#xA;NYIfzbjKu6x/xRp3+btnRyMsgwXln/O3jff+AETpH5ieXFtNIk1fS5rjVNDQx2UkLqsTAKFQuKil&#xA;OI7Hx9shrPZjVnJmGDLGOHUG5iQuXPevmeo7vNqw9tYeHGckCcmIVGjsg9b8/wBvq3lu30+S3dL5&#xA;dTfUZnXj6XF2lPBd+W3qjqMzez/ZuWm1csokDjOAYx/O2Edz0/hcPVdqjNhECDxeJxnu6/rTwfmp&#xA;ojeY73VDZ3kaXMUKRyRS8JFMVahouXpODXbkNs1H+g3U/lIYePGTCUiQY2Dxd0q44n3c/g547ew+&#xA;PLJwzqQHI77eV8J+KFb8x9EurvW4r7THGl6t6ZMcLKsoaMAcm6CrUB2/HMoeympxwwSxZR4+Di3k&#xA;PTUug93L9TX/AC5gnLKJ4z4eWuXPb9f4tUT8yNFj1C2ngsp4ra301tPSGqsVJZCtCTuoEdK9cql7&#xA;I6mWGUJZIGc84yk7jpK+nMmXubYe0GCOSMhCQjHEYVt3j7Nkus/OuljS9Gt7u0lN5o8yvDLGw4FA&#xA;4LbEjcqKZsNR7O5znzzxzj4eoiQQed1t8LcbB21hGLDGcJceGQII5Ve/2KWr+crK90nVrKOGVX1C&#xA;8F1GzcaKtIxRqHr+7yeg9nsuHUYMplEjFi4Dz3Pq5bcvUus7bx5cGXGIyvJk4hy5enn8k80zzHFr&#xA;+o3cENrztJrCO3uIJHEcrGNpN46Egj97TqM57X9kS7PwQnKdZI5pSjIDiiOIR+r/AEvcXotB2lHX&#xA;ZpwjC4SwiMok1I0ZfT/pu8JV59+r22haRYRwm1aMuy2rOHdU6VYgnrXNn7KmeXV58xlxg0OICgT5&#xA;e78c3C9p4QxaXBiEeAizwk2QPP3sDOd28Sh7hug+nISbYBObc2ek6XHdvEs19PuC4qEFAwUeHwMr&#xA;VBDfEKFeJ5aswOeZsnw47UOp6k/HauWxJuxWbfhgUPUfs/HO2rfWbPU0a0vLb45NoZecrnmeg5St&#xA;KVBNPs0p1PIbZZLRRAvH6JDu5fIbH4/Agsoao3UxxR+34HmPxYLG50EcrIrclB+FvEdj9Iy/HLii&#xA;CdmE48MiBuvsSBe25JoBKlSen2hkNR/dy/qn7men/vI+8fezHyDeLZ/mJ5cuWFEaW3hBI7ywi2Ph&#xA;0cEZLKLxFpxGpvslH5IG5DeMdv8Ahen2ff8AHNG7Vcx+AjkDso4kUXr0rToO2+Kuc19T4ga0+0KV&#xA;/wBfYUp2xVtmqft1+IH4lp269PteAxS1X/KH269P+G6fb9vwxQ2rb/bp8RPwrU9OvT7XiMUtIaen&#xA;8QFK/ZFaf6mxrXvihyGnp/EBSv2RWn+psa174q6v+UPsU6f8L0+x7/jirq/5Q+xTp/wvT7Hv+OKr&#xA;ZpVRJGZgRt9obtT+bbb2xV8f+YdRTUfPerSuwuYbzzFx57MrQxSukYBGxBR/wzYwFZI/0cZ+0x/U&#xA;4MxcT5yH6f1sMu7qaRfUdy0ktXdyakszGpJ8TmzkaDgwjupFzWg+/BbKk68rQSXWpm2Wx/SLSwTg&#xA;W4kSIjjEzGQPIGUFAvLp8t8jM0OdLGNnlb0V/KdukFysfkWKWVJZCs36Wl4oIlMkkPElOTIgPxVo&#xA;abVPXGGX+n/sW84/6P2qR8rRGxt7NPJRuNSTgt1erqQQM8jNbogiDFBSXjVvbwPLJeLvfHt7mPh7&#xA;Vw7+92meV7m6vZIdP8mw3UksSTpGt+OKCP4WoLg8v7xlLKfCm6nDLKAN5/Yxjjs7R+1fD5bgibUE&#xA;fyfFcXMTrCFGoyAxyQIJbqikcG+Bx4cf2a4+Ly9f2fJfD5+n7fmoWPl6OOSOK58mpdmBEa44aqEa&#xA;XjblnYMrsvFiPU+EbH4a9slLJ3Tr/N82Ax98PtdZ+VX9WUt5UjnjaRni9bVI4UCM4KoG9RQ6r6Ui&#xA;Bgd6+NMTm/pf7FAxf0f9kirvRdN+vxKvkiO1gIR5FOrtMCiSD1CJELUJEqA0BIG9PADIa+v/AGLI&#xA;4xf0f7JKfN2m6foCfU73y7FBe3SM9vcxX8kyJQyL9gdxyRqMew8TlmGZnuJbe5rywENjHf3sJWR4&#xA;2DoxVx0ZTQj6RmRKIkKIsNEJGJsGitllklcvI5dz1ZiSfvOCEIxFRFBlKcpG5Gypk4UIe5HQ/RkJ&#xA;NsE3D2mp6Mlvy4XkBrQmgb4Fj+j4IkoTtXlUj4cwMUvCnKMvpkbB9+5+Nk/AiuRc+cPEiJR+qPMf&#xA;jpVfHnzCUGtuysSg9I1XgyvVh03UkZmGQcPhJQTEs1foA9hsMrApvJXiKiEn7WTphxbp3dTTLHba&#xA;lbPxmtpecZX9gk/Woj8+TSr/ALHMfSb4+A9Nv9Lt9o3+Ldqv7zi/nb/6b9R2+D7I8oa9b675dstS&#xA;t2rHcQLLTqVDCvBvZejDxzU5I8MiHPhKxadEkKWPSgO4+ChO23Xj/LkGTmJHOv7NOXMV6/78p19q&#xA;Yq48gd+X2gvxUJqR7fteGKuqf+G49O//ADX79MVcvInbl9or8NK1Hz/a8fbFXKSeFP2q8eIp068K&#xA;9PeuKuUk8KftV48RTp14V6e9cVaqaf7Dl07f80e3XFVssyRIXduK8eXTsew/yPbrir5+/Nr83LnV&#xA;bmTy15akZ42YxXd5GatIehijYdf8pvoG3Xa6XSgeqTrtTqL9MXkS291pt56ETKZ3aG+0+UCqvNAW&#xA;oq1+0pJcLt8RApscrz5YmfiDlC4y8hKj9npvuFt2nxyMDA85VKPmRe3x3rvNBC6tZQhEvLQf7jZ2&#xA;Jtmry9Jj8TW0p6hkPQn7Q+LodthGdijzDhmNG0EF3yTWSmehamNJ1KHUDZ2t/wCjypaX0frW78lK&#xA;/HHVa0rUb9cZw4hV17kRnRurT2fz/NNbrbroekRwxl/SQWzPwEoQMFMskhH93X2JOVjB5yZnN5Bc&#xA;PzD1NYTbw2FhBaPUyWsUBELksX+OMsValabjph8Ac7KPGPcFsfniZLZ7b9D6W0L8KqbdtvTR1Uj4&#xA;/GQt/rb4fB3uyx8XaqCVatqp1K5FwbW2tGpQpaR+ih8PgBIy2EeEVbVOV9EGDk2DfLFaVHuZ5I44&#xA;nkZ44QREjMSqBjyIUHpUmu2NKp8sVponFVpOBLROKVjAEUPTAWQQrwupqhr4djlUot8ZqbLM5q1S&#xA;fEnIiFcgzOS+ZXpEF3O5yQDAyts4UJpozpPBJZSuEFAod/sopaschJ6COY0Y0J4O2YUicWUHpP8A&#xA;3Q/WP9yO9zK8TF5w/wByf1H4+o9z178gPPZ0u8m8o6mzQKWkawD1BVgT6sBHijVan+t7ZHW4b9ce&#xA;S6XL/CX0QWHp8gzU4qQ/Vd+9PA9hmrc5ztT1PiZeNPtb8a/zdeVe3XFW2ND1cfEBQ79vs9ftHxxS&#xA;1y/ym+3x/wCbf9b3/HFDamp6ufiIoNu32ev2vfFLSNX0/iZuVem3Kn8vSlO+KHI1fT+Jm5V6bcqf&#xA;y9KU74qpzXEUMZkkdlUJXfuT0Yb9P8n8MQFfPX5tfm7d6xcv5c8uSM0RPpXV1EalydjFER2/mYbd&#xA;ht12ml0wHqk67Uai/TF5uPqOiWPqScZ551IRAdpR0IqNxAD9pusp2HwVOQzZp55nHjNAfVL+b5D+&#xA;n/ueZ3oLjxjGOOe5PId/mf6P38h1LGb27ub25e4ncvM5qW/AUA2AA2AHTMzHhjCIhEVEfj+3va5Z&#xA;DKXETurx6jdwu8pZo5ZRSeRQHSUdaTRN8D7+Pz3O+VDAYCo/T3d3uP6PlQ2bTnjk3l9Xf3+8d/n8&#xA;7O6HBzLcRH6Lo+o61qdvpmnReve3JKxR1ArQFmJJIAAVSTglMRFlYxJNBnkf5BfmI/2YLY/891/p&#xA;mP8Ancbd+Umqn/nH38yFFWt7Yf8ARwmP57Gv5Oak/wCRX5gJ9qG2/wCR65L87jY/k5sP13QdU0HU&#xA;pNO1OH0bmMBqAhlZW+yysKgg/wCe+ZOPIJCw484GJopeDk2DdcUUseUL1NMBLIRcJPeoxteFdXCh&#xA;onAlrc9Biq01HXAyCwnAkLScDJYalqDpgZNMKGmJUOhneCZJkoWWvwturKRRlYdwwNDlObEMkTE/&#xA;jz945hvw5TjkJD8eXuPIsi9KTUIob7T3kF/b0eBkJ9UiBaihFP38CqK0+2lG2YGtGmz88eT6hz/4&#xA;oeR6jodu4tmowV64fSfs/onzHQ9Rvtu93/KT85rXV4YtI1mQW+sRj92w+zKAN3jB2NR1Xt1G3TH1&#xA;OlMDY5NuDUA7F6+rVQvGaotCjKeQAbuv81fwzBcpcY2U0CkfFw2NdiK0+XvirVH8D9r0/o/l+X+V&#xA;irYjZtipNGKUJpsN6fL3xVpQ7cagn1K1rty4+NPs09uuKqF5ewWlv690/GNgeRb4eXH/AIjT2wgW&#xA;pNPnf81vzgudcmfQPLcjNbOxjuLqI7yE7FIiOx/aYbU6bbnaabS8Pqk67PqOLYPPFFlotiJZQs88&#xA;6kRxg7SjodxuLcH7TdZTsPgqcqzZp55nHjNAfVL+b5D+n/ueZ3oJx4xjHHPcnkO/zPl9/IdSxu7u&#xA;7m8uHuLhzJNIasx+4AAbAAbADoMzsWKOOIjEVEfj8Hq0zmZGzzbijC/Eftfqy4BokbVC2StjSHBy&#xA;DayT8vfMtp5a846drd5E89raNJ60cVOZWWJ4iV5EAkc60JGV5oGcCAzxT4ZAvSvMv5pflrr1/Nez&#xA;S+ZLd5bcWqxW4so0jQVPKP42ZZKu1X5VKsU+waZhw02SIr0/a5MtRA/zkoj86flxEipHdeZpAsMc&#xA;FJ3tZVZYnLj1EZir15cCGFOHw9Mn4GT+j9rHx4f0kR5e/MXyFoEwkshrc5CSRKt20MoCSGI8R+8G&#xA;ymGq+HJvHGemnLnwoGogO9h/5gea7fzN5gOoW0TxQJCkMYloHIUliSFLAbsR1OZWnxGEaLi5snHK&#xA;2N8qZfbVS0vgtNKbgNSvbAWQ2dXsMVVq5JrRWnWD3krjksUMKmSeZzREQbVNKk1JAAG5OUZ9QMQG&#xA;xMpGgBzJ/G5PIDctkMZly2A5nuTgpp8EQ9OKOMEco57zk8re6wR8kUMNwHB/1jlccWWe85V/Rhy/&#xA;0x9R944f6rEzjH6RfnL9XIe48XvQ4+r3PwO9lJIdkikRrRj/AKsiCOIfORqZGemMfplOPx4v91f2&#xA;U34dRf1xifs/3NfbaTaha/V5H9NZEEZpcW0wpLESdq7Dku/2qD3AqKjFmkDw5KvoRyl+o+VnyJ3q&#xA;/JhhIcWO66g8x+sedDfmBtYWoIqMy3FprkR0wJpYxJNTgSAs3JoOuBkjbC8nsXLRnkr09WOpAJU1&#xA;VlI3V0O6sNxlGo0oyUeUo8j3fsPUdfk24NSYWOcTzH46joU3kjtdTjN3BIIrmMh2l+x8dRQy8f7l&#xA;6/7tA9NtuXBq5Vi1RifDyij07j/VP+95jzFFnk09jjxm4/aP6w/33LlyNhm/lP8AOzzd5aaOy1mN&#xA;7+2ABjl6XHA9HFTwlBpsynf+Y5LJo4z3iwx6gx5vXdB/PfyDqiKJLpbOWvxRykQn/U/ecVof8ljm&#xA;DPSzDlx1ESyy285eWLhVMN4r8jUBSW2/l+EH4f8AOmUnHIdGwZInqoXnn/yfZIXuL+FUBJ/eOqCn&#xA;8tX4jiMIxSPRTliOrBvMf/OQ/lGwUxaaX1C5AIpEOYbw5MaJt7MflmRj0cjzaZ6kB415r/Mbzf5x&#xA;LrPL9T0tm4NEjni3gssvVz/kIN/5czseGGPfq4c8sppG7WekRlJY/UuyP95n2b5TgE+mn/FQPNv2&#xA;yBQHGOaWo2xmsf8AP/4jv/r/AE/zeI3UxjGPeYuXd/xX6vnW1kt3d3F3cPcXDmSaQ1Zj9wAA2AA2&#xA;AGwGZuHDHHERiKiPx+D1a5zMjZ5rFou5y0NZ3bEqnYHDaOFvljaKUgcizXA4ULgcKFwOKG0ZiKkU&#xA;xCCF3IAVw2ilheuC2VNcsbWnVritKiinzwhiS2zUUnww2gBN4ZUt7GKM0IjjF7PG1PjmkbhAp/mV&#xA;Y2EgB8W8c1+AceWUz09EfcPq+ctj/Vi5GYcMRHv3P6Ps3HvKV3moSc2ZmMkzkl3Y1JJ6knNgZVsH&#xA;Hhivmh0vJ2BqKr3HUH6DgGQsziiER9cMluCw5tagFCTubdzweJj4At8PzPtlGbGJCh+C3YpmEgfx&#xA;+CEGBwZ4614MQD45LHKwCuSNGmickwW7k0HXFKskYUe/fCAwJtvChuOSWKVZoXaKZPsSISrDtsRl&#xA;eTFGceGQsFsx5JQNxNFMYNa/dGG6iBiJJrEqFOR/aNu4MVe1Y/Tb3zCOmyQ/u5WO6X6JfV/puPyD&#xA;kjNCf1ij3x/Vy+XCuePRbreN0jc/Zj5tHQe63CyLX/o4yX5rJH64S94qQ+z1f7FicET9Eh937P8A&#xA;ZLDoth/y1JX/AF7T+F3j+ej/ADZf6TJ/xKfy0u8f6aP63foayHxC5jIHUGS0Hz/4+ZP+InH89H+b&#xA;L/ST/wCJQdPLvH+mj+tcG0O3H94JT1Cxq05BHY81toQPfjJg8bNPaMK/rED7I8R+B4V8KEdzL5ft&#xA;r9KlPrtwWH1RTa0HFZuXOcL14iSirGO1IlQU2NcRouLfKePy5R/0u9/5xlvypBzCP0Dh8+vz/VW3&#xA;NLaAZnNC3kMU0skJJAwFMVaGGuSiGE5uc8WI8DiVHJ9b/wDWJ/8A2pv+Smaj9/5uy/c+Tf8A1ih/&#xA;2p/+SmP+Eea/ufJ3/WKP/an/AOSmH/CPNH7nyb/6xS/7U/8AyUx/wjzX9z5O/wCsU/8AtT/8lMf8&#xA;I81/c+SEvf8AoUn1B636O5U29L63xp/zy2rhH5jzR+48kP8A9Yhf8uf/AHMMP+EfikfuPxbv+sQ/&#xA;+XP/ALmGP+Efil/cfi0TY/8AQpfJvQ/Rtab+t9a/D1f4YD+Y80/uEZ/1ir/2p/8Akpg/wjzX9x5K&#xA;Vz/0Kj6D+r+ifTp8XD1uVPbh8X3Y/wCEea/uPJDP/wBCoem3P6twpFz/AOOjSnD9zX/YfZyOLxq9&#xA;Pee7ne/2ssnhX6vLv7tvsQFz/wBCd+oPV+rcqfs/pTpX/J2yw/mPxTEeD0/S0n/Qnn7Ho/8Ac2wj&#xA;8z+KYnwOv6VZf+hQKNT6nSnxf8dGlKj8K5H/AAj8UyPg/i0VYf8AQo/x+h+je3L1/rfvSnrfwyP7&#xA;/wA0/uUV/wBYn/8Aam/5KY/v/NP7nyWN/wBCnVH/AByK/wCT63/GuEfmPNB8Hya/6xO/7Vf/AE8Y&#xA;f8I80fuPJr/rE3/tV/8ATzg/wjzX9z5O/wCsTf8AtV/9POP+Eeaf3Pk7/rE3/tV/9PGP+Eea/ufJ&#xA;o/8AQpnf9F/9PGP+Eea/ufJY/wD0KNTf9FfR9Z/hg/f+af3Ta/8AQpFBT9Ff9PGH9/5r+6Xf9Yl/&#xA;9qv/AKecf8I80fufJ3/WJf8A2q/+nnH/AAjzX9z5LJf+hSOB5foyn+T9ar/wu+P+Eea/ufJR/wCs&#xA;Qv8AtX/9PuP+Efil/cqM/wD0J9Vef1Svb0/0j+PD+OEfmPxSnwfxbSf9Cg/s+h/3NcmPzP4prP5f&#xA;8Wrn/oUOu/1Cvev16uQ/wjz+xsHgv//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:2d53a77b-ef91-4ff2-ab21-046ac9d8398d</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:2d53a77b-ef91-4ff2-ab21-046ac9d8398d</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:7764b46c-c153-4790-9176-de507dd722d8</stRef:instanceID>
            <stRef:documentID>xmp.did:f65e1d90-3bb1-4d44-93a7-57b889fb4443</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9055feea-6df3-418a-84b0-35eb367eec15</stEvt:instanceID>
                  <stEvt:when>2016-04-18T22:41:34+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2d53a77b-ef91-4ff2-ab21-046ac9d8398d</stEvt:instanceID>
                  <stEvt:when>2022-09-13T22:13:55+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 26.3 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
         <pdf:Producer>Adobe PDF library 16.07</pdf:Producer>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>820.000000</stDim:w>
            <stDim:h>311.999984</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Montserrat-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Montserrat</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 7.200;PS 007.200;hotconv 1.0.88;makeotf.lib2.5.64775</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Montserrat-Regular.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Poppins-Medium</stFnt:fontName>
                  <stFnt:fontFamily>Poppins</stFnt:fontFamily>
                  <stFnt:fontFace>Medium</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 3.200;PS 1.000;hotconv 16.6.54;makeotf.lib2.5.65590</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Poppins-Medium.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -312 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 312 li
820 312 li
820 0 li
cp
clp
449.758 312 mo
0 312 li
0 0 li
820 0 li
761.758 0 li
449.758 312 li
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[230.548 230.548 -230.548 230.548 216.499 124.526 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0666667 .278431 .486275 ]
/C1 [.0117647 .145098 .305882 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[230.548 230.548 -230.548 230.548 216.499 124.526 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~&J,Kb&.fBa&.fBa&.fBa&.fB`%hB0]%hB0]%hB0]%hB0]%h9'Z%LrsY%LrsY%LrsY%LrsX%1NaU%1NaU
%1NaU%1NaU%1N^S$k*OQ$k*OQ$k*OQ$k*OQ$O[=M$O[=M$O[=M$O[=M$O[:K$47+I$47+I$47+I$47+I
$4."F#mgnE#mgnE#mgnE#mgnD#RC\A#RC\A#RC\A#RC\A#R:S>#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89
"pP89"pP89"pP57"U,&5"U,&5"U,&5"U,&5"9\i1"9\i1"9\i1"9\i1"9\f/!s8W-!s8W-!s8W-!s8W-
~>
<~7n,s;7Rfj:77BX677BX66psF26psF16UO4.6UO4-6:+"*6:*t(5s[e&5s[b$5X7S"5X.It5<h@s5<_7p
5!D.o4Ztqk4Ztqk4?P_g4?P_f4$,Mc4$,Mb3]];_3]]8]3B9)[3B9&Y3&ilW3&`cT2`EZS2`<QP2E!HO
2Dm?L2)R6K1c.$G1c.$G1G^gC1G^gB1,:U?1,:U>0ekC;0ek@90JG170JG.50/"t30.nk0/hSb//hJY,
/M/P+/1`>'/1`>'.k<,#.k<,".Olnt.Olns.4H\p.4HYn-n$Jl-n$Gj-RU8h-RL/e-71&d-7'ra,pai`
~>
<~I!^3eH[C'bH?sm`H$O[\H$FRYG^+IWGB\7TG'8%PG'8"NF`hhKFEDVHFE;MEF)uDCEcQ2@EH,u<EH,r:
E,]c7Df9Q4Df0H1DJj<.D/F-,Ci!p(Ci!m&CMR^#C2.KuC2%BrBk_6oBP;'mB4kjiB4bafAnGXdAS#Fa
ARo=^A7T1[@q0"Y@U`eU@UW\R@:<SP?smAM?XI/I?XI,G?=$rD?!U`A?!LW>>[1N<>?b<9>$>*5>$>'3
=]nm0=BJ[-=BAR*='&F'<`W7%<E3%!<E3!t<)cgq;c?Un;c6Lk;Gp@h;,L1f:f'tb:esk_:JXb]:/4PZ
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
gsave
820 312 mo
0 312 li
0 0 li
820 0 li
820 312 li
clp
820 312 mo
449.758 312 li
761.758 0 li
820 0 li
820 312 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 312 ]ct
[372 0 0 312.96 448.8 -.480042 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 775 
/H 652 
/M[775 0 0 -652 0 652 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 775 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 775 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 775 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
pB6fbp&]gIJc^N*Jc^N*oE#"8llX^ul5f+/m2VE2JfBdjo,<3!Jf<ejrC-0Cj[8<"o0Mt5rBTs=mlmU3
Jj$.tfK=aJL-5Drg,o!2Zif@kT)sTGJc^N*Jca0urugYMeK4N,nK$1#]c2PBJfEklS/Qtt^`*,>mmQ8)
lU(/.n3HP/qEFX;N'2bU`'(jtJioYfj?)uqp&pfdrW@iUJc^N*Jc^N*k5tZ+llX^ul5fU=h]/F2JfB:\
!#pP/Jf<>]r'g'Bj?r6"o0Mh1o0;\-Zos"(S3?$tJinWIp,ptho`W,6ecW#UJc^N*Jc^N*^]OKXllXb!
koJV#q&G82JfC-tko,-lJf=8"qaKsAj?r9#nj2b1q*4^?n33:(Jj$M)c9-\@O?E+rk<&>>VuuMkP6-=;
Jc^N*JcaX-rZLPLe/n#ur>jH/YoA96JfF5!OrAojbo6IJmmQ2'm6Ue=o0Mh1o0;_._**B5NBQttJinWI
k<.H[oE:K_q#Z-LJc^N*Jc^N*oE+t6llXb!l5f11lPu92JfBUep_n`&Jf<ejqF0j@j$W3#o0N%7q`sa;
mlm[5Jj#toh)p9OJij#qgH5$1[KGLkT`TfIJc^N*Jca0ur?1GKeK4T.miBt!^DhbDJfE\gTc/M$^`*&<
mmQ/&mR$J1n3HP/r''d;N]htW^HKLtJioJakr\N!o)tTdqu_]UJc^N*Jc^N*k5tQ(llXb!l5f[?h&N:2
JfB:\q\t>0Jf<>]q*ja?i^<-#og/UDmm-J/mln0CJj#G`lo]k^JirQch)k32_unKkY6':WJc^N*Jc`^h
r#k>JeK3rqi#MJ2N#R?fPoK-0Jf94ZoG[NommQ,%mm?S2n3Hk8pcn73S3;HeYW^GtJinrRpcIY#ncYuq
mK8^UJc^N*Jc^N*g&h-ollXb!n/_BHeJtq8JfB:\ll290Jf;lPpdOX>iC!-%s$H<Cmm-J/n34`QJj"oQ
q`KHmJir$Th`LB3QNR*dJc^N*Jc^N*JcbQGq]P5IeK3rqmMtI2RN$htL)^(0Jf94Zk8O+ammQ)$n3Z\3
pd"X?niuV-W]bqsTfqBtJinWIq`NdunH?B)huf_UJc^N*Jc^N*bl[_allXb!rZ1AHef;LFJfB:\h&E40
Jf;ECpI4O=iC!'#o0Mh1o0<4<o0/7!Jj$\.aZP/;Ps"IroK2RGT*+olM#r81Jc^N*Jcb*:qB5,HeK3ur
q]+?1W#L=-JfFD&N>dBeg)B]SmmQ)$n3Zk8r'Bg;o0;\-\35F,P!/=tJinWIloa8hn-$c6dK?`UJc^N*
Jc^N*^]O<SllXb!l5ek(oc/u2JfBdjo,<3!Jf=8"p-nF<iC!*$nj2b1rBL!?n33F,Jj$.tfK=aJL-5Dr
k<&/9XTRnlQNDa?Jc^N*JcaX-q&o#GeK49%q&S!*[Msf;JfEklS/Qttbo6:EmmQ,%o0WCBo0Mh1o0;_.
`BAf9K092sJinWIh)sa[mf]![r;qQPJc^N*Jc^N*oE+e1llXb!l5f@6k8^!2JfB:\!#pP/Jf<ejogS=;
iC!*$nj3+;pH\:6n33p:Jj#Vek<+>YJir`hjZDo6]*$mlV#l5MJc^N*Jca0up`SoFeK+]2lQ+Or_]+1H
JfE>]Wu?R.^`)l7mmQ,%mm?V3mm-J/!']p:P!+C[[6;etJio,Wo/lS+mKB6dp]HEUJc^N*Jc^N*k5tB#
llXe"koKaCfc7"2JfB:\nJdW0Jf<>]oL84:iC!*$q*FjCn3HS0mln<GJj#)Vp,mphJir3Yk<&)7aTKll
ZN>^[Jc^N*Jc`^hpE8fEeK3urj;db2O;icjM];F0Jf94ZoG[?jmmQ,%mm?V3n3I"<oKVh/TKRliVEN`t
JinWI!'KI,m0'Wql3!FUJc^N*Jc^N*g&gsjm2sk"oH!ZHef;.<JfB:\iZ"R0Jf;lPo0r.:i'[3)qa0j>
n3HS0n34lUJj"]KrB5ltJiq[Jkr\88Qim?iJc^N*Jc^N*JcbQGp)r]DeK3urnf6a2Sf<8#JfFS+L`1j`
k8Nq\mmQ,%mm?V3r'9p?niuV-Y!%A"QTa[tJinWInN?(ulib$)g]OGUJc^N*Jc^N*bl[P\m2sn#!$:DG
ef;XJJfB:\di5M0Jf;ECnjW%9i'[!#o0Mh1oKN=?n33("Jj$>$dl`4EM`gbroK2CBU]^;mN<4\5Jc^N*
Jcb*:ocWTCeK3ur!$'T1X;ca1JfF%qQPtGog)BNNmmQ,%n3["<pd+C7o0;_.]01a/LctVtJinWIi]QQh
lNGE6c3(HUJc^N*Jc^N*^]O-Nm2sk"l5f",nJm]2JfBF`r>L8+Jf=8"!(QNJn3l5&mm?V3n3HP/n33R0
Jj#eji]MfTJiromm5sV:Z30:mRf\0CJc^N*JcaX-oH<KBefON*oc;U'\Jp,>JfEMbVAb%)bo-ROnjW"8
iC!B,q*OX<n3HS0n34rWJj"]KpcXNtJiqLEmQ9\:R0/$BJc^N*Jc^N*oE+V,m2sk"l5fL:iuF^2JfB:\
p)Au0Jf<ejs$lQJn3l5&mm?V3r]p'?o0;\-YW[S$P!/=tJinWIloa_ul3+m)g&n;UJc^N*Jc^N*bl[JZ
llXn%rZ:>Fef;^LJfB:\c5X/0Jf;ECs$lQJmmQ,%n3Z_4mm-S2r]fm9Q9Bg_X$,)tJincMrB'X5l3*sd
oE1-UJc^N*Jc^N*k5t2sm2sk"lQ#sGf,Un3JfB:\k8Tp0Jf<>]r^QHIn3l5&n3[(>p-J15o0;_.]fgs1
K092sJinWIh)t3hklf96bQG<UJc^N*Jc^N*^]O'LllXe"l5f(.mi7Q2JfB:\!#pP/Jf=8"r^QHImmQ,%
n3Z_4nj*4?niuV-Ucj;mS3?$tJinWIp,qn-kle?qjo_.UJc^N*Jc^N*g&gdem2sn#p`8rHef;:@JfB:\
fGgk0Jf;lPrC6BImmQ,%qEjpCnj2b1o0;_.b<:G?Jj&]gO?A+Wc91\[kQI@Wrr[oUJc^N*Jc^N*oE+P*
m2sk"l5fR<i>eR2JfB:\nJdW0Jf<ejrC6?Hn3l5&mm?V3!'p'>o0;_.Ys!\%NBQttJinWIk</AukQJa)
fE8/UJc^N*Jc^N*bl[DXllXt'r#Y,Def;dNJfB:\aW%f0Jf;ECr'p9HmmQ,%n3Z_4mm-Y4r'0[7Qp$$a
VEN`tJinWI!'Kp9k6.adncP!UJc^N*Jc^N*k5t,qm2sk"m2c0Hf,Ut5JfB:\iZ"R0Jf<>]r'p6Gn3l5&
n3[.@oKht3o0;_.^HI03Jj'&qL-1&MfKAjhk60-6aof0UJc^N*Jc^N*^]O!JllXe"l5f.0m2VE2JfB:\
q\t>0Jf=8"qaU0GmmQ,%n3Z_4oK`@?niuV-VEKMoQTa[tJinWInN?P-joi-qj9)"UJc^N*Jc^N*g&g^c
m2sk"q]52Ief;@BJfB:\di5M0Jf;lPqaU-Fn3l5&r'L'Cnj2b1o0;_.brpYAJj&NbPrsX\aZT>[joh4W
rW@iUJc^N*Jc^N*oE+J(llXe"l5fX>i#JL2JfB:\ll290Jf<ejqF:'FmmQ/&mm?Y4!($*>o0;_.ZTWn'
LctVtJinWIi]R#ujoiU)ecW#UJc^N*Jc^N*bl[;Um2t.*qB"oBef;jPJfB:\`#HH0Jf;ECqF:$En3l5&
n3Z_4n3He6qEOI5RQZ6cTfqBtJinWIq`O^:jTMUdn,njUJc^N*Jc^N*k5t&ollXe"miD<Hf,V%7JfB:\
h&E40Jf<>]q*ssEmmQ/&n3Z\3n3HS0n34ZOJj"]KpcXNtJiqLEq`EmBdK@Pm])mQcJc^N*Jc`^hm3(d<
efO)sll>@3QQ(MqJfFD&N>dBeoG[NpnjW%9iC!*$o0N(8q`sa;mlm[5Jj#8[nN;CcJirB^r&`sB\HCgn
T`TfIJc^N*JcaX-m3(d<eK4Z0miBt!^DhbDJfDuS[2OW8bo6CInjW%9iC!T2o0W%7mm-J/mlo)]Jj"]K
krkItJipt6rB''CT*+unLB<&/Jc^N*JcbQGllb[;efO)sqAe?3V&P"*JfEklS/Qttk8O+bo0r+9i^<0$
p-J[Dn3HS0mQS*CJj"`L!'GiqJiqjOr]B-C`rjfnY6':WJc^N*Jca0ullb[;h]DP6l5eFqbo;6RJfDHD
`#=4G^`)u;njW%9iC!*$o0Mk2q`jm@m67+)Jj#Vek<+>YJir`hs#]6DXTRtnPlcO=Jc^N*Jcb*:llbX:
efO?%q]46-ZQ"K8JfE>]Wu?R.g)B]To0r+9i^<9's$H9Bn3HS0m68NQJj"]Ko0&0tJiq=@!'B3De-!_n
]E3ZdJc^N*Jc`^hlQGR:efO)smMtL3R2^_sJfF5!OrAojoG[HnnjW%9iC!*$o0N.:q*=O9loqO7Jj#)V
p,mphJir3YiWQjqhuf_UJc^N*Jc^N*g&gR_m2sn#rZ1AHef;LFJfB:\aW%f0Jf;lPp."XBn3l5&!(-3B
o0Mk2o0;P)eNJLIJj&0XT0.]f^c^TZT`b,nM#r81Jc^N*JcbQGl6,I9efO)sr#FK3V]14,JfE\gTc/M$
k8O%`njW%9i^<0$pd+gDn3HS0lTVsEJj"]KrB5ltJiqaLi<77)dfZfUJc^N*Jc^N*bl[/Qm2t:.p)`K>
f,W'TJfB:\\f8a0Jf;ECp."UAn3l5&n3Z_4n3Hq:pHRq,UHO2lQTa[tJinWIoK;(8Y64+nQNDa?Jc^N*
Jcb*:kof@8efOE'q&S$+[2X]:JfE/XYSr*3g)BWRo0r+9i^<?)rBg*An3HP/l9<BSJj"]KmQHgtJiq:?
huqX6`<3gUJc^N*Jc^N*^]FKZl6,I9efO)sn/UX3Ri?quJfF%qQPtGooG[BlnjW%9iC!*$o0N4<pH\=7
kruC9Jj"oQq`KHmJir3Yhup^qhZKYUJc^N*Jc^N*g&_6tl6,I9efFf3lQ+Rs_Ae(GJfDWI^D_\Bbo64D
o0r.:i^3]5n3Z_4n3HS0kW[]`Jj"]Kh`[btJiph2huoeWp]HEUJc^N*Jc^N*oE,%9l6,I9efO,tr>aN2
W>gF.JfEMbVAb%)k8Nt^njW%9i^<3%q*FjCnNcY0kWZgGJj"]KpcXNtJiqaLhZV+)d0$ZUJc^N*Jc^N*
bl[ngl6,I9iu[h6l5eIrcl7QUJfD*:c5M9Q^`)f6o0r.:iC!*$o0Mk2s$-0@k<>h-Jj#8[nN;CcJirZf
hZU1dlN<LUJc^N*Jc^N*k5tZ,kof@8f,jQ)pDqj*[Msf;JfDuS[2OW8g)BQPo0r+9i^<E+qa0m?n3HS0
k!%-TJj"]KkrkItJiq:?h?;L6_ZR[UJc^N*Jc^N*^]OKYl6,I9efO,tnJp[2SK!/"JfEklS/QttoG[<j
njW%9i^<3%nj31=p-A15k!$7;Jj"`L!'GiqJir3Yh?:Rqh#jMUJc^N*Jc^N*g&h6sl6,I9f,ao5l5eIr
`#F:IJfDHD`#=4Gbo6.Bo0r.:j?ro6n3Z_4n3HS0jZ_QbJj"]Kg-)DtJiph2h?9YWpB-?UJc^N*Jc^N*
oE+t7l6,I9f,j2truB]3WZ-O/JfE>]Wu?R.k8Nn\njW%9i^<3%qa($Dn3HS0j?CRHJj"]Ko0&0tJiqaL
h#tt)cNCNUJc^N*Jc^N*bl[hel6,I9jW<t6lQ+OrdMmcWJfCp5di*fV^`)`4o0r.:iC!*$o0Mn3!'g'>
j?B\/Jj#)Vp,mphJirZfh#t%dkl[@UJc^N*Jc^N*k5tQ)l6,I9f,jW+oc;X(\/U#=JfDfN\f-/=g)BKN
o0r+9i^<K-q*O[=n3HS0j$)!VJj"]Kj?9+tJiq:?g]Z@6_?7UUJc^N*Jc^N*^]OEWl6,I9efO,to,Qj3
Sf<8#JfE\gTc/M$oG[3go0r.:i^<3%o0N=?oK`"4i]b"<Jj"]KrB5ltJir3Yg]YFqgB4AUJc^N*Jc^N*
g&h0ql6,I9fcL,6lQ+Rs`>aCJJfD9?aVoaLbo6(@o0r.:k!T&6n3Z_4nNc\1iBH<cJj"]KeNL&tJiph2
g]XMWo`L3UJc^N*Jc^N*oE+n5l6,I9f,j2tf,Uk2JfB:\di5M0Jf<ejn4)t;n3l8'n3[(>pHe:6o0;1t
b<:G?Jj&NbPrsX\g-"*mcNDGp[/tp]Jc^N*Jca0uq]Y5Im2tL4n/gm9f,W6YJfB:\WuK\0Jf;ECmmcn;
n3l8'n3Z_4nN[(>o0;.sZ9<e&LctVtJinWIoK:k2[0,RoS-"9DJc^N*Jcb*:qB>,Hm2sq$p`8uIf,V=?
JfB:\`#HH0Jf<>]!(ZNJo0r+9i^<Q/pHnI;nNc\1h`faWJj"]Kh`[btJiq:?g'$46^]VIUJc^N*Jc^N*
^]O?Ul6,I9f,j2toc3!3TGrJ%JfEMbVAb%)oGR^"mmcn;n3l8'n3Z_4s$6-?o0;+r_**B5Jj&llM`cSR
k<.H$_ZSTpW<.YQJc^N*JcaX-qB>,Hm2t((r#Y/Ef,VgMJfB:\[2[C0Jf;lPs$uQJo0r.:kX557n3Z_4
n3HS0hEL0eJj"]Kcon]tJiph2g'"AWo)k'UJc^N*Jc^N*oE+h3l6,I9f,j9!!$0Z2XW)j2JfDuS[2OW8
k8O@jn4)t;n3l8'n3[.@og/+5o0;%pcoltDJj&?]RQQ0ag-"$kd0%Sp[fV-_Jc^N*Jca0uq'##Gm2tR6
miLa7f,W<[JfB:\VAn>0Jf;ECr^ZHIo0r+9j$W<&o0Mt5r]p'>h*/;2Jj"`L!'GiqJirZff`\bdjo_.U
Jc^N*Jc^N*k5tE%lQGR:efOZ.nf?=%],Q>@JfDHD`#=4Gg)Br\n4*"<mR6,'qa1!Co0Mk2o0;"oh`ZQS
Jj%gNWB>bpbrjY^h?1Io`<(VmJc^N*Jc`^hp`\oFm2sq$lQ,[=iZ+X2JfB:\fGgk0Jf=8"r^ZHInjVt7
j?rE'o0Mn3o0:tn`]\o:Jj&]gO?A+Wk<.B"`<4`pWrdkSJc^N*JcaX-p`\oFm2t.*q]>#Cf,VmOJfB:\
YT)%0Jf;lPrC??Ho0r%7m6g\:n3Z_4n3HS0gHP$gJj"]Kb<<?tJiph2fEA5WncP!UJc^N*Jc^N*oE+b1
l6,L:efO6"rZ0T1Y8`'4JfDfN\f-/=k8O:hn4*"<lpTu'n3R+@oKht3o0:qmeNJLIJj&0XT0.]fg-"!j
dK@Yp\,q6`Jc^N*Jca0upEAfEm2tX8m2kR6f,W?\JfB:\Tc;u0Jf;ECrC?<Go0r"6k!SW)o0N%7rBTs=
ffm&3Jj"]KrB5ltJirZff*&Vdj9)"UJc^N*Jc^N*k5t?#lQGR:f,jf0n/^.$]GlGAJfD9?aVoaLg)BlZ
n4*"<lU9o'rBg-Co0Mk2o0:nlj?8)XJj%XIXuq:ubrjS\hugXp`WC_nJc^N*Jc`^hp*&]DmN:"$lQ,a?
i#JL2JfB:\di5M0Jf=8"r($6GnjVk4kX4i+oK`ICn3HS0fKRJAJj"]KmQHgtJir3Yeca"qf)r)UJc^N*
Jc^N*g&gskl6,I9h]DS7lQ+Rsar>pOJfCa0fG]>[bo6ILn4*"<l9t21pI"F:o0Mn3o0:hjo0%[gJj%+:
]f^m/^c^0NXTS%pP6-=;Jc^N*JcbQGoc`WDm2sq$miD<HfGq+7JfB:\`#HH0Jf<ejqa^-Fo0qn3ksOu-
!(-9Cn3HV1eiqeNJj"]Kh`[btJiqaLecaJ)aTK*UJc^N*Jc^N*bl[P]l6,I9m2kR7lQ+RsfGfD]JfC4!
k8Jpj^`*)?n4)t;ksXf(n3Z_4p-AL?o0:ei_**B5Jj&llM`cSRoK:Y,]*%'qTE9]HJc^N*Jcb*:oc`TC
m2sq$r>k>If,VLDJfB:\[2[C0Jf<>]qFC$Eo0qk2l9kS<o0W%7n3HS0eNW4\Jj"]Kcon]tJiq:?eHFk6
]*$+UJc^N*Jc^N*^]O-OlQGR:f,j2tqAeB4U`4n)JfDuS[2OW8oG[Qrn4*"<k="W'n3Zh7r^$'>o0:_g
coltDJj&?]RQQ0ak<.8ta90rpXoa1VJc^N*JcaX-oHEKBm2t:.pE&W@fGr'RJfB:\VAn>0Jf;lPq+'pD
o0qh1pI"XAn3Z_4n3HS0e3<XjJj"]K_*,XtJiph2e-)rWmfSdUJc^N*Jc^N*oE+V-lQGR:f,jH&q]49.
Z5\B7JfDHD`#=4Gk8O.dn4*"<k!\Q'o0WIDo0Mk2o0:\fh`ZQSJj%gNWB>bpg-!jfecWtq])mQcJc^N*
Jca0uo-*BAmN:j<l5o73f,WH_JfB:\QQ,90Jf;ECq+'pDo0qb/m6gA0o0N.:qEXX:dQYZ6Jj"]Ko0&0t
JirZfe-*Ddi<,eUJc^N*Jc^N*k5t5ul6,I9fH1#4m2ah!^DhbDJfCp5di*fVg)B`Vn4*"<j[AN(!(-3B
o0Mk2oKU_emQH.bJj%:?\3,@*brjGXj9)sqaT@%qJc^N*Jc`^hnfd<Am2sq$lQ,jBh&N:2JfB:\aW%f0
Jf=8"pdagCo0q_.mR-M2pHeaDn3HS0d6?)DJj"]Kj?9+tJir3Ydfdeqe,ulUJc^N*Jc^N*g&gggl6,L:
iZ@e7lQ+Rsbo;6RJfCC&iYmCebo6@In4*"<j$`f4oL&+7o0Mn3o0:ScrB5`qJj$b0a#nr9^c^'KYQO7p
Q3)X>Jc^N*JcbQGnfd9@m2st%nf@NHfGq4:JfB:\\f8a0Jf<ejpIF^Bo0q\-n3ch7rBg*AnNc\1cT^DQ
Jj"]KeNL&tJiqaLdKJ2)`WNmUJc^N*Jc^N*bl[DYlQGR:n/gd7lQ+Utg)GV_JfBjlnJZut^`)r;n4*"<
i^E9'nNuh5q*=^?o0:Pbb<:G?Jj&NbPrsX\oK:P)^'!9qUB6#KJc^N*Jcb*:nKI0?mN:%%!$1DHf,VUG
JfB:\WuK\0Jf<>]pIF^Bo0qY,nO!:Dn3Zb5n3HS0c9Ch_Jj"]K`]_!tJiq:?dKJY6\HBtUJc^N*Jc^N*
^]O$Ll6,L:f,j5ur#FK3V]14,JfDWI^D_\BoG[Enn4*"<j$`B(n3Zq:qa'a;o0:J`g-($NJj&!SUca5k
k<.,pbQH8qYl]LYJc^N*JcaX-n0.*?m2tC1oH*<=fGr0UJfB:\S/^W0Jf;lPp.+UAo0qY,s$QBFn3Z_4
n3HV1bru+kK0=fL[lqqtJiph2d0-`WliWRUJc^N*Jc^N*oE+M*l6,L:f,jQ)p`8!,Zl=T9JfD*:c5M9Q
k8O%an4*"<i^E9'p-S[Do0Mk2o0:G_krjV]Jj%IDZTNh%g-!acf`T1q^&ilfJc^N*Jca0un0.'>mN:s?
k8rq0f,WQbJfB:\N>qR0Jf;ECogeL@o0q\-n3c\3o0N7=pH\=7b<F99Jj"]KkrkItJirZfcih,dhZKYU
Jc^N*Jc^N*k5t)qlQGR:fH0;ufGqaIJfB:\VAn>0Jf<>]ogeL@o0qY,o0`OFn3Z_4nNc\1b!,S`Jj"]K
_*,XtJiq:?ciiM6[fahUJc^N*Jc^N*^]NsJl6,L:f,j5urZ'Z4W#L=-JfDHD`#=4GoG[Bmn4*"<i^E9'
nO!(<qEaU9oKUG]h`ZQSJj%gNWB>bpk<.)oblc>qZ3#UZJc^N*JcaX-migs=mN:O3o,d3<fGr3VJfB:\
QQ,90Jf;lPoLJC?o0q\-!(69Dn3Zb5n3HS0cT_4iLcp>QZ9?StJiph2cNLTWlN<LUJc^N*Jc^N*oE+G(
lQGR:fH0]+pDqj*[Msf;JfCp5di*fVk8Nt_n4*"<i^E<(pHn^Co0Mn3o0:;[mQH.bJj%:?\3,@*g-![a
gB5@r^B/ugJc^N*Jca0umNLm=m2tp@jW<_.fGr]dJfB:\L`?40Jf;ECoLJC?o0qY,n3c_4o0N:>p-A46
a$/$:Jj"]Kj?9+tJirZfcNM&dh#jMUJc^N*Jc^N*k5t&pl6,L:fcL/7lQ+Ut_]+1HJfCC&iYmCeg)BQQ
n4*"<j$`N,rBp*Ao0Mk2oKU>ZrB5`qJj$b0a#nr9brj;TkQA6qblWIuJc^N*Jc`^hm31d<m2st%lQ-!F
g)R(2JfB:\\f8a0Jf=8"o1/:>o0q\-n3c\3r'C-En3HS0`]iHHJj"]KeNL&tJir3Yc32Gqci^TUJc^N*
Jc^N*g&gXblQGR:k8s18lQ+Rsd2RZVJfBjlnJZutbo61Dn4*"<j$Wl8nO)e4o0Mn3o0:Scp-+I!Jj$5!
ei\OH^cVT#cNLWXkl[@UJc^N*Jc^N*oE+D'l6,L:f,jZ,oc;[)[i9o<JfCa0fG]>[k8F=ko1/:>oL7b-
n3d"<q*O[=n3HV1`'3cUJj"]K`]_!tJiqaL!!U[Og]PCq_#f2iJc^N*Jca0ullk[;mN;'Bj<!V-fGr`e
JfB:\K,Xe/Jf;EC!(c]On4*"<j$`B(nNuh5rBU!?o0:/Wg-($NJj&!SUca5koK3*Wc32#eg]OGUJc^N*
Jc^N*k5sunlQGR:gE->8lQ+Ut`#F:IJfC4!k8Jpjg)9r^o1/:>o0qY,p-\aFn3Z_4nNc\1`'+/bK0=fL
[lqqtJiq:?rrp^Ol3"Erc2rS!Jc^N*Jc`^hllkX:mN:(&l5eLsWuHX0JfD*:c5M9QoG[a#o1/=?o0qY,
nO)e4rB^0DnNc\1_ER3IJj"]Kcon]tJir3Yrrp^Oci_Pq[/tp]Jc^N*JcaX-lQPR:mN:X6n/gm9fGr<Y
JfB:\N>qR0Jf;lPs%)`On4*"<j[B,:n3c_4o0Mk2oKU_enNN+!Jj$%qgH:'M^c_W#c31TYkQ@:UJc^N*
Jc^N*oE+>%lQGR:fH0f.oGuR(\/U#=JfCR+h&:k`k8O@ko1/:>o0q\-n3d%=pHnL<n3HS0_*7WWJj"]K
_*,XtJiqaLrWUUNh?1Rr_?,;jJc^N*Jca0ulQPR:m2u$Ciu[M,fGrcfJfB:\JfFY-L)RiGr^cWNnOE+=
i^E<(n3Z_4s$60@nisrSh`ZQSJj%gNWB>bpoK<*VcNM/ggB4AUJc^N*Jc^N*k5sollQGU;g`HA7lQ+Ut
`Z'LKJfC$qll(Hog)Br]o1/:>o0q\-pI"dEnNuh5nNcV/a$0AaLcp>QZ9?StJiq:?rWUUNlN=KrcN8\"
Jc^N*Jc`^hl65I9mN:%%ll?'HfGpt3JfB:\YT)%0Jf=8"r^cWNn4*"<j$`B(nO!4@p-J15nNXiRmQH.b
Jj%:?\3,@*k</\HcNMYublbBUJc^N*Jc^N*g&gO_lQGR:l5oC8lQ+Utdi3lXJfBLbq\k&)bo6OOo1/=?
o0qe0rC$0Cn3Zb5n3HJ-eirFaQT]p`UHRNtJiph2r<:LM\-(mrS-"9DJc^N*JcbQGl65F8mN:(&q&T&I
fGqF@JfB:\Tc;u0Jf<ejrCHNMn4*%=i^E<(qa1!Co0Mn3mm"WPrB5`qJj$b0a#nr9g-#<;cNN,-^]VIU
Jc^N*Jc^N*bl[,QlQGU;pE&97lQ+Uti>[@fJfB:\p`#,0^`*/Bo1/:>o0q\-n3c_4o0E@Anj)V-_*6pC
Jj"]KeNL&tJirZfqutFM`<4frW<.YQJc^N*Jcb*:koo@8m2t1+q]>&DfGqpNJfB:\OrNp0Jf<>]r(-HM
n4*"<j$`Z0q*X[=o0Mn3m6AfYp-+I!Jj$5!ei\OHbrkn-cNNV;Z3/JUJc^N*Jc^N*^]NaDlQGR:fH0E#
ruK`3XW)j2JfCa0fG]>[oG[Wuo1/=?o0qY,nO)e4!($9Dn3HA*_*7HRJj"]K`]_!tJir3YqutCLdf[er
[fV-_Jc^N*JcaX-kTT77mN:a9mN1[7fGrB[JfB:\K,Xe/Jf;lPr(-ELn4*"<kX>>:nO)e4o0Mn3lp'5g
k<>D!Jj#\gjZJ,W^c_MucNLc\jo_.UJc^N*Jc^N*oE+5"lQGU;f,jf0nK$:&\f65?JfC4!k8Jpjk8O7h
o1/:>o0q\-n3d.@og879nNcD)_EIr`K0=fL[lqqtJiqaLqZY:Ki<-gs_ubMlJc^N*Jca0ukTT77m2u-F
i#_2)fGrliJfB:\JfF;#O;bnQqag<KnOE+=j$`B(nNuh5nNcA(_*7*HJj"]Kcon]tJirZfqZY:K`rjrr
WrdkSJc^N*Jcb*:kTT46mN:=-qB"rCfGqsOJfB:\N>qR0Jf<>]qag<Kn4*%=i^EW1pd=O;oKht3l9EZ[
nNN+!Jj$%qgH:'Mbrkk,cNNY<YliDUJc^N*Jc^N*^]N[BlQGU;fH0H$rZ0W2XrDs3JfCR+h&:k`oG[Tt
o1/:>o0q\-nO)e4oKht3ks*!JpcX3lJj$q5_E<E4k</SEcihi#b6,6UJc^N*Jc^N*g&gF\lQGU;llPL7
llF^ueJj)ZJfB:\r>UJ0bo6FLoLJC?o0qn3qaBp@nNuh5nNc;&i'--aTfmujR6BgtJiph2q?>1J]*%-s
ScXKFJc^N*JcbQGk99.6m2st%r#P8IfGqOCJfB:\QQ,90Jf<ejqFL3JnOE+=j$`B(r^-6Do0Mn3k<I!N
q`]g!Jj$D&d6*"Cg-#38cNN50^&u=UJc^N*Jc^N*bl[#NlQGU;qB"N8lQ+Utiu<RhJfB:\mMhE0^`*&?
o1/:>oL7b-nO)h5oK`ICn3H/$_*79MJj"]Kb<<?tJirZfq$#+Ja91#rX9*tTJc^N*Jcb*:jrs%5mN:@.
q&\iBfGr!PJfB:\L`?40Jf<>]q+1-Jn4*"<j$`c3pI"F:oKht3k!.E\lopb!Jj#kli&lTRbrke*ciie>
YQN>UJc^N*Jc^N*^]NXAlQGU;fH0K%r>jN1Y8`'4JfCC&iYmCeoG[Nro1/=?o0q\-n3cb5!(-9CnNc2#
_*7f\Jj"]K]KO:tJir3Yq$#(IecX%s\H7?aJc^N*JcaX-jrs%5m2ta;lQ5@4fc8Q^JfB:\JfFJ(M]0hY
q+1*InOE+=l9tJ:n3c_4o0Mn3j?M`ih*.]!Jj#>]mlZ1a^c_DrcNLl_j9)"UJc^N*Jc^N*oE++tlQGU;
fH0u3miC%#]c2PBJfBjlnJZutk8O.eo1/:>oL7b-nO*=Co0W%7nNc,!bWb_aNBMkVXZb5tJiqaLp]]"I
ircpr`r^hoJc^N*Jca0ujWWq4mN;<IhB(u'fGrrkJfB:\JfEqnRMrs[pdk$In4*"<j$`E)n3Zh7s$?->
j$1@Do0%[gJj%+:]f^m/oK;mPcihGmecW#UJc^N*Jc^N*k5s`glQGU;i?%b8lQ+Utar>pOJfB=]!#gG-
g)B`Wo1/=?o0q\-r'U0Fn3Zb5n3H"ug-4[`S3;HeSiu0tJiq:?p]\tHnH5rse,k4'Jc^N*Jc`^hjWWq4
m2st%nK%NJfGq+7JfB:\S/^W0Jf=8"pdk!HnOE+=j$`B(o0WIDo0Mn3j$1=C!'Z#uJj$S+bWLJ>k</MC
cNMi%aTK*UJc^N*Jc^N*g&g=YlQGU;miLa8lQ+Xuf,K;\JfB:\o,Ec0bo6@Jo1/:>oL8(6pdFX>nNuh5
nNc,!k<@N^X$)%tO$3+tJiph2pBAnH]`[9sTE9]HJc^N*JcbQGj<<h3mN:(&rZ1AHfc7^FJfB:\N>qR0
Jf<ejpIOpHn4*"<j$`E)!(-3BoKi"4j$1dPnNN+!Jj$%qgH:'Mg-#*5ciiD3]*$+UJc^N*Jc^N*blRkh
jWWq4mN;?Jh&bf$g)T2nJfB:\JfEbiT,PK`pIOmGnOE+=j$`E)n3Zk8r^$$=j$14@pcX3lJj$q5_E<E4
oK;jOcNMDneH;rUJc^N*Jc^N*k5tZ-jrs%5m2t@0p)`H=gDnBUJfB:\JfFY-L)SbapIOmGnOE+=j$`i5
oL&.8o0Mn3j$29^i]a&!Jj#Mbl9'Y\brk_(cNNe@Xom2UJc^N*Jc^N*^]OKZjrs%5mN:(&nf@HFg`3R<
JfB:\QQ,90Jf=8"pIOmGn4*"<j@&K)oKrODo0Mn3j$1@Dq`]g!Jj$D&d6*"Ck</GAcihu'a90$UJc^N*
Jc^N*g&h3sk99.6mN:p>koT".h&P&dJfB:\JfF+sPo@mcp.4gGn4)t;mR6e;nO)h5o0Mn3j$2`kdlt!!
Jj"uSq)j6k^c_;ocih&biWGkUJc^N*Jc^N*oE+q7kTT77mN:(&ruL;Dh&O0KJfB:\L`?40Jf<ejp.4dF
nOE%;j[AW+n3Zb5nNc,!c9CSYQT]p`UHRNtJiqaLp'&bFjo`0saT@%qJc^N*Jca0uq]b8JlQGU;r>s`8
jW31tjr8mkJfB:\h]&@0^`)o;o1/=?n3uJ-nO)e4pd+jEn3H"u\N]sTJj"]K]KO:tJirZfp'&bFbQH>s
Y6':WJc^N*Jcb*:qBG/IlQGU;j<!t8jW34ubSu-QJfB:\p`#,0g)BZUo1/:>n3uM.r^69EnNuh5nNc,!
gcjOXVEKMoPWeItJiq:?o``\Fo)l)secLF)Jc^N*Jc`^hq',)IlQGU;fH0W)nf?X.Z5\B7JfBjlnJZut
oG[BnoLJC?mmZD-nO)t9rBg*AnNc,!_ERZWNBMkVXZb5tJir3Yo``\Ff`T7s]E3ZdJc^N*JcaX-p`f#I
lQGU;nK-m8iuR(ufc,M^JfB:\ko6'0bo67Go1/=?mR?_8p-eF<nNuh5nNc,!ks!BV[69+)Kg#DtJiph2
o``\F^B<EsU&ooJJc^N*JcbQGpEJrIlQGU;fH(#5iuR(u^`.kEJfB=]!#gG-k8O"ao1/=?m7$8-nj<CE
n3Zb5nNc,!cT^MUS3;HeSiu0tJiqaLo``YEk6&9taT@%qJc^N*Jca0up*/iHllb[;ruTo9i>pntk8T!l
JfB:\g)I"0^`)l:o1/:>m7$;.n3c_4q*FpEn3H&![6=RSK0=fL[lqqtJirZfoEESEblcDsYQBCXJc^N*
Jcb*:ocicHlQGU;jW=%8i>pqubo;6RJfB:\o,Ec0g)BTSoLJC?lp^5.s$Q?EnNuh5nNc,!h*0ITX$)%t
O$3+tJiq:?oEESEoE2/sf)gO*Jc^N*Jc`^hoHN]HlQGU;fH0Z*m2b7-ZQ"K8JfB[gp)8N$oG[?mo1/=?
lUC,-nO*":r'L!@nNc,!_`mTSP!+C[W'/ltJir3YoEESEg&o=s]`NceJc^N*JcaX-oHN]HlQGU;nfHs8
h]:eug)GV_JfB:\j;X^0bo64Fo1/=?l:(J9ogJ=;nNuh5nNc,!l9<<R\ikX.Jj',sKKR%4oEEPD_#rTt
UB6#KJc^N*JcbQGoHNZGllb^<fH/lijrD/UJfB:\JfFY-L)T4noLSRDnODb3m6pP5s$Q9BoKi"4j$1mS
i]a&!Jj#Mbl9'Y\g-"s1ciiP7\HBtUJc^N*Jc^N*bl[J\mNLm=mN2EMg)f&jjrES(JfB:\JfE5ZXr>(o
o18LDn4)Y2mR6P3nO!(<qa'^:j?L(:q`]g!Jj$D&d6*"CoK;^KcihVrdK?`UJc^N*Jc^N*k5t6!mNLm=
mN:R4o,c^.k8_bdJfB:\JfF+sPoA?po18ICnOD_2mmI.CnO)h5o0Mn3j$2Badlt!!Jj"uSq)j6kbrkS$
cij"DWrpuUJc^N*Jc^N*^]O*OmNLm=mN:(&oc<6:kT$rKJfB:\L`?40Jf=8"o18ICnOD\1mmQ\5pHnaD
o0Mn3j$1IGlopb!Jj#kli&lTRk</>>cii)*`<3gUJc^N*Jc^N*g&gjimNLm=mN;$AjrW7tkoAFsJfB:\
JfESdU`.Jro18ICnODY0rC$9GnO)h5o0Mn3j$2in`'1q!Jj"]KqE9Zt^c_/kcih2fhZKYUJc^N*Jc^N*
oE+S-mNLp>mN:+'!$9i7l5[VZJfB:\JfFJ(M]1asnjrCCn4)P/nO3":r^60AoKi"4j$1pTh*.]!Jj#>]
mlZ1ag-"p0ciiS8\-'nUJc^N*Jc^N*bl[G[mNLm=mN:+'fcBAukSo*mJfB:\cl9;0^`)c7oLJC?j[J`.
nO)e4qa('EnNc,![m'LLNBMkVXZb5tJirZfncdACcNDStYl]LYJc^N*Jcb*:nfmKFlQGU;k8s49fH'8t
cPqHTJfB:\ko6'0g)BNQo1/=?j@/Z.n3c_4oKht3j?MKbc9AX!Jj"fNr]GcpbrkP#cij%EWWUoUJc^N*
Jc^N*^]O'NmNLm=mN:(&p)W37lQ!;OJfB:\K,Xe/Jf=8"njr@Bn4)J-o0i+9pd4gDo0Mn3j$1LHk<>D!
Jj#\gjZJ,Wk</;=cii,+_umaUJc^N*Jc^N*g&gghmNLm=mN;'BjW<(qlQ"\!JfB:\JfED_W>a#"njr@B
mmcD-o0i+9nNuh5nNc,!lor0J`'&]8Jj&ciN]b*>nHI8B_ZS`tV#l5MJc^N*JcbQGnKRBEllb^<g)g88
fH';u_Ae(GJfB:\o,Ec0k8Nk]oLJ==k!el0ogA[FnNuh5nNc,!dQZ;IX$)%tO$3+tJiqaLnHI8Bl3"Kt
bQ<@tJc^N*Jca0unKRBElQGX<!$Bl8fH';uko53nJfB:\b8[r0^`)`6oLJ:<k!eo1nO)e4r'C-EnNc,!
\3BFHP!+C[W'/ltJirZfnHI8Bci_YtZ3#UZJc^N*Jcb*:nKRBElQGU;kT9:9fH';ucPqHTJfB:\j;X^0
g)BKPo1/1;k=,&3!(?<DnNuk6nNc,!h`f.G\ikX.Jj',sKKRLAnHI8BpB.Dtf`Ha,Jc^N*Jc`^hnKRBE
lQGU;fH0c-iuRG*[Msf;JfB:\r>UJ0oG[6jo1/.:kXG,3n3d"<q*O^>n3H&!`BN9FTfmujR6BgtJir3Y
nHI8Bh#kOs^]K)hJc^N*JcaX-nKRBElQGU;ocE08fcBAuh&CqbJfB:\eJkY0bo6+Co1/+9l9t\Ao0i+9
nNuh5nNc/"lor!EaZY5=Jj&TdP<?WCn-.2B_ZS]sV?2>NJc^N*JcbQGn079Dllb^<gE->8fcBAu_]+1H
JfB:\mMhE0k8Nh\oLJ19l:(;4p-\aFnNuh5nNc,!dlu5EYW[S$MEUbtJiqaLn-./AlN=QtblWIuJc^N*
Jca0un079DlQG[=ru]o8fcBAul5P<oJfB:\`Z)T0^`!2EnOW:Bksju-o0i+9nO!.>pd+F8j$1(<lopb!
Jj#kli&lTRoK;UHcih_uci^TUJc^N*Jc^N*k5t,smNLm=m2tU7nK-='ll=@kJfB:\JfESdU`.r*!(l]O
o1/%7lUCM8s$ZBEn3Zb5nNc,!i',(C^HI03Jj&rnM*0$Fn-./Ap]IJtg&cj-Jc^N*Jc`^hn079DlQGO9
gE-)0iZ7A*[Msf;JfB:\p`#,0oGR^$nOW7AkXOo-oL/19qEjsDoKi"4j$1OIh*.]!Jj#>]mlZ1ak</5;
cii2-_ZR[UJc^N*Jc^N*g&gafmNLm=lQ>pDiuZkoll=h#JfB:\JfE&UZPq(,!(l]Oo1.t5mm[7Fo0i+9
nNuk6n3H&!m67pAc96bBJj&E_Qor/Hmfh)A_unftV?2>NJc^N*JcbQGmiq0CllbR8i#_h<fcBAu`#F:I
JfB:\ko6'0k8F=ln4<1Ak!nc-o0i=?qa9m?o0Mn3j?M*Wc9AX!Jj"fNr]Gcpg-"g-cii\;[0+\UJc^N*
Jc^N*bl[>XmNLp>n/qKKh&b5ilQ#40JfB:\JfDNF_A^3.s%2`OoLJ"4mmZh9nO)h5rB^0DnNc/"\N]1?
S3;HeSiu0tJirZfmfh&@dK@etZiYg\Jc^N*Jcb*:miq0ClQGF6miLs>fcBAud2RZVJfB:\g)I"0g)Bu_
nOW7Aj[S]-pI,!KnO)h5o0Mn3j$2Kd^HTS!Jj"]Kof\<tbrkFucij.HVutcUJc^N*Jc^N*^]NsKmNLm=
kTA\'p`8<6ll<JRJfB:\JfF;#O;da0s%2`Oo1.k2n3ut;nO*.>pHnL<n3H&!a$/->X$)%tO$3+tJir3Y
mfh&@hZL^t_#f2iJc^N*JcaX-miq0ClQG@4rZ:)@fH';uhA_%cJfB:\b8[r0bo6URnOW7Aj$rZ0r^HHI
n3c_4oKhq2jZi/sYWgN!Jj"]Kjuo7t^c_#gd0.Djg]OGUJc^N*Jc^N*oE+G)mNLp>jr`\+r>sT3ll<q_
JfB:\JfEbiT,Ql2s%2]NoLIq2nO<%;pd=mFnNuk6mQfo!e3:u<\ikX.Jj',sKKRsNmKLu@liXWtc2rS!
Jc^N*Jca0umNV'Bllbg?ocN-6fcBE!lPkEpJfB:\]Gnm0^`*2DnOW:Bj$rQ-o0i+9nO!4@pHe13k<HOA
i]a&!Jj#Mbl9'Y\oK;OFcihf"cNCNUJc^N*Jc^N*k5t&qmNLp>j<+"8miL.&lQ"=lJfB:\JfE5ZXr?"4
r^lWNoLIq2nO<1?rC$0CnNuh5m6Kl"iBFh:aZY5=Jj&TdP<@)PmKLr?q?*Vtg]E'/Jc^N*Jc`^hmNV'B
lQG71iu\":i>q5(\/U#=JfB:\mMhE0oG[^#nOW7Aj@8Z.o0i+9qa1$Do0M_.ks*3Pdlt!!Jj"uSq)j6k
k<//9cii8/_#qOUJc^N*Jc^N*g&g[dmNLm=jWFLEj;utplQ"e$JfB:\JfD]K]c,-6r^lWNo1.k2oL8^I
oL/4:nNuh5lTj]!mlmd9fKFgLJj&'UU--4RmKLr?`WOrtVuhPPJc^N*JcbQGmNV'BlQG1/l5ojEfH';u
`>aCJJfB:\h]&@0k8O=knOW7Aj$rQ-oL/IAqEsa=oKhb-l9Ef_`'1q!Jj"]KqE9Ztg-"a+d0/h=ZieVU
Jc^N*Jc^N*bl[8VmNLp>nfR?CjrW.qll>@2JfB:\JfD0<bSn88r^lTMoLIq2nO<(<n3c_4s$??Eks4Q!
]0>%7VEKMoPWeItJirZfm01l?df[kt[/tp]Jc^N*Jcb*:m3:sAllb4.q&\uGfH';udMmcWJfB:\cl9;0
g)Bo]nOW:Bj$rQ-pdG$JnO)h5oKh\+lp'Jn[6Dl!Jj"]KlTLUtbrk@sd00:JVZY]UJc^N*Jc^N*^]NmI
mNLp>h]M#&qAnK7ll<MSJfB:\JfEqnRMtf:rCQNMoLIq2nO<%;nO*4@p-SC;k<SE!a?Im5[69+)Kg#Dt
Jir3Ym01i>i<-mu_?,;jJc^N*JcaX-m3:sAlQG=3qB+oBfcBAui#@7eJfB:\_&L60bo6OPnOW7Aj@8f2
rC-<GnO)h5o0MP)mQ^/(VEWg!Jj"]Kgc_Pt^c^ufcihAkg&n;UJc^N*Jc^N*oE+D(mNLm=hB22-q]=E2
lQ!n`JfB:\JfED_W>aq<rCQNMo1.k2n3ut;q*XsFnNuh5k!8B"eNU`3`'&]8Jj&ciN]c#Xm01i>mK9ct
ciSe#Jc^N*Jca0um3:sAlQGd@lQ>C5fcBAum2LWrJfB:\Z5_10^`*/CnOW7Aj$rQ-oL/4:nO!7Aog.\)
n3=NKfKQ?!Jj#/XoK7^foK;IDd0.r$blbBUJc^N*Jc^N*k5suomih!>g`QM:mN1%%lQ"@mJfB:\JfDlP
\/O'>rCQKLoLIq2nO<7Ar'^'Bn3Zb5j?W3!j$'\2dli:GJj&6ZSNP.Zlikc>qZE\th#`00Jc^N*Jc`^h
lltj@llb%)llQ!Dh];&'\Jp,>JfB:\j;X^0oG[X!nOW:Bj$rQ-oL/19rBg0DoKhM&nNY,ZaZd:!Jj"]K
s#l#tk</)7d0/D1^]VIUJc^N*Jc^N*g&gUbmNLp>jra7<m2jn#ll=q&JfB:\JfD?A`u<2@r(6ELoLIq2
p-nmJo0i+9nNuk6j$<-!n33O0i]VlVJj%^KX?=9\likc>`rk#tW<.YQJc^N*JcbQGlltj@llat'oH*iM
fcBE!`Z'LKJfB:\eJkY0k8O7inOW7Aj@8Z.o0iFBpd=R<oKhM&nNYSg\j"5!Jj"]Kn3)stg-"^*ciie>
ZNJPUJc^N*Jc^N*bl[5UmNLm=oH33;mN1%%ll>C3JfB:\JfCg2ef)=Br(6ELo1.k2nO<%;nO)h5!($9D
j$<-!]KXe.YW[S$MEUbtJirZflik`=eH=%u[K;$^Jc^N*Jcb*:lltj@lQFn'!$CVMfcBE!di3lXJfB:\
`Z)T0g)Bl\nOW7Aj@8Z.q*b*JnO)h5o0MG&nNZ%tX$50!Jj"]KiB<ntbrk=rcij7KV?>WUJc^N*Jc^N*
^]NjHmNLm=fcTW'q]4Q7lQ!JTJfB:\JfESdU`/kDr(6ELo1.h1nO<(<nO*7Aog879j?W6"aZdX,^HI03
Jj&rnM*0r`lNPZ=iWHpt_ubMlJc^N*JcaX-lQYd@lQG@4o,mBAfcBAui>[@fJfB:\[i<O0bo6LOn4<1A
j$rc3qaL-FnO)h5o0MG&nNZM,S3H+!Jj"]KdQOit^c^odd0.Mmf`S5UJc^N*Jc^N*oE+>&mNLp>fcTl.
qB"<1lQ!qaJfB:\JfE&UZPr!Fqap<KoLIq2nO<(<qEt$FnNuh5j?W6"eipK*c96bBJj&E_Qos(blNPZ=
mfTitd/nn$Jc^N*Jca0ulQYa?llbpBjra"4fcBAumMg`sJfB:\W#OJ0^`*)AnOW:Bj$rQ-oL/19nNuk6
j?W3!]fs_*[69+)Kg#DtJirZflNPZ=eH="t[fV-_Jc^N*Jcb*:lQYa?llb"(ru^\NfH';ue/NuYJfB:\
_&L60g)Bi[nOW:Bj$rQ-qF(0JnO)h5oKhM&nNZ(uVEWg!Jj"]Kgc_Ptbrk:qcij:LV$#QUJc^N*Jc^N*
^]NgGmNLp>fH9Q'q]4N6ll<SUJfB:\JfED_W>bCIqap<Ko1.k2nO<%;nO*:BoKr19j$<-!b!*R(`'&]8
Jj&ciN]cJelNPW<ird$u_ubMlJc^N*JcaX-lQYa?lQGC5nfR9@fcBE!i>[@fJfB:\Z5_10bo6INnOW7A
j@8l4qaL*EnO)h5oKhM&nNZP-QTjb!Jj"]KbrrKt^c^odcihGmf`S5UJc^N*Jc^N*oE+>&mNLm=fcTo/
q&\30ll=%bJfB:\JfDlP\/ONKqap<Ko1.k2nO<%;qa:*FnNuk6j$<-!f06E&dli:GJj&6ZSNPUgl35Q<
n,orud/nn$Jc^N*Jca0ul6>[?lQGjBjWEn3fcBE!mMg`sJfB:\UDr,0^`*)An4<1Aj$rQ-oL/4:nNuh5
j?W6"]fsP%\ikX.Jj',sKKSlhl35Q<ecX+u[fV-_Jc^N*Jcb*:l6>[?lQFq(ru^YMfcBE!e/NuYJfB:\
]Gnm0g)BfZnOW:Bj$rQ-qaC9KnO)h5o0MG&nNZ(uTg%I!Jj"]Kf0-2tbrk7pd00CMU]]KUJc^N*Jc^N*
^]NdFmNLp>fcTW'r#OW7lQ!MUJfB:\JfE5ZXr?pNqFU3JoLIq2nO<(<nO*:BoKr.8j?W6"b!*C#aZY5=
Jj&TdP<A"jl35Q<ird!t`<(VmJc^N*JcaX-l6>X>llbL6nfR9@fcBAuiZ!IgJfB:\XW,h0bo6FMnOW:B
j$rf4qF1$EnO)h5o0MG&nNZP-P!8D!Jj"]Ka?@-t^c^lcd0.PnfE8/UJc^N*Jc^N*oE+;%mNLp>fcTo/
q&\30lQ!tbJfB:\JfD]K]c-&PqFU3JoLIq2nO<(<qa:*Fn3Zb5j?W6"f066!fKFgLJj&'UU-.-ll35Q<
n,ootdK5"%Jc^N*Jca0ul6>X>llbsCj<*h3fcBAumi-itJfB:\Sf?c0^`*&@nOW7Aj@8Z.o0i+9nj3=C
oKhP'n3=WN`'1q!Jj"]KqE9ZtoK;CBcihr&b6,6UJc^N*Jc^N*k5sommNLp>gE6D:miL+%ll=OpJfB:\
JfD0<bSo1RqFU3Jo1.k2nO<=Cq*aa?nNuk6j$<-!jZ]1uk<4D[Jj%OFYrp8nl35N;rWAquhZAB2Jc^N*
Jc`^hl6>X>lQFk&miMBIh&Yi%],Q>@JfB:\cl9;0oG[QtnOW7Aj@8Z.o0i+9s$H<DoKhM&nNY2\[6Dl!
Jj"]KlTLUtk<.u4d0/M4^&u=UJc^N*Jc^N*g&gL_mih!>ko]F;mN1%%ll>"(JfB:\JfCX-gD\<TqFU0I
oLIt3pdP$Jo0i+9nNuk6j$<-!nii$sp-"!jJj%"7^c]CpkloH;aog8uWrdkSJc^N*JcbQGkp#R>lQFk&
pE')NfcBE!a;]^MJfB:\_&L60k8O.fnOW:Bj@8W-oL/UEp-\@:oKhM&nNYYiVEWg!Jj"]Kgc_Ptg-"U'
d0/tAYliDUJc^N*Jc^N*bl[,Rmih!>p)i?;mN1%%ll>I5JfB:\JfC*sl5IGVq+:*IoLIq2nO<(<nO)k6
!(-<Dj$<-!^-9:q`'&]8Jj&ciN]cqrkloH;f)s1u\,q6`Jc^N*Jcb*:kp#O=llb(*rZCPLfcBE!eJj)Z
JfB:\Z5_10g)BcYnOW:Bj$rQ-r'^?KnO)h5o0MG&nNZ,!QTjb!Jj"]KbrrKtbrk4od00FNU]]KUJc^N*
Jc^N*^]NaEmNLp>fcTW'r>j]7ll<VVJfB:\JfDlP\/OuXq+:*IoLIq2nO<(<nO*=Co0W%7j?W6"b<E-o
dli:GJj&6ZSNQ'tkloH;j9**u`<(VmJc^N*JcaX-kp#O=llbO7nK70?fcBE!iZ!IgJfB:\UDr,0bo6CL
nOW:Bj$ri5q*jpDnO)h5o0MG&nNZS.Ld(]!Jj"]K^-0Ft^c^ibd0.Sof)r)UJc^N*Jc^N*oE+8$mNLp>
fcTr0p`A*/lQ""cJfB:\JfD?A`u=+Zq+:*Io1.k2nO<(<r'U0FnNuh5j?W6"fKPumi]VlVJj%^KX?>3!
kloH;nH5utdfP+&Jc^N*Jca0ukp#O=llc!Dj<*e2fcBAun/HruJfB:\PT0'0^`*#?nOW7Aj@8Z.oL/19
o0WIDoKhP'nNX`O\j"5!Jj"]Kn3)stoK;@Ad0/&'aof0UJc^N*Jc^N*k5sllmNLp>g`QJ:miL.&lQ"Ip
JfB:\JfCg2ef*6\q+:*Io1.k2nO<@DpdFX>nNuk6j?W6"jZ\hknNDIeJj%1<]0+>#kloE:rr]"uhu\K3
Jc^N*Jc`^hkp#O=lQFk&miMEJh&Yf$]GlGAJfB:\`Z)T0oG[NsnOW7Aj@8Z.o0i+9!(-6CoKhP'nNY2\
X$50!Jj"]KiB<ntk<.r3d0/P5]`Z7UJc^N*Jc^N*g&gI^mih!>l6#L;miL+%ll>%)JfB:\JfC:#jVlA^
q+:'HoLIt3q*k*Jo0i+9nNuk6j$<-!o0.dj!'PosJj$Y-aumI%kQT?:b6->uX9*tTJc^N*JcbQGkT]I=
lQFk&p`B/NfcBE!aW#gNJfB:\[i<O0k8O+enOW:Bj@8Z.o0iOEogA79oKhM&nNY\jS3H+!Jj"]KdQOit
g-"R&d00"BYQN>UJc^N*Jc^N*bl[)Qmih!>pE/E;mN1%%ll>L6JfB:\JfBaioGYL`pdt!Ho1.n3n3ut;
nO)n7s$H?Dj$<-!^HT%hc96bBJj&E_Qot"'kQT?:fE97u\H7?aJc^N*Jcb*:kT]F<llb++r?(GKfcBE!
ef02[JfB:\W#OJ0g)B`XnOW4@j[Sc/rC$EKnO)h5oKhM&nNZ/"NB[&!Jj"]K_`bdtbrk1nd00IOUBBEU
Jc^N*Jc^N*^]N^DmNLp>fcTW'rZ0c7ll<YWJfB:\JfDNF_A`%bpdt!HnOM_2nO<(<nO!:Cnj;t7j$<-!
bW_mfh*$?QJj%mPV`a-)kQT?:jTE0u`WC_nJc^N*JcaX-kT]F<llbR8n/q'>fcBE!iu<RhJfB:\R2bE0
bo6@KnOW.>k=5;:pdOgCnO)h5oKhM&nNZV/Jj0,sL-:,OZou_t^c^fad0.Vpf)r)UJc^N*Jc^N*oE+5#
mNLp>fcTu1pE&!.ll=+dJfB:\JfD!7d2M0dpdt!HmmlS2nO<(<rBp6FnNuh5j?W6"ffk`dlofq`Jj%@A
[QN8+kQT?:ncQ)udfP+&Jc^N*Jca0ukT]F<llc$Eiud\1fcBE!n/HruJfB:\MAu@0^`)u>nOW(<ksk23
oL/4:o0WIDo0MG&nNXcPYWgN!Jj"]Kjuo7toK;=@d0/)(aof0UJc^N*Jc^N*k5sikmNLp>h&lS;mN1%%
ll=RqJfB:\JfCI(i#:;fpdt!Hm76G2nO<CEpdFX>nNue4jZr?#k!"Sbq`TNoJj$h2`B;C-kQT?:rr]"u
hu\K3Jc^N*Jc`^hkT]F<llat'mN2?Jg`>`$]GlGAJfB:\]Gnm0oG[KrnOW":lULD5oL/4:!(-6CnNl;&
nNY5]Tg%I!Jj"]Kf0-2tk<.r3d0/P5]`Z7UJc^N*Jc^N*g&gI^mNLp>l6#L;mN1%%ll>%)JfB:\JfBpn
mi'Fhpdt!HlUU;2qF10JoL/4:nNu_2k<SQ%o0.aipcaU!Jj$;#e3(N/kQT?:b6-;tXTF(UJc^N*JcbQG
kT]F<llat'p`B/NfcBAuar>pOJfB:\XW,h0k8O+enOVq8m7-V7oL/XFoL&.8n3Q8'nNY\jP!8D!Jj"]K
a?@-tg-"R&ciiqBY638UJc^N*Jc^N*bl[)QmNLm=p`JK;miL.&lQ#F6JfB:\JfBC_rYiQjpdt!Hkst/2
nO<%;nO)q8r^-'>ks4c'^HS\^fKFgLJj&'UU-/'1k6969f`T=u\cRHbJc^N*Jcb*:k9B@<lQG%+r#bAK
fcBAuf,K;\JfB:\Sf?c0g)B]WnOVn7mmch9rC$BJnO)h5mQp,'nNZ/"K0B8uJj"]K\NS(tbrk.md0'FO
U''?UJc^N*Jc^N*^]N[Cmih!>fcTZ(rZ0c7lQ!SWJfB:\JfD0<bSp*lpIXmGkXY,3nO<%;nO)h5m6U&'
nNY5]S3H+!Jj"]KdQOitk<.o2d0/S6]E?1UJc^N*Jc^N*g&gF]mih!>lQ>R;miL.&lQ"t)JfB:\JfBai
oGYsmpIXmGk=>&3qF10Jo0i+9nNuS.lp1)*o0.aio0/7!Jj$+sff[&4k6969bQHDuXTF(UJc^N*JcbQG
k9B@<lQFk&q&]8OfcBAuar>pOJfB:\W#OJ0k8O(dnOVe4nj`.<o0iRFoL&.8lTso'nNY\jNB[&!Jj"]K
_`bdtg-"O%d00%CY638UJc^N*Jc^N*bl[&Pmih!>p`JK;miL.&lQ#F6JfB:\JfB:\ru8fnpIXmGj[\o3
nO<%;nO)q8r^,m9mQg;,^HSMYh*$?QJj%mPV`aT6k6969f`T=u\cRHbJc^N*Jcb*:k9B=;llb.,r#b>J
fcBE!f,K;\JfB:\R2bE0g)B]WnOV_2o1&7=r^?KKnO)h5ks=`&nNZ2#Jj0,sL-:,OZou_tbrk.md0'FO
U''?UJc^N*Jc^N*^]N[CmNLp>fcTW'ruKi7ll<\XJfB:\JfD!7d2MWqpIXmGj@Af2nO<(<nO)h5kX"Z&
nNY8^QTjb!Jj"]KbrrKtk<.o2d0/S6]E?1UJc^N*Jc^N*g&gF]mNLp>lQ>R;mN1%%ll>(*JfB:\JfBRd
q&7KrpIXmGj@Af2qaL6JoL/4:nNuD)n3HM.oKIjjmQQn!Jj#qnhE8S9k6969bQHDuXTF(UJc^N*JcbQG
k9B=;llat'q&]5NfcBE!ar>pOJfB:\UDr,0k8O(dnOV_2o1&7=oL/[GoL&.8k!AN&nNY_kLd(]!Jj"]K
^-0Ftg-"O%d00%CY638UJc^N*Jc^N*bl[&PmNLp>p`JK;mN1%%ll>O7JfB:\JfB:\qA[HnpIXmGj@Af2
nO<(<nO)q8r^,^4nj)_0^cnGUi]VlVJj%^KX??,;k6969f`T=u\cRHbJc^N*Jcb*:k9B=;llb.,r#b>J
fcBE!f,K;\JfB:\PT0'0g)B]WnOV_2o1&7=r^?KKnO)h5j?`B&nNZ2#Jj/rnM`lYTY<CAtbrk.md0'FO
U''?UJc^N*Jc^N*^]N[CmNLp>fcTW'ruKi7ll<\XJfB:\JfCg2ef+0!pIXmGj@Af2nO<(<nO)h5j?`B&
nNY8^P!8D!Jj"]Ka?@-tk<.o2d0/S6]E?1UJc^N*Jc^N*g&gF]mNLp>lQ>R;mN1%%ll>(*JfB:\JfBC_
rYj$"pIXmGj%&`2qaL6JoL/4:nNu;&o0Dh1oKIjjkrtP!Jj#bij#k+>k6969bQHDuXTF(UJc^N*JcbQG
k9B=;llat'q&]5NfcBE!ar>pOJfB:\Sf?c0k8O(dnOV\1oLA@>oL/[GoL&.8j$E<&nNY_kK0B8uJj"]K
\NS(tg-"O%d00%CY638UJc^N*Jc^N*bl[&PmNLp>p`JK;mN1%%ll>O7JfB:\JfB:\oc)*npIXmGj%&`2
nO<(<nO)q8r^,X2oK_q2^cn8Pk<4D[Jj%OFYrqY@k6969f`T=u\cRHbJc^N*Jcb*:k9B=;llb.,r#b>J
fcBE!f,K;\JfB:\NuR^0g)B]WnOV\1oLA@>r^?KKnO)h5j$E<&nNZ2#Jj/ciO?J1YW]f#tbrk.md0'FO
U''?UJc^N*Jc^N*^]N[CmNLp>fcTW'ruKi7ll<\XJfB:\JfCX-gD]]&pIXmGj%&`2nO<(<nO)h5j$E<&
nNY8^NB[&!Jj"]K_`bdtk<.o2d0/S6]E?1UJc^N*Jc^N*g&gF]mNLp>lQ>R;mN1%%ll>(*JfB:\JfB:\
ru99&pIXmGj%&`2qaL6JoL/4:nNu8%oK_q2oKIjjj?B2!Jj#SdkWHXCk6969bQHDuXTF(UJc^N*JcbQG
k9B=;llat'q&]5NfcBE!ar>pOJfB:\R2bE0k8O(dnOV\1oLA@>oL/[GoL&.8j$E<&nNY_kJj0,sL-:,O
Zou_tg-"O%d00%CY638UJc^N*Jc^N*bl[&PmNLp>p`JK;mN1%%ll>O7JfB:\JfB:\n/KanpIXmGj%&`2
nO<(<nO)q8r^,X2oK_q2^cn)Klofq`Jj%@A[QO1Ek6969f`T=u\cRHbJc^N*Jcb*:k9B=;llb.,r#b>J
fcBE!f,K;\JfB:\MAu@0g)B]WnOV\1oLA@>r^?KKnO)h5j$E<&nNZ2#Jj/TdPs'^^V*3Ztbrk.md0'FO
U''?UJc^N*Jc^N*^]N[CmNLp>fcTW'ruKi7ll<\XJfB:\JfCI(i#;5+p.=gGj%&`2nO<(<nO)h5j$E<&
nNY8^Ld(]!Jj"]K^-0Ftk<.l1dKJ\7]E?1UJc^N*Jc^N*g&gC\mih$?lQ>R;mN1%%ll>(*JfB:\JfB:\
qA[p&p.=dFj@Ai3qaL6JoL/4:nNu8%oK_q2oKIjjh`di!Jj#D_m6&0Hjos09bQHDuXTF(UJc^N*JcbQG
js'7;lQFn'q&]5NfcBE!ar>pOJfB:\PT0'0k8O%cnOV_2oLA@>oL/[GoL&.8j$E<&nNY_kJj/rnM`lYT
Y<CAtg-"L$d00(DY638UJc^N*Jc^N*bl[#Omih!>q&eT<mN1%%ll>O7JfB:\JfB:\lPnCnp.=dFj@Ai3
nO<(<nO)q8r^,X2oK_q2^cmoFnNDIeJj%1<]0,^Jjos-8g&oG!\cRHbJc^N*Jcb*:js'7;lQG(,q]G8J
fcBE!f,K;\JfB:\KcC"0g)BZVnOV_2oLA@>r^?HJnjDq6j$E<&nNZ2#Jj/E_RQZ6cTKV<tbrk+ld0-0G
i<"T4Jc^N*Jc`^hjs'7;lQFk&miMKLgE#W#]c2PBJfB:\Sf?c0oG[EpnOV_2oLA@>o0i.:!(6<Dj$E<&
nNY8^K0B8uJj"]K\NS(tk<.l1d0/V7]E?1UJc^N*Jc^N*g&gC\mih!>llYX;miL.&ll>(*JfB:\JfB:\
oc)R&p.=dFj@Ai3qaL6Jo0i+9nNu;&oK_q2oKIjjg-2K!Jj#5ZniX]Mjos-8blcN!XTF(UJc^N*JcbQG
js'7;lQFk&qB#>OfcBE!ar>pOJfB:\NuR^0k8O%cnOV_2oLA@>o0iUGo0`%7j?`E'nNY_kJj/ciO?J1Y
W]f#tg-"L$d00(DY638UJc^N*Jc^N*bl[#Omih!>q&eQ;miL.&ll>O7JfB:\JfB:\jr<%np.=dFj@Ai3
nO<%;nO)t9rBfR2oK_q2^cm`Ap-"!jJj%"7^c_6Ojos-8g&oG!\cRHbJc^N*Jcb*:js'7;lQG(,q]G8J
fcBE!f,K;\JfB:\JfF_/g`#lXnOV_2oLA@>r^?HJnO)h5j?`E'nNZ2#Jj/6ZT07chRm#stbrk+ld0-0G
i<"T4Jc^N*Jc`^hjs'7;lQFk&miMKLgE#W#]c2PBJfB:\R2bE0oG[EpnOV_2oLA@>o0i.:!(69Cj?`E'
nNY8^Jj0,sL-:,OZou_tk<.l1d0/V7]E?1UJc^N*Jc^N*g&gC\mih!>llYX;miL.&ll>(*JfB:\JfB:\
n/L4&p.=dFj@Ai3qaL6Jo0i+9nNu;&oK_q2oKIjjeNU-!Jj#&UpH65Rjos-8blcN!XTF(UJc^N*JcbQG
js'7;lQFk&qB#>OfcBE!ar>pOJfB:\MAu@0k8O%cnOV_2oLA@>o0iUGo0`%7j?`E'nNY_kJj/TdPs'^^
V*3Ztg-"L$d00(DY638UJc^N*Jc^N*bl[#Omih!>q&eQ;miL.&ll>O7JfB:\JfB:\i>^\np.=dFj@Ai3
nO<%;nO)t9rBfR2oK_q2^cmQ<q`TNoJj$h2`B<cTjos-8g&oG!\cRHbJc^N*Jcb*:js'7;lQG(,q]G8J
fcBE!f,K;\JfB:\JfFP*i>VD]nOV_2oLA@>r^?HJnO)h5j?`E'nNZ2#Jj/'UUcj;mQ9FUtbrk+ld0-0G
i<"T4Jc^N*Jc`^hjs'7;lQFk&miMKLgE#W#]c2PBJfB:\PT0'0oG[EpnOV_2oLA@>o0i.:!(69Cj?`E'
nNY8^Jj/rnM`lYTY<CAtk<.l1d0/V7]E?1UJc^N*Jc^N*g&gC\mih!>llYX;miL.&ll>(*JfB:\JfB:\
lPnk&p.=dFj@Ai3qaL6Jo0i+9nNu;&oK_q2oKIjjcp"d!Jj"lPr&hbWjos-8blcN!XTF(UJc^N*JcbQG
js'7;lQFk&qB#>OfcBE!ar>pOJfB:\KcC"0k8O%cnOV_2oLA@>o0iUGo0`%7j?`E'nNY_kJj/E_RQZ6c
TKV<tg-"L$d00(DY638UJc^N*Jc^N*bl[#Omih!>q&eQ;miL.&ll>O7JfB:\JfB:\g`,>np.=dFj@Ai3
nO<%;nO)t9rBfR2oK_q2^cmB7!'PosJj$Y-auo;Yjos-8g&oG!\cRHbJc^N*Jcb*:js'7;lQG(,q]G8J
fcBE!f,K;\JfB:\JfFA%jr3qbnOV_2oLA@>r^?HJnO)h5j?`E'nNZ2#Jj.mPWBGhrOZi7tbrk+ld0-0G
i<"T4Jc^N*Jc`^hjs'7;lQFk&miMKLgE#W#]c2PBJfB:\NuR^0oG[EpnOV_2oLA@>o0i.:!(6<Dj$E<&
nNY8^Jj/ciO?J1YW]f#tk<.l1d0/V7]E?1UJc^N*Jc^N*g&gC\mih!>llY[<mN1%%ll>(*JfB:\JfB:\
jr<M&p.=aEj[\r4qaL6Jo0i.:nNu8%oK_q2oKIjjb<EF!Jj"]K^c^`_d0.\recW#UJc^N*Jc^N*oE+/!
mih!>g)p,3p)_m-ll=.eJfB:\JfB:\ru:2@p.=^Dk"#&5nO<(<r^6<FnNu8%oK_q2g-1*Pj?B2!Jj#Sd
kWIQ]jos09o)l/ue,k4'Jc^N*Jca0ujs'7;lQH!FiZIS0fcBE!nJd'!JfB:\JfE;\l5K@fmRZM2oLA@>
oL/4:oKrODj$E<&nNXfQJj0,sL-:,OZou_toK;7>dKJ5*aTK*UJc^N*Jc^N*k5scimih$?hB2Y;mN1%%
ll=UrJfB:\JfB:\n/L[3p.=XBkXY87nO<FFpI+O=nNu8%oK_q2k<=J]eNU-!Jj#&UpH6\_k6969!!Aqt
i<"T4Jc^N*Jc`^hk9B=;llat'mN2BKgE#W#]c2PBJfB:\MAu@0oG[Eplq$A2oLA@>oL/4:n3Z2%oK_q2
bs$_CmQQn!Jj#qnhE9s`k6969jo`6u`r^hoJc^N*JcaX-k9B=;llbU9miUs=fcBE!j;W[iJfB:\JfEYf
m2G^jl:C21oLA^HpI4^BnO)b3j[&N(nNZY0Jj.1<]fgs1Jj'#p`B<;ed0.YqecW#UJc^N*Jc^N*oE+2"
mNLp>fcU#2p)_m-ll=.eJfB:\JfB:\qA\i@pIXU?lUUS:nO<(<r^6<FmR$&%oK_q2g-1*Ph`di!Jj#D_
m6')bk6969o)l/ue,k4'Jc^N*Jca0uk9B=;llc'FiZIS0fcBE!nJd'!JfB:\JfE,Wmi(plkXb&1oLA@>
oL/4:oKrC@k<\`*nNXfQJj/rnM`lYTY<CAtoK;:?d0/,)aTK*UJc^N*Jc^N*k5sfjmNLp>hB2Y;mN1%%
ll=UrJfB:\JfB:\lPo=3pIXO=m76e<nO<FFpI+O=lpBo%oK_q2k<=J]cp"d!Jj"lPr&i4dk6969!!Aqt
i<"T4Jc^N*Jc`^hk9B=;llat'mN2BKgE#W#]c2PBJfB:\KcC"0oG[Hqk"+o1oLA@>oL/4:lU'i%oK_q2
bs$_CkrtP!Jj#bij#lKek6969jo`6u`r^hoJc^N*JcaX-k9B=;llbU9miUs=fcBE!j;W[iJfB:\JfEJa
nf%6oj[ei1oLA^HpI4^BnO)S.l9Y&-nNZY0Jj."7_EEK6Jj&ikaunhjd0.YqecW#UJc^N*Jc^N*oE+2"
mNLp>fcU#2p)_m-ll=.eJfB:\JfB:\oc*K@pIXF:n43+?nO<(<r^6<FksF]%oK_q2g-1*Pg-2K!Jj#5Z
niYVgk6969o)l/ue,k4'Jc^N*Jca0uk9B=;llc'FiZIS0fcBE!nJd'!JfB:\JfDrRoG[Epj@Jf2oLA@>
oL/4:oKr4;lp:8/nNXfQJj/ciO?J1YW]f#toK;:?d0/,)aTK*UJc^N*Jc^N*k5sfjmNLp>hB2Y;mN1%%
ll=UrJfB:\JfB:\jr<t3oh"79nON4@nO<FFpI+O=k<eT&o0Dh1k<=J]b<EF!Jj"]Kbrk.md0'FOU''?U
Jc^N*Jc^N*^]N[CmNLp>fcTW'ruKi7ll<\XJfB:\JfB:\ru:YMoL\4:nON1?nO<(<nO)G*mm6P1nNY8^
Jj/6ZT07chRm#stk<.o2d0/S6]E?1UJc^N*Jc^N*g&gF]mNLp>lQ>R;mN1%%ll>(*JfB:\JfB:\f,OH&
o1A.:nON1?qaL6JoL/4:j[/H&o0Dh1oKIjj]KXA!Jj"]Knib;]k6969bQHDuXTF(UJc^N*JcbQGk9B=;
llat'q&]5NfcBE!ar>pOJfB:\JfF1up_r]pkt(>7o1&7=oL/[GoL%\+nNlb3nNY_kJj.^KY!%A"N'6nt
g-"O%d00%CY638UJc^N*Jc^N*bl[&PmNLp>p`JK;mN1%%ll>O7JfB:\JfB:\a;apnnO`":nON1?nO<(<
nO)q8nNub3o0Dh1^cm?6mQQn!Jj#qnhE:Emk6969f`T=u\cRHbJc^N*Jcb*:k9B=;llb.,r#b>JfcBE!
f,K;\JfB:\JfEYfqASiplU^P9o1&7=r^?KKnO)A(nNlb3nNZ2#Jj.1<]fgs1Jj'#pdQH[rd0'FOU''?U
Jc^N*Jc^N*^]N[CmNLp>fcTW'ruKi7ll<\XJfB:\JfB:\qA];Mmn)k:nON1?nO<(<nO)A(nNlb3nNY8^
Jj/'UUcj;mQ9FUtk<.o2d0/S6]E?1UJc^N*Jc^N*g&gF]mNLp>lQ>R;mN1%%ll>(*JfB:\JfB:\dMr*&
mRce:nON1?qaL6JoL/4:j?iB&o0Dh1oKIjj[m&#!Jj"]Km6/r]k6969bQHDuXTF(UJc^N*JcbQGk9B@<
lQFk&q&]8OfcBAuar>pOJfB:\JfF"pr>P&pmRZk<oLA@>o0iRFoL%\+nNle4nNY\jJj.OFZTWn'LHYPt
g-"O%d00%CY638UJc^N*Jc^N*bl[&Pmih!>p`JK;miL.&lQ#F6JfB:\JfB:\_]/Rnlq-Y:nON4@nO<%;
nO)q8nNub3oK_q2^HR65krtP!Jj#bij#lrrk6969f`T=u\cRHbJc^N*Jcb*:k9B@<lQG%+r#bAKfcBAu
f,K;\JfB:\JfEJaru12pn4<(>oLA@>rC$BJnO)A(nNle4nNZ/"Jj."7_EEK6Jj&ikf0&4"d0'FOU''?U
Jc^N*Jc^N*^]N[Cmih!>fcTZ(rZ0c7lQ!SWJfB:\JfB:\oc!lLl:LM:nON4@nO<%;nO)A(nNle4nNY5]
Jj.mPWBGhrOZi7tk<.o2d0/S6]E?1UJc^N*Jc^N*g&gF]mih!>lQ>R;miL.&lQ"t)JfB:\JfB:\bo>n=
njr:@oLA[GpdOdBnO)A(nNle4nNZV/Jj-J(d63(EJj&<\ff\I%cihPpecW#UJc^N*Jc^N*oE+5#mNLm=
fcU#2pE&!.lQ"%dJfB:\JfB:\k8WVVo18CAoLA@>o0iRFoL%\+nNle4nNY\jJj.@A\35F,Jj%gMkQT?:
ncQ&te,k4'Jc^N*Jca0ukT]F<llc$Eiud\1fcBAunJd'!JfB:\JfDKEkXkA:nON4@nO<(<nO)n7nNub3
oK_q2^HR65j?B2!Jj#SdkWJK"kQT?:fE97u\H7?aJc^N*Jcb*:kT]F<llb++r?(GKfcBE!ef02[JfB:\
JfED_kXkA:nON4@nO<CEpdFX>j$N9%oK_q2k!"A\]KXA!Jj"]KnibbjkQT?:rr]"uhu\K3Jc^N*Jc`^h
kT]F<llat'mN2?Jg`>`$]GlGAJfB:\JfF>$kXkA:nON4@nO<(<nO!:Cj?iB&oK_q2bW^VBeNU-!Jj#&U
pH7V$kQT?:jTE0u`WC_nJc^N*JcaX-kT]F<llbR8n/q'>fcBE!iu<RhJfB:\JfDrRkXkA:nON4@qF10J
oL/4:j$N9%oK_q2o0.aiXZk<!Jj"]Kj#u6]kQT?:b6->uX9*tTJc^N*JcbQGkT]F<llat'p`B/NfcBE!
aW#gNJfB:\JfEklkXkD;nON1?nO<(<rBp6Fj$N9%oK_q2ffk!O`]h(!Jj"]Kr&rq"kQT?:ncQ)udfP+&
Jc^N*Jca0ukT]F<llc$Eiud\1fcBE!n/HruJfB:\JfDKEkXkD;nON1?nO<(<nO)n7nNub3oK_q2^HR65
h`di!Jj#D_m6(#'kQT?:fE97u\H7?aJc^N*Jcb*:kT]F<llb++r?(GKfcBE!ef02[JfB:\JfED_kXkD;
nON1?nO<CEpdFX>j?iB&o0Dh1k!"A\[m&#!Jj"]Km60DjkQT?:rr]"uhu\K3Jc^N*Jc`^hkT]F<llat'
mN2?Jg`>`$]GlGAJfB:\JfF>$kXkD;nON1?nO<(<nO!:Cj[/K'o0Dh1bW^VBcp"d!Jj"lPr&j.)kQT?:
jTE0u`WC_nJc^N*JcaX-kT]I=lQGI7n/q'>fcBE!iu<RhJfB:\JfDrRkXkD;nON1?qF10JoL/4:j?iB&
o0Dh1o0.aiW'8s!Jj"]KhEBm]kQT?:b6->uX9*tTJc^N*JcbQGkT]I=lQFk&p`B/NfcBE!aW#gNJfB:\
JfEklkXkD;nON4@n3ut;rBp6Fj?iB&o0Dh1ffk!O_*5_!Jj"]KpH@S"kQT?:ncQ)udfP+&Jc^N*Jca0u
!$g_Pmih!>pE/E;miL+%ll>L6JfB:\JfB:\^`2K/oLSLBoLA@>o0i+9o0W"7nNlb3nNXcPJj.mPWBGhr
OZi7toK;=@d0/)(aof0UJc^N*Jc^N*k5tZ.l6>[?lQG"*r?(JLfcBAuef02[JfB:\JfED_kXkD;nON4@
nO<@DpdFX>j?iB&o0Dh1k!"A\Z9HZ!Jj"]KkWS&jkloE:rr]"uhu\K3Jc^N*Jc`^hrZgbRmNLm=fcTZ(
r>j]7lQ!PVJfB:\JfB:\oGd$do18CAoLA@>o0i+9!(,d6nNle4nNY2\Jj.@A\35F,Jj&9ZkloH;j9*'t
`WC_nJc^N*JcaX-rZgbRmNLp>ko]C:miL.&lQ"q(JfB:\JfB:\bo>n=o18CAoLAXFq*jmCnO)A(nNle4
nNZS.Jj,qni&uZTJj%dMkWJ)5d0.Sof)r)UJc^N*Jc^N*oE,":lltj@llat'pE')NfcBAuaW#gNJfB:\
JfEklkt1J;nON4@nO<(<r'U0Fj$N9%oK_q2fKOmN]KXA!Jj"]Knic5"kloH;nH5utdfP+&Jc^N*Jca0u
rZgbRmNLp>p)i?;mN1%%lQ#C5JfB:\JfB:\^`2N0o18CAoLA@>oL/4:nj;n6nNle4nNX`OJj.^KY!%A"
N'6ntoK;@Ad0/&'b6,6UJc^N*Jc^N*k5tW-lltj@llb(*rZCPLfcBE!eJj)ZJfB:\JfED_kt1M<nON1?
nO<@Dq*aa?j$N9%oK_q2jZ\8[XZk<!Jj"]Kj#u]jkloH;rWAquhZAB2Jc^N*Jc`^hrZgbRmNLp>fcTW'
r>j]7ll<VVJfB:\JfB:\oGd$doLSLBo1&7=oL/4:s$Gg6nNle4nNY2\Jj.1<]fgs1Jj'#ploaM9d0/M4
^&u=UJc^N*Jc^N*g&h:!lQYa?llbO7nK70?fcBE!iZ!IgJfB:\JfDrRkt1M<nON1?q*k*JoL/4:j$N9%
oK_q2nihXhSj)7!Jj"]Ke331]kloH;aog8uWrdkSJc^N*JcbQGs!-hRmih!>fcTr0p`A*/ll=(cJfB:\
JfB:\k8WYWoLSLBo1&7=oL/UEp-[n-n3Q\3nNYYiJj-Y-bWUP@Jj&KamQB_;d0/tAYliDUJc^N*Jc^N*
bl[nilQYd@lQGmCj<*e2fcBE!mi-itJfB:\JfDKEkt1M<nON4@n3ut;nO)k6o0Vt5o0Dh1^-7-4cp"d!
Jj"lPr&jU6kloH;f)s1u\,q6`Jc^N*Jcb*:s!-hRmih!>g`QM;mN1%%ll=OpJfB:\JfB:\g)K9JoLSLB
oLA@>qaC6JnO)A(nNlb3nNZ,!Jj-+sgHC-OJj%sRn3#t>cij=MU]]KUJc^N*Jc^N*^]ON\lltj@lQFk&
miMBIh&Yi%],Q>@JfB:\JfF>$l:LS<nON4@nO<%;nO*=Ck!JT(o0Dh1b<CMA_*5_!Jj"]KpHA%/l35N;
j9**u`<(VmJc^N*JcaX-s!-kSmNLp>kTB=:miL+%ll>"(JfB:\JfB:\bo>q>o18CAoLAUEqF1!Dn3c;(
nNlb3nNZS.Jj,Sdl90_^Jj%FCniZ1@d0.PnfE8/UJc^N*Jc^N*oE,%;lltj@llaq&pE',OfcBAua;]^M
JfB:\JfEkll:LS<nON4@nO<%;r'U*Dk!JT(oK_q2f04dMZ9HZ!Jj"]KkWSN"l35Q<n,ootdK5"%Jc^N*
Jca0us!-kSmNLp>ocN9;mN1%%lQ#@4JfB:\JfB:\^`2Q1oLSIAoLA@>oL/(6og87:nNle4nNX]NJj.@A
\35F,Jj&`gl35Q<ecX(t\,q6`Jc^N*Jcb*:!$geRmNLp>gE6G;mN1%%lQ"FoJfB:\JfB:\g)K<KoLSLB
o1&7=qaC9KlpKu'nNle4nNZ(uJj,qni&uZTJj%dMofVLCd00CMV$#QUJc^N*Jc^N*^]FK\lQYa?llat'
mN29HhAto%],Q>@JfB:\JfF>$l:LV=nON1?nO<(<mR-t@ksFo+oK_q2b!(D@]KXA!Jj"]Knic\/l35Q<
ird$u_ubMlJc^N*JcaX-!$geRmih!>kTB@;mN1%%ll=t'JfB:\JfB:\bo>q>oLSLBo1&LDqF1$El9ji'
nNle4nNZP-Jj,D_mlc7cJj%7>pH7^Ed0.Pnf`S5UJc^N*Jc^N*oE#";lQYd@lQFk&p)a#NfcBE!`uBUL
JfB:\JfEkll:LV=nON4@n3ut;qa9g>lU(,-oK_q2f04dMXZk<!Jj"]Kj$!0"lNPW<n,orud/nn$Jc^N*
Jca0u!$ghSmNLm=ocN9;mN1%%ll>F4JfB:\JfB:\^`2T2o18CAoLA@>o0he0qEjg@nNlb3nNX]NJj.1<
]fgs1Jj'#pq)msHciho%bQG<UJc^N*Jc^N*k5kW.lltj@lQFq(ru^YMfcBE!e/NuYJfB:\JfED_lUg\=
nON4@nO<:BqF'L6mR$G0o0Dh1j?A/ZSj)7!Jj"]Ke33XjlNPZ=qu`bth?&91Jc^N*Jc`^h!$ghSmNLp>
fH9Q'q]4N6ll<SUJfB:\JfB:\oGd*fo18CAoLA@>o0i"6q*XU;nNlb3nNY/[Jj-Y-bWUP@Jj&Kaq`O0J
d0/G2^B;CUJc^N*Jc^N*g&_7!lltj@llbI5nfR<AfH';ui>[@fJfB:\JfDrRlUg_>n43+?pI4sJo0h\-
n3ZY2o0Dh1nNMOgO$<2!Jj"]K`BF,]lNPZ=a91)tWWIbRJc^N*JcbQGlQYa?llat'ocErNfcBAu`uBUL
JfB:\JfEkllUg_>nON1?nO<(<qEsO8nNub3oK_n1f04dMW'8s!Jj"]KhECg"lNPZ=mfTitd/nn$Jc^N*
Jca0ulQYa?llbpBjra"4fcBAumMg`sJfB:\JfDKElUg_>nON1?nO<(<i^<`4oKr(6oK_q2]KUp2_*5_!
Jj"]KpHAL<lNPZ=eH="t[fV-_Jc^N*Jcb*:lQYd@lQFn'!$CVMfcBAue/NuYJfB:\JfED_lUg_>nON1?
nO<:BqaBC1o0Vt5oK_q2j$&&YR6Kn!Jj"]KcTV:jlik`=qu`euh#`00Jc^N*Jc`^hlltj@lQFk&mN26G
h];#&\f65?JfB:\JfF>$lq-e>nON4@n3ut;m6gP6o0Vt5oK_q2aZb;?Z9HZ!Jj"]KkWJo.lik`=iWHsu
_ZGDkJc^N*JcaX-lltj@lQG@4o,mBAfcBE!i#@7eJfB:\JfDrRlq-e>nON4@p-nmJo0hP)o0Vt5oK_q2
n32FfME^i!Jj"]K^ch#fcihDlg&n;UJc^N*Jc^N*oE+A'mNLm=fcTl.qB"<1ll="aJfB:\JfB:\k8OCn
m7Hn?nON4@nO<%;qEsI6oKr(6o0Dh1ein[LUH[U!Jj"]Kg-+d+d0/k>ZNJPUJc^N*Jc^N*bl[5UmNLp>
o,m*:miL+%ll>C3JfB:\JfB:\^`3;GmRd%An43+?nO<":i^3]4og817o0Dh1]KUp2]KXA!Jj"]KoKDOE
d0.r$blbBUJc^N*Jc^N*k5suomNLp>fcL29miL+%ll=InJfB:\JfB:\g)L#`mn*.BnON1?nO<7Aq*a71
oKr(6o0Dh1j$&&YPWnP!Jj"]KbrtCsd00=KV?>WUJc^N*Jc^N*^]NjHmNLp>fcTW'qAnH6ll<PTJfB:\
JfB:\oGda$n4E7CnON1?nO;q8n3ck9oKr(6o0Dh1aZb;?XZk<!Jj"]Kk<8/8d0/D1^]VIUJc^N*Jc^N*
g&gUbmih!>jra4;m2jt%lQ"h%JfB:\JfB:\bo?URn4E7CnON1?p-nmJmmQ;*o0Vt5oK_n1n32FfKg,K!
Jj"]K^ch&gcihAkg&n;UJc^N*Jc^N*oE+D(mNLm=fcTi-q&\92lQ!n`JfB:\JfB:\k8X@lnO`=CnON1?
nO;k6s$Q$<o0Vt5oK_q2eNSRKSj)7!Jj"]Kg-+g,ciib=ZNJPUJc^N*Jc^N*bl[8VmNLm=o,m-;lQ4h%
lQ#:2JfB:\JfB:\^`35EnO`=CnON4@n3u_4kX5A:og817oK_q2]0:g1[m&#!Jj"]KoKDRFcihi#c3(HU
Jc^N*Jc^N*k5t#pmNLm=fcTK#h&Yi%dMmcWJfB:\JfED_rCZTOo18CAoLA@>pdFaBksP&/nNle4nNZ"s
Jj,5ZoK@dhJj%@Am01l?q?*Vtg]E'/Jc^N*Jc`^hm3:sAllaq&koTjFi#V/(\/U#=JfB:\JfF>$rCZTO
oLSIAoLA@>l9t;4p-\I=n3Q\3nNY)YJj-+sgHC-OJj&9[m01l?hugdt_?,;jJc^N*JcaX-m3:sAllbC3
oH39<h];&'h]%.dJfB:\JfDrRrCZTOoLSLBo1&CArC,s=lU1;2nNlb3nNZJ+Jj+cMs#u*!Jj$n4m01l?
`WOrtVuhPPJc^N*JcbQGm3;!BlQFk&o,dNFi#V/(`>aCJJfB:\JfEklr^uZOoLSLBo1&7=lU:_?lpLD3
nNlb3nNYPfJj,Sdl90_^Jj%gNmKLr?m/s]tcN8\"Jc^N*Jca0umNV'BlQGa?kTAn-iZ7>)ll1NqJfB:\
JfDKEr^u]Po18CAo1&7=k="])s$HEGnNlb3nNXWLJj-J(d63(EJj&`hmKLr?df[kt[/tp]Jc^N*Jcb*:
mNV'BlQFk&!$:5CiuRG*dMmcWJfB:\JfED_r^u]Po18CAoLA==pdFR=mmH\5nNle4n3>nrJj,&Uq)s<m
Jj%@AmKLr?q?*Vtg]E'/Jc^N*Jc`^hmNV'BlQFk&jrXLCj;mP+\/U#=JfB:\JfF>$r^u]Po18CAoLA@>
j@&i3pI"O=nNle4nNY&XJj,qni&uZTJj&9[mKLr?huggu_#f2iJc^N*JcaX-mNV'Bllb@2ocN07jW3Y,
h]%.dJfB:\JfDrRr^u]PoLSIAoLAIAr^Gj8nO)n7nNle4nNZG*Jj+cMqEBa!Jj$n4mKLu@`<4ltVZMGO
Jc^N*JcbQGmNV'Bllaq&o,d?AjrNe.`#F:IJfB:\JfEkls%;cPoLSLBo1&7=l9tJ:nO)q8n3Q\3nNYMe
Jj,D_mlc7cJj%gNmKLu@liXWtc2rS!Jc^N*Jca0umNV*ClQG^>kTA_(k8in/lPkEpJfB:\JfDKEs%;cP
oLSLBo1&7=j$`E)r^-?GnNlb3nNXTKJj-;#eieUJJj&`hmfh&@dK@etZiYg\Jc^N*Jcb*:miq0ClQFk&
ruU)>kT0"0d2RZVJfB:\JfED_s%;fQo18CAo1&7=pI+C:nO)q8nNlb3nNYtrJj+lPr]PirJj%@Amfh&@
q#dPtgB)s.Jc^N*Jc`^hmiq0ClQFk&jW=4=koK+1[i9o<JfB:\JfF>$s%;fQo18CAoLA==j@&i3pI"R>
nNlb3nNY&XJj,bijZS2YJj&9[mfh&@hZL^t_#f2iJc^N*JcaX-miq0ClQG71p)i'2lQ,:2hA_%cJfB:\
JfDrRs%;fQo18CAoLAF@r^Gm9nO)n7nNle4n3?>)Jj+cMofeC!Jj$n4mfh&@`<4ltVZMGOJc^N*JcbQG
miq0Cllaq&nfI';llGC3`#F:IJfB:\JfEkls%;fQoLSIAoLA@>ksYD:nO)n7nNle4nNYJdJj,5ZoK@dh
Jj%gNmfh)AlN=QtblWIuJc^N*Jca0umiq0Cllbd>ko\V#m2bL4lPkEpJfB:\JfDKE!(u`PoLSLBo1&7=
j$`E)rBg6FnNle4nNXQJJj-+sgHC-OJj&`hn-./Ad0%_tZN>^[Jc^N*Jcb*:n079DlQFh%ruTo9mN(X6
cl7QUJfB:\JfED_!(ucQo18CAo1&7=p-e=:nO)q8n3Q\3nNYqqJj+cMs#u*!Jj%@An-./Ap]IJtg&cj-
Jc^N*Jc`^hn079DlQFk&j<!t8mN(X6[Msf;JfB:\JfF>$!(ucQo18CAo1&7=j$``2pd=[?nNlb3nNY#W
Jj,Sdl90_^Jj&9[n-./Ah?1Xt^]K)hJc^N*JcaX-n079DlQG40pE/$/mN(X6h&CqbJfB:\JfDrR!(ucQ
o18CAoLAC?s$c!:n3ch7nNlb3nNZD)Jj+cMn33%!Jj$n4n-./A_unftV?2>NJc^N*JcbQGn079DlQFk&
nK-m8miC^6_]+1HJfB:\JfEkl!(ucQoLSIAoLA@>kX>>:nO)n7nNlb3nNYJdJj,&Uq)s<mJj%gNn-.2B
l3"HsblWIuJc^N*Jca0un079Dllba=l6"\#mN(U5l5P<oJfB:\JfDKEn4E7CnON1?nO;J+nO*4@pd4L:
oK_n1\NYU/UH[U!Jj"]KoKD^Jcih\tci^TUJc^N*Jc^N*k5t/tmNLm=fH:)6g`Gl(lQ"7jJfB:\JfB:\
g)KQRo18CAo1&7=ogJ7:nO)n7nNle4nNYnpJj+cMqEBa!Jj%@AnHI8BpB.Dtf`Ha,Jc^N*Jc`^hnKRBE
l6+b%j<""9mN(U5[Msf;JfB:\JfF>$nO`=CnON1?nO;J+q*XsFoKr%5oK_q2`BJl;PWnP!Jj"]Kk<8>=
cii/,_umaUJc^N*Jc^N*g&gdgmNLg;j<+.=fH0H$ll=e"JfB:\JfB:\bo?1Eo18CAoLA@>!(Gp9nO)q8
nNlb3nNZA(Jj+cMlTU\!Jj$n4nHI8B_ZS`tV#l5MJc^N*JcbQGnKRBEkTJY&n/gg8mN(X6_Ae(GJfB:\
JfEklnO`@Dn43+?n3uP/rC$-BoKr(6o0Dh1dQW7HKg,K!Jj"]Kg-+s0ciiV9[fahUJc^N*Jc^N*bl[DZ
mNLa9o,m9?fH0H$ll>7/JfB:\JfB:\^`2f8oLSIAoLA@>j$`E)qa1*FnNlb3nNXNIJj,bijZS2YJj&`h
ncdACcNDPsZ3#UZJc^N*Jcb*:nfmKFjWND%r>sc9mN(U5cPqHTJfB:\JfED_nk&FDnON1?nO<(<n3le6
o0Vt5oK_n1h`cWUJj/ikN]htWbrtV$cij%EWWUoUJc^N*Jc^N*^]O'NmNLX6h]Ll"pE&`ClQ!;OJfB:\
JfB:\oGd?mo18CAo1&7=j$`Z0qEsj@nNle4nNXrUJj,5ZoK@dhJj&9[ncdACg]PLt^&ilfJc^N*JcaX-
nfmKFiumS.q&e61mN(U5g`(haJfB:\JfDrRnk&FDnON1?nO;J+nO)q8n3Q\3nNZ>'Jj+cMk!#>!Jj$n4
ncdAC_?8ZtU]Q,LJc^N*JcbQGnfmKFiZR5&miLa8mN(X6_&ItFJfB:\JfEklnk&IEn43+?n3uM.r^?6C
oKr(6o0Dh1d6<.GJj02uKKXoMg-,!1ciiS8\-'nUJc^N*Jc^N*bl[G[mNLO3p`JiEfH0H$ll>4.JfB:\
JfB:\^`2i9oLSLBo1&7=j$`E)qEk$FnNlb3nNXKHJj,Sdl90_^Jj&`ho**JDc3)JsYl]LYJc^N*Jcb*:
o-3TGh]Uu%r#XZ8miC^6c5V?SJfB:\JfED_o1AOEnON1?nO<%;nO2n7o0Vt5o0Dh1hEHNTJj/ZfP<FL\
brtY%cij"DWrpuUJc^N*Jc^N*^]O*OmNLF0jWEJ'p`AiDlQ!8NJfB:\JfB:\oGdBno18CAo1&7=j$`W/
qa9sAnNle4n3=iTJj,&Uq)s<mJj&9[o**JDgB5Cs^&ilfJc^N*JcaX-o-3TGh&u,-q&e92mN(U5gDb_`
JfB:\JfDrRo1ARFn43+?n3m=Fj@&N*oKr%5oK_q2l99e`Jj/-WU-4)k^ch8mcih/ehuf_UJc^N*Jc^N*
oE+V.mNL@.kTB46lQ5I7lQ!_[JfB:\JfB:\k8X"aoLSIAoLA==k!]5;n3ch7n3Q\3nNYAaJj+cMqEBa!
Jj%gNoEESEk6&6sao[.rJc^N*Jca0uoHNZGgE?G:m2st%mN(X6k8T!lJfB:\JfDKEoL\XFnON1?nO;J+
n3d%=qa0g=o0Dh1[Q]:,PWnP!Jj"]KoKDgMcihSqdfZfUJc^N*Jc^N*k5t9"mNL7+l6#mEhB))*ll=7h
JfB:\JfB:\g)KZUo18CAo1&7=njN%:nO)n7nNlb3nNYhnJj+cMlTU\!Jj%@AoEESEoE2/sf)gO*Jc^N*
Jc`^hoHN]HfHBK%i?%e9mN(U5ZQ"K8JfB:\JfF>$oL\XFnON1?nO;J+p-\aFo0Vt5o0Dh1_`iZ9Kg,K!
Jj"]Kk<8G@cii&)`WNmUJc^N*Jc^N*g&gmjmNL4*nfR]MfcKQ%lQ"UtJfB:\JfB:\bo?:HoLSIAoLA:<
!(>p:nO)n7nNle4n3?2%Jj+cMgchW!Jj$n4o``YE^]WNtU&ooJJc^N*JcbQGocicHfHBN&m2kU8mN(U5
^`.kEJfB:\JfEkloh"aGn43+?mR?;,!(?<DoKr%5oK_q2cTZqEJj/ikN]htWg-,*4ciiJ5\c^%UJc^N*
Jc^N*bl[P^mNL4*rZCPMfH0H$lQ#(,JfB:\JfB:\^`2r<o18CAo1&+9k="f,q*P!GnNlb3nNXEFJj,5Z
oK@dhJj&`ho``\FbQH>sY6':WJc^N*Jcb*:ocifIfHBK%qB"N8mN(X6bSu-QJfB:\JfED_oh"aGnON1?
lp^V9o0i+9o0Vt5o0Dh1gcg<RJj/<\SNVQfbrt_'ciiqBXTR,UJc^N*Jc^N*^]O0QmNL4*lQ>%+qB#&F
lQ!2LJfB:\JfB:\oGdHpoLSIAo1&%7ksY23rBp0CnNlb3nNXlSJj+cMs#u*!Jj&9[p'&bFf`T7s]E3Zd
Jc^N*JcaX-p*/lIfHB]+r#aQ4mN(U5fc,M^JfB:\JfDrRp.=jHn43+?m7$tBl9t/0o0Vt5oK_n1krs\_
Jj.dMX?D.u^chApcNLubi<,eUJc^N*Jc^N*oE+_1mNL4*lQ>I7m2k[9lQ!YYJfB:\JfB:\k8X+do18CA
o1%q4lpU>1oKr%5oK_k0cp!%FJj/ZfP<FL\g-,-5ciiG4]*$+UJc^N*Jc^N*bl[S_mNL4*r?(JMfH0H$
lQ#%+JfB:\JfB:\^`2u=o18CAo1%n3m6pG2pd4pGnNlb3mQ\0EJj,&Uq)s<mJj&`hp'&eGb6-8sXoa1V
Jc^N*Jcb*:p*/oJfHBK%q&\H8mN(X6b8Z$PJfB:\JfED_p.=mIn43(>k!f/8oL/4:o0Vt5o0D\-h`cWU
Jj/-WU-4)kbrte)cNNe@Xom2UJc^N*Jc^N*^]O6Sm31+)lQ>"*q]>/GlQ!/KJfB:\JfB:\oGdNro18@@
oL@n1mmQe8r^69DnNlb3lp&KRJj+cMqEBa!Jj&9[pBAkGfE91s])mQcJc^N*JcaX-pEK#Kf-'Q)r?'Z5
mN(U5fGfD]JfB:\JfDrRpIXsInON1?lp^\<n3le6o0Vt5oK_\+mQQ4dJj.UHYs!\%^chDqcih#aiWGkU
Jc^N*Jc^N*oE+b2mNL4*lQ>F6mN1d:lQ!VXJfB:\JfB:\k8X.eo18CAo1%b/nO*@EnO)q8n3Q\3ks*]^
Jj+cMlTU\!Jj%gNpBAnHj9*$s`r^hoJc^N*Jca0upEK#KfHC)6n/p:(mN(U5jVrdjJfB:\JfDKEpIY!J
n43(>j$iK+nO*":r^--@o0DM(]KUp2Kg,K!Jj"]KoKDsQcNMAmecW#UJc^N*Jc^N*k5tE&m31+)lQ>mC
i?%D-ll=.eJfB:\JfB:\g)KfYo18@@oL@h/rC$<HnO)n7nNlb3k<J#kJj+cMgchW!Jj%@Ap]\tHnH5rs
e,k4'Jc^N*Jc`^hp`f,Lf-'E%h&cJ8mN(U5YT&05JfB:\JfF>$pdt'JnON1?j$iH*o0`OFo0Vt5o0DG&
b<CMAJj/ikN]htWk<8SDciho%aTK*UJc^N*Jc^N*g&h$nmNL4*mN;EMfH0H$lQ"LqJfB:\JfB:\bo?FL
o18CAo1&%7q*jgAn3ch7n3Q\3j?N6"Jj+cMbs&R!Jj$n4p]]"I]E@3sT)sTGJc^N*JcbQGp`f,LfHBK%
l5oC8mN(U5]c2PBJfB:\JfEklpdt*Kn43(>j$iK+s$Q?EoKr%5oK_G$g-1*PJj/<\SNVQfg-,68cNN81
]`Z7UJc^N*Jc^N*bl[\bm31+)q]G>MfH0H$lQ"t)JfB:\JfB:\^`3)@o18@@oL@h/nO2n7og8[FnNlb3
i]k7CJj+cMs#u*!Jj&`hq$#(IaTL,sX9*tTJc^N*Jcb*:q',5Mf-'B$pE&<8mN(X6aW#gNJfB:\JfED_
q+:0KnON1?j$ii5p-eF<o0Vt5o0D8!krs\_Jj.dMX?D.ubrtk+ciie>YQN>UJc^N*Jc^N*^]O<UmNL4*
lQ=n'r>tAIlQ!)IJfB:\JfB:\oGdTto18CAo1%b/n3lh7!(6?EnNlb3i'5RPJj+cMn33%!Jj&9[q?>1J
eH<qr\H7?aJc^N*JcaX-qBG;MfHBQ'ru]l7mN(U5ef02[JfB:\JfDrRqFU9Ln43(>l:(P<nO2k6oKr%5
oK_7tpca9nJj.7>]01a/^chMtcNLi^jTD(UJc^N*Jc^N*oE+k5m31+)lQ>@4n/h!<lQ!PVJfB:\JfB:\
k8X7ho18@@oL@h/nO3@DoL&4:n3Q\3h*9d\Jj+cMiBEu!Jj%gNq?>1JiWHms`<(VmJc^N*Jca0uqBG>N
f-'o3nfQL*mN(U5iu<RhJfB:\JfDKEqFU9LnON1?j$iH*nO)q8!(-3Ao0D(q`]eu<Jj0#pM*6GRoKE$S
cihAkfE8/UJc^N*Jc^N*k5tK(mNL4*lQ>d@j<!\/ll=(cJfB:\JfB:\g)Kl[oLSIAo1%b/qF('GnO)n7
nNlb3gHY*iJj+cMdQXp!Jj%@AqZY:KmK9]rdK5"%Jc^N*Jc`^hq]bDNfHBK%gE->8mN(U5XrDs3JfB:\
JfF>$qapBMn43(>j$iK+n3ch7n3Q\3fg""NJj+cMlTU\!Jj&9[qZY:Ke-!kr\,q6`Jc^N*JcaX-q]bGO
f-'E%!$Bi7mN(U5eJj)ZJfB:\JfDrRqapBMnON1?kXGA;nO2k6oKr%5oK_%nrB>fsJj.(9^cd94^chPu
cNLf]jo_.UJc^N*Jc^N*oE+n6mNL1)lQ>=3nK.*=lQ!MUJfB:\JfB:\k8X:io18CAo1%b/n3m4BogA=;
nNlb3f0A=[Jj+cMgchW!Jj%gNqutCLhug^r_ubMlJc^N*Jca0ur$(MOfHBr2oH2^,m2bO5i>[@fJfB:\
JfDKEr(6KNn43(>j$iH*nO)n7nNlb3ej%>AJj+cMofeC!Jj&`hqutCL`WOlrWWIbRJc^N*Jcb*:r$(MO
fHBK%oH**8mN(U5`uBULJfB:\JfED_r(6KNn43+?i^NZ2q*a^>oKr%5o0Chjo0.aiJj.FC[QT4*brtt.
cNNV;Z3/JUJc^N*Jc^N*^]OEXmNL1)lQ=h%ruUSKlQ!#GJfB:\JfB:\oGd^"o18CAo1%_.nO2k6!(-?F
n3Q\3dm)PMJj+cMk!#>!Jj&9[qutFMdK@_r[K;$^Jc^N*JcaX-r$(PPf-'B$fH0H$lQ"CnJfB:\JfB:\
bo?RPoLSIAo1%n3rC-3DnO)n7nNlb3dm!gsK0FlN^-9M!Jj$n4r<:LM\-(mrS-"9DJc^N*JcbQGr?CVP
fHBK%jrX(7mN(U5\f65?JfB:\JfEklrCQTOn43(>j$iH*r'U0Fo0Vt5o0C\fkrs\_Jj.dMX?D.ug-,B<
cNN,-^]VIUJc^N*Jc^N*bl[hfmNL1)pE0&MfH0H$lQ"h%JfB:\JfB:\^`35Do18@@oL@h/nO2k6o0NFC
nj2k4cp,l@Jj+cMn33%!Jj&`hr<:LM`<4frW<.YQJc^N*Jcb*:r?CYQf-'B$o,d$8mN(U5`Z'LKJfB:\
JfED_rCQTOnON1?j$i]1qF'g?oKr%5oK^\dpca9nJj.7>]01a/bru%0cNNP9ZieVUJc^N*Jc^N*^]OKZ
m31+)lQ=b#!$:PKlPuuFJfB:\JfB:\oGdd$o18@@o1%b/n3le6r^-<FnNlb3bs1)LJj+cMiBEu!Jj&9[
rWUUNd0%Yr[/tp]Jc^N*JcaX-rZ^_QfHBK%ruTi7mN(U5di3lXJfB:\JfDrRr^l]Pn43(>k!f8<nO2k6
o0Vt5o0C_gq`fm#Jj-_/aut>>^chZ#cNL]ZkQ@:UJc^N*Jc^N*oE,"9mNL1)lQ>40oH*E@lQ!DRJfB:\
JfB:\k8XClo18CAo1%_.nO34@pI"O=nNlb3b<PDYJj+cMdQXp!Jj%gNrrp^Oh#kIq_?,;jJc^N*Jca0u
s!$hRf-'c/p)hp.mN(U5h]%.dJfB:\JfDKEs%2fQn43(>j$iH*nO)n7r^$-AoK^M_eNSRKJj/KaQp$$a
oKE3XcNM,fg]OGUJc^N*Jc^N*k5tZ-m31+)lQ>X<k8s%3lQ!k_JfB:\JfB:\g)L&`o18@@nj_\/p-edG
nO)n7nNlb3a?TVeJj+cM_`kk!Jj%@Arrp^Ol3"Erc2rS!Jc^N*Jc`^hs!$kSf-'B$fH(#5mN(U5WuHX0
JfB:\JfF>$s%2fQnON(<j[J]-n3d.@pHnC9o0C>\j?A/ZJj.sRV`fVpk</eKc32JrcNCNUJc^N*Jc^N*
g&_6um31((lQ?*IgE,c'lQ":kJfB:\JfB:\bo6XSo18@@mmcM0s$cHGn3ch7n3QY2d6I=hNBVqXZp)f!
Jj$n4!!U[O[0,XqRKA'BJc^N*JcbQG!$^eRfHBH$j<!t8mN(U5[i9o<JfB:\JfEkl!(lcQn42n9kXFu/
q*XsFo0Vq4oK^>Zo0.aiJj.FC[QT4*g-#E>cNN#*_ZR[UJc^N*Jc^N*blRkhmNL1)oH3iMf,j?#lQ"b#
JfB:\JfB:\^`*8Fo18CAlpg5.n3le6o0WCAog/17_`uj=Jj+cMk!#>!Jj&`hc31udh#jMUJc^N*Jc^N*
k5t#of-'B$n/gg8m2bL4`#F:IJfB:\JfED_o18@@lUL/.ogJaHn3ce6nNlb3_`n,cK0FlN^-9M!Jj%@A
cNNG6[KFbUJc^N*Jc^N*^]NmHf-'B$fH1&5n/^g7W>gF.JfB:\JfF>$o18@@l:1,/n3lb5r'L3Gn3QY2
_*@0JJj+cMf069!Jj&9[cNMMqci^TUJc^N*Jc^N*g&g[cf-'B$r#XW7mN(U5cl7QUJfB:\JfDrRo18@@
ksk&/n3le6o0Vq4nj(SenNW1#Jj-A%e3/CH^cg!HZifUrQi_j@Jc^N*JcbQGmNL1)lQ>+-p)`WBlQ!>P
JfB:\JfB:\k8X%an42Y2mR?Y6pI"dEo0Vt5n3FfSpca9nJj.7>]01a/g-*dcg&o7q^B/ugJc^N*Jca0u
mNL1)o,mcMfH0E#lQ"_"JfB:\JfB:\^`2o:n42V1mmZb7n3ce6r'C$Bmm+]Rh`cWUJj/-WU-4)koKCP(
^]WEqV#l5MJc^N*Jcb*:mig:*l6#I9l5o@6lQ!b\JfB:\JfB:\g)KZTn42S0nO<%;r^?6CoKr%5mQefW
q`fm#Jj-_/aut>>brsDVk6&0qbQ<@tJc^N*Jc`^hmig:*lQ=_"rZ1MLlPuiBJfB:\JfB:\oGdHommlG.
njW%9nO*.>qEj[;m6JKPmQQ4dJj.UHYs!\%k<7/pblcArYl]LYJc^N*JcaX-mig:*lQ?!Fh&bu)lQ"4i
JfB:\JfB:\bo?=HmRQ>-o0iXInjMt7o0Vt5lTj#clp$h#Jj-1uffapM^cg'JZ30FqQNDa?Jc^N*JcbQG
n0-C+l6"t+p`AfClQ!;OJfB:\JfB:\k8X(bm76;.o0r.:p-\^Eo0Vt5l9N0MrB>fsJj.(9^cd94g-*gd
f`T1q^&ilfJc^N*Jca0un0-C+nK7WMf,j?#lQ"XuJfB:\JfB:\^`2u<lUU,-o0r.:nO)n7qEajAks3'L
j?A/ZJj.sRV`fVpoKCS)^B<?qU]Q,LJc^N*Jcb*:n0-C+lQ>L8lQ5I7lQ!_[JfB:\JfB:\g)K`Vl::&-
o0r4<!(?<Do0Vq4kWm?Vp-4O#Jj-P*cTQkCbrsJXjTE$qao[.rJc^N*Jc`^hnKHL,l6"Y"r#P>KlPufA
JfB:\JfB:\oGdKpkst#.o0r.:n3d"<qa0g=k!6aIo0.aiJj.FC[QT4*k<75rb6-2qYQBCXJc^N*JcaX-
nKHL,lQ>pDh]D/*lQ"1hJfB:\JfB:\bo?CJk==i-o0rXHo0i+9o0Vq4jZqQbk<GJ#Jj-"phE?HR^cg*K
Ylj@qQ3)X>Jc^N*JcbQGnKHL,lQ>"*q&\rElQ!5MJfB:\JfB:\k8X.dk""c-o0r.:ogA[Fo0Vq4j?URH
!'c*"Jj-n4`BAf9g-*mff)s%q]E3ZdJc^N*Jca0unfcU-miVHLf,j?#lQ"UtJfB:\JfB:\^`3#=j[\`.
o0r.:n3ce6q*FgBi]t=Ekrs\_Jj.dMX?D.uoKCY+]`[3qU&ooJJc^N*Jcb*:nfcU-l6#@6m2kX8lQ!\Z
JfB:\JfB:\g)KfXj%&Q-o0r.:n3ch7n3Q&!cp.%bP!4I]Y<LH!Jj%@Adfe_6\c^%UJc^N*Jc^N*^]O'M
f-'B$f,jf0oH!3:VAk++JfB:\JfF>$pdjC7n4*"<n3le6pHngFn3Q)"^-DBVJj+cMa?I4!Jj&9[e-*kq
e,ulUJc^N*Jc^N*g&gjhf-'?#p`A?7mN(U5bSu-QJfB:\JfDrRpdjC7nOE+=r'^3Gn3ce6n3Q)"gcsd_
Tg"&lTK_C!Jj$n4e-)rWmfSdUJc^N*Jc^N*oE+V-f-'?#hB)P8m2bL4Z5\B7JfB:\JfEklq+0L8n4*"<
n3lk8r^69DnNl/"_E[o^Ld$DS\N\/!Jj%gNe-+>)a90$UJc^N*Jc^N*bl[J[f-'K'rZB`5m2bL4fc,M^
JfB:\JfDKEq+0L8n4*"<n3le6o0W1;qEa.,\j,UHJj+cMdQXp!Jj&`heHEJdiWGkUJc^N*Jc^N*k5t9!
f-'?#l5o@7mN(U5^)MYCJfB:\JfED_qFKR8nOE(<nO3CEnjE"8n3Q)"c9LY[QTg!bW]o*!Jj%@AeHFk6
]E?1UJc^N*Jc^N*^]O-Of-'?#fH0i/oc<?<U`4n)JfB:\JfF>$qFKU9n4*"<n3lb5p-SaFnNl/"\3KpU
Jj+cM_`kk!Jj&9[eHEqqecW#UJc^N*Jc^N*g&gpjefa9#p)`37m2bL4b8Z$PJfB:\JfDrRqFKU9n4*"<
qaC-GnO)n7n3Q&!gHXLYVETSqRm-%!Jj$n4ec`)Wn,njUJc^N*Jc^N*oE+\/f-'?#g`HA7mN(R4YoA96
JfB:\JfEklqaf[9nOE(<nO2n7!(6?En3Q)"^d%NWNBVqXZp)f!Jj%gNecaJ)aTK*UJc^N*Jc^N*bl[P]
f-'E%ru]i6mN(U5f,K;\JfB:\JfDKEqaf^:n4*"<n3lb5o0W.:r'B=-Zp4.GJj+cMbs&R!Jj&`hf*&Vd
j9)"UJc^N*Jc^N*k5t?#efa9#kT947m2bL4]c2PBJfB:\JfED_qaf^:n4*"<n3m7Co0`.:n3Q&!bs1AU
S3DNgV*<a!Jj%@Af*("6]`Z7UJc^N*Jc^N*^]O3Qf-'?#f,j]-pDrN=UDne(JfB:\JfF>$r(,g;n4)t;
nO2k6oKiOEn3Q)"Z9J=RK0FlN^-9M!Jj&9[f*'(qf)r)UJc^N*Jc^N*g&gskf-'?#ocE-7mN(U5aW#gN
JfB:\JfDrRr(,g;n4*"<q*b!Gn3ce6n3Q)"fg"+RX$2,!Q9O\!Jj$n4fEA5WncP!UJc^N*Jc^N*oE+b1
efa9#g)g57m2bL4Y8`'4JfB:\JfEklrCGm;n4*"<n3lb5o0Vt5i]t7CnNW1#Jj-A%e3/CHg-+'kdK@Yp
\,q6`Jc^N*Jca0upEA-2l6"V!m2bL4ef02[JfB:\JfDKErCGp<n4*"<n3lb5o0W(8rB]F.Y!;\FJj+cM
a?I4!Jj&`hfEA\djTD(UJc^N*Jc^N*k5tE%efa6"k8s.7mN(U5],Q>@JfB:\JfED_rCGp<n4*"<n3m1A
ogA=;n3Q)"b<OuNTg"&lTK_C!Jj%@Af`^.6^B;CUJc^N*Jc^N*^]O9Sefa9#f,jW+p`8Z?Tc8S&JfB:\
JfF>$r^c!<n4*"<n3lb5o0Vt5i]sb5q`fm#Jj-_/aut>>k<7K$_unZpWWIbRJc^N*JcaX-p`\63l6#U=
jW<e0lQ!tbJfB:\JfB:\bo?XQi^`K-o0rCAqF'g?o0Vq4i]u-\dm('#Jj,;\ni_Rf^cg?RWWVhpO91"8
Jc^N*JcbQGq'"<3l6"\#ruUSKl5ZrGJfB:\JfB:\k8XFliCEB,o0r.:n3d4Bog8.6j$::Blp$h#Jj-1u
ffapMg-+-mci_Jo[fV-_Jc^N*Jca0uq'"<3lQ?-JfcKN$lQ"CnJfB:\JfB:\^`3;EiCEB,o0r.:n3ce6
o0NCBi]sD+rB>fsJj.(9^cd94oKCn2[KG[pS-"9DJc^N*Jcb*:qB=E4l6#+/o,d9>lQ!JTJfB:\JfB:\
g)L&_i^`K-o0r.:qEt!Eo0Vq4i]tXNh*7c#Jj,YfkWOM\brseag]P=o_ZGDkJc^N*Jc`^hqB=E4lQ=\!
oc<lLl5ZH9JfB:\JfB:\oG[d$iCEB,o0r.:n3ce6s$?3Aj$9e4p-4O#Jj-P*cTQkCk<7Q&_?8KoW<.YQ
Jc^N*JcaX-qB=H5l6#O;k8s"2lQ!n`JfB:\JfB:\bo6XRi^`K-njW7?qaBp@o0Vt5i]u'Zc9J^#Jj,,W
pH=*k^cgETVuu\pNWOe6Jc^N*JcbQGq]XN5l6"V!m2bL4X;ca1JfB:\JfEkliCEB,o0r.:n3d.@pHn@8
i]t.@k<GJ#Jj-"phE?HRg-+3oc3)>o[/tp]Jc^N*Jca0uq]XN5lQ?'Hg)fZ&l5\7lJfB:\JfB:\^`26&
n4*"<n3lb5o0Vt5!(#U0U-AWBK0FlN^-9M!Jj&`hg]XtdkQ@:UJc^N*Jc^N*k5tQ)efa6"iu[k7m2bL4
\/U#=JfB:\JfED_i^`K-njW%9q*XpEo0Vq4j$:[MfKZE#Jj,Jam6-%abrshbgB5:p_#f2iJc^N*Jc`^h
r#sW6l6"V!o,[]KlPuK8JfB:\JfB:\oGcd[n4*"<n3lb5o0WCAnj2>%Y!;G@P!4I]Y<LH!Jj&9[h#tLq
g]OGUJc^N*Jc^N*g&h0qefa9#miL[6mN(R4`>aCJJfB:\JfDrR!(c0@mmcn;oL/XGn3ce6m6Ti!eN_/?
\it^0LHbW!Jj$n4h#sSWp&g9UJc^N*Jc^N*oE+t7efa6"f,jr4miC^6WZ-O/JfB:\JfEkls%)6An4*"<
n3lb5qa1'Elp9f"\j,1=Tg"&lTK_C!Jj%gNh?;%)ci^TUJc^N*Jc^N*bl[heefa6"r#XW7m2bL4d2RZV
JfB:\JfDKEr^c0An4*"<n3lb5o0Vn3r'BO3TKi<<Ld$DS\N\/!Jj&`hh?:+dl3!FUJc^N*Jc^N*k5tW+
efa6"i?%\6mN(R4[i9o<JfB:\JfED_rCH-Bn4)t;n3m"<qEsj@ks=Q!a$8$;YWdY&OZr>!Jj%@Ah?;L6
_ZR[UJc^N*Jc^N*^]OKYefa6"f,jH&r>k/CSK!/"JfB:\JfF>$r(-'Bn4*"<n3lb5nj<7?m6U&'X?Z&9
QTg!bW]o*!Jj&9[hZUXqh?0SUJc^N*Jc^N*g&h9teKF0"m2kO6m2bL4_]+1HJfB:\JfDrRqag$Cmmcn;
njNLGn3ce6k!A?!dm(c8^HR65Jj+cL^cgQXU]^AoMZSJ3Jc^N*JcbQGruor9l6"RurZ1MLl5ZcBJfB:\
JfB:\k8X7glppP7njW%9n3d%=qEj:0m6J3Hh*7c#Jj,YfkWOM\g-+?saog#nZ3#UZJc^N*Jca0uruor9
l6#jDhB)&)l5\.iJfB:\JfB:\^`3)?m76Y8o0r.:n3ce6m6UJ4mm*I/p-4O#Jj-P*cTQkCoKD+8YQO4o
QNDa?Jc^N*Jcb*:!$To9l6"n)p`AfClQ!;OJfB:\JfB:\g)KfXmmlk:njW%9ogAXEo0VG&n3FrWc9J^#
Jj,,WpH=*kbrstff)rto^&ilfJc^N*Jc`^h!$To9l6"Run/_NLl5Z94JfB:\JfB:\oGdNqn42t;o0r.:
mmH\5qEa@3n3F$=k<GJ#Jj-"phE?HRk<7c,]E@$nU]Q,LJc^N*JcaX-eKF-!llPL7m2bI3_Ae(GJfB:\
JfDrRp.4aEmmcn;n3lb5o0VG&n3GAc^H]Y#Jj+cMr'#m!^cgWZU'(5oM#r81Jc^N*JcbQGefa6"efO`0
nf@$9V]14,JfB:\JfEklp.4aEn4)t;n3lb5pd4mFi^*'![m/M0X$2,!Q9O\!Jj%gNiWR=)dfZfUJc^N*
Jc^N*blZH=l6#dBi#_8+l5\(gJfB:\JfB:\^`2u<o1/7=o0r.:n3c_4m6UJ4n3EO/nNW1#Jj-A%e3/CH
oKD1:Xon%nQ3)X>Jc^N*Jcb*:f-'?#h&cD6m2bI3Zl=T9JfB:\JfED_p.4dFn4)t;n3lk8r^60Aj[&B$
_`u7-\it^0LHbW!Jj%@Airmj6`risUJc^N*Jc^N*^]N+1l6"RumMu9JlPu<3JfB:\JfB:\oGdNqnji1=
o0r+9n3cY2r'BX7n3Es;i]j,#Jj,hkj#quWk<7i.\c^mnU&ooJJc^N*JcaX-f-'?#l5o@7m2bI3^`.kE
JfB:\JfDrRpIOmGmmcn;n3m:DnjDe2k<\T&cp,*+aZb;?Jj/omN'4s>irl"WqZDWUJc^N*Jc^N*oE*Yf
l6"RuqAo2KlPu`?JfB:\JfB:\k8X1enji1=njW%9n3cn9pHn+1n3FBGdm('#Jj,;\ni_Rfg-+L"`WO`n
Xoa1VJc^N*Jca0u!$U#<l6#^@i?%A,lQ"+fJfB:\JfB:\^`3&>o1/7=o0r.:mmHD-nj3(;n3EI-lp$h#
Jj-1uffapMoKD7<X97nnPQHF<Jc^N*Jcb*:rup,>l6"b%r#Y5Gl5[)KJfB:\JfB:\g)KiYnji1=njW%9
nO!:DksF]%n3FiT`';"#Jj+cMJj%@AjTO!6aTK*UJc^N*Jc^N*^]OKYg`Yl(efO3!!$(>FQQ(MqJfB:\
JfF>$q+1*Immcn;mmQY4kX+Z&n3Em9h*7c#Jj,YfkWOM\k<7o0\-(anTE9]HJc^N*JcaX-r?:#?ko]+1
miLm;l5[MWJfB:\JfB:\bo?LMnji1=njW%9rBp3Ek!JK%n3G8`[6Mr#Jj+cMnii1!^cgf_SHJfmL&ur.
Jc^N*JcbQGr#sr?l6"Rup`9&Kl5ZT=JfB:\JfB:\k8X7gnji1=njW%9n3ch7nj;e2n3F?Fc9J^#Jj,,W
pH=*kg-+R$_unTnX9*tTJc^N*Jca0uq]Xl?l6#X>iu[S.lQ"%dJfB:\JfB:\^`3,@o1/7=o0r.:mmH/&
pHe[Bn3EC+k<GJ#Jj-"phE?HRoKD=>WWVbnOog4:Jc^N*Jcb*:qB=i@l6"\#rZ:GIl5[#IJfB:\JfB:\
g)Ko[nji1=njW%9n3[1Bj$N<&n3FcR^H]Y#Jj+cMr'#m!brt4mci_Dm\H7?aJc^N*Jc`^hq'"c@l6"Ru
m2c0Gm2VE2JfB:\JfB:\oGdZuo1/7=o0r+9n3c>)rBg*An3Eg7fKZE#Jj,Jam6-%ak<7u2[KGUnScXKF
Jc^N*JcaX-p`\`Al6#+/nK.'<lQ!PVJfB:\JfB:\bo?ROnji1=njW%9qa:'EiBm-%n3G2^YWpT#Jj+cM
m66h!^cglaRfiZmKE?`,Jc^N*JcbQGpEAZAl6"Rup)WoKl5ZN;JfB:\JfB:\k8X=io1/7=o0r+9n3cb5
nNue4n3F9DaZm@#Jj+rRr&oWpg-+X&_?8HnWWIbRJc^N*Jca0up*&WBko]I;jW<e0l5[nbJfB:\JfB:\
^`35Cnji1=njW%9mmH)$pHeaDn3E=)i]j,#Jj,hkj#quWoKDFAVZZMmO91"8Jc^N*Jcb*:oc`QBl6"V!
!$:MJl5ZrGJfB:\JfB:\g)Ku]o1/7=njW%9n3d1Aj?iH(n3F]P\j+;#Jj+cMpHFO!brt:oc3)8m[fV-_
Jc^N*Jc`^hoHEKBko\Lum2c*Emi7Q2JfB:\JfB:\oGdd#nji.<o0r.:mmH/&s$H9Bn3Ed6dm('#Jj,;\
ni_Rfk<8)5ZNK@mS-"9DJc^N*JcaX-o-*HCk9&h-o,d9>lQ!JTJfB:\JfB:\bo?XQo1/7=njW%9q*XpE
iBm-%n3G,\X$>6#Jj+cMkWYJ!^cgrcR0/$BJc^N*Jc^N*oE+V-llbF4g)fl,qAni@TGrJ%JfB:\JfEkl
s%)]Nmmcn;mmQY4n3Z\4o0Mk2YWp&j^HR65Jj+cLg-+a)^B<0lW<.YQJc^N*Jca0uo-*KDj<+%9k8s"2
l5[h`JfB:\JfB:\^`3;Enji1=njW%9mmH)$og/UDmm*1'h*7c#Jj,YfkWOM\oKDLCV$$AmNWOe6Jc^N*
Jcb*:oHEQDiud(u!$1JJl5ZlEJfB:\JfB:\g)C#_nji.<o0r+9n3d+?k!JZ*n3FWN[6Mr#Jj+cMnii1!
brt@qbQH,m[/tp]Jc^N*Jc`^hoHETEi?-ntm2c$CnJm]2JfB:\JfB:\oG[d$nji1=njW%9mmH)$nj2b1
U-Hpf[6B1+N'?u!Jj&9[liaQqkl[@UJc^N*Jc^N*g&gpjllb4.lQ5^?m2bI3\Jp,>JfB:\JfDrRnji.<
o0r+9pI"dEiBm-%n3G&ZVE`m#Jj+cMj$',!^ch#eR03HjJc^N*Jc^N*JcbQGoc`]FhB1\tnf@WKl5ZB7
JfB:\JfB:\k8Wt^n4)t;n3l_4mR$P4o0Mk2Y!9Zc`'/c:Jj0)rLHX?Sm0(*)g]OGUJc^N*Jc^N*bl[S^
llb++qB"lBm2bI3`>aCJJfB:\JfDKEo1/7=njW%9n3c/$o0Mh1PX!ebX$2,!Q9O\!Jj&`hm0'0dpB-?U
Jc^N*Jc^N*k5t?#m3(.*j<":@miC^6WZ-O/JfB:\JfED_o1/:>njW"8n3d%=kX+l,n3FQLYWpT#Jj+cM
m66h!brtItaTKllZN>^[Jc^N*Jc`^hpEAlGg)oDtm2bsAo,Ni2JfB:\JfB:\oGdEmmmck:n3l_4i^3Z2
oKht3TKgO_\it^0LHbW!Jj&9[mKB]qlN<LUJc^N*Jc^N*g&h!lm3(%'n/h<Fm2bI3[i9o<JfB:\JfDrR
oLJC?njW"8ogAXEiBm-%n3FuXTg.O#Jj+cMhEIc!^ch,hQim9gJc^N*Jc^N*JcbQGp`\uHf,s2tn/_KK
l5Z<5JfB:\JfB:\k8X(ammck:n3l_4lpCD4o0Mk2X?X9\aZb;?Jj/omN'5lXmf^6)h?0SUJc^N*Jc^N*
bl[Y`m3'q$ruUJIm2bI3_]+1HJfB:\JfDKEogeL@njW"8n3c/$nj*7@nN`7%dm('#Jj,;\ni_RfoKD[H
TEFulM?8A2Jc^N*Jcb*:q'#)IeK=&tr#P>Kl5Z`AJfB:\JfB:\g)K`Ummck:n3l_4pd474o0Mk2\3I#Y
fKOmNJj/B^Rm#"Zn-$c6dK?`UJc^N*Jc^N*^]O<Tllah#l5o=5p)N`FNZ3QhJfB:\JfF>$p.+R@o0r+9
n3c/$rB^-Cn3ER0`';"#Jj+cMJj&9[nH>oqm/rXUJc^N*Jc^N*g&h*ollah#nK.NJllG@2[2X]:JfB:\
JfDrRpIF[AnjW%9njECDiBm-%mm+iVS3Q1#Jj+cMfflE!^ch2jQim3eJc^N*Jc^N*JcbQGqB>2JeK=&t
mMu9Jl5Z63JfB:\JfB:\k8X.cmmcn;mmQV3l9b;5nj2b1W^!mUc9?hDJj/`hOZhD]ncZH)huf_UJc^N*
Jc^N*bl[bcllah#r>t>Im2bI3_&ItFJfB:\JfDKEpdadBnjW"8mmH)$o0N=?o0AC%c9J^#Jj,,WpH=*k
oKDaJSceilL]W/0Jc^N*Jcb*:q]Y;KeK=&tqAo2Kl5ZZ?JfB:\JfB:\g)KfWmmcn;mmQP1pd4=6o0Mk2
[QgWRh*-ESJj/3YTKUO_o)uu6e,ulUJc^N*Jc^N*^]OEWllah#koT44oGmTFN#R?fJfB:\JfF>$q+'mC
njW"8lpKl$qa(!Cn3EL.^H]Y#Jj+cMr'#m!k<8D>WWV\lPQHF<Jc^N*JcaX-r#tDLeK=6$r#Y2Fl5[,L
JfB:\JfB:\bo?IKmmcn;mmQY4qa9L4o0Mh1_`sJPlop"bJj.[JY<BZaoE:K_q#Z-LJc^N*Jc^N*oE+t7
llah#koT44!$(;EQlCVrJfB:\JfEklqFC!DnjW"8ksOl*qa0j>n3Ep:YWpT#Jj+cMm66h!g-,'2[KGOl
TE9]HJc^N*Jca0ur?:MMeK=Z0n/gp:l5[PXJfB:\JfB:\^`3,?mmcn;mmQ>+ksFu-q`sg>N^(WM\it^0
LHbW!Jj&`ho`U`dr<%cUJc^N*Jc^N*k5tW+llah#koTU?p)WE<U`4n)JfB:\JfED_qa^*EnjW"8k!T)6
mm?S2n3F?FTg.O#Jj+cMhEIc!brt_&_?8?kXTF(UJc^N*Jc`^hrZUVNeK=&tllGX:q&G82JfB:\JfB:\
oGdZtmmcn;mmQ5(lpCM6qEaU9RQnAJaZb;?Jj/omN'6>ep&q8qnH4pUJc^N*Jc^N*g&h9tllae"m2l6J
m2bF2YoA96JfB:\JfDrRr($3FnjW"8mR-\8m6^D1n3FcRP!AJ#Jj+cMcT\^!^chAoQNQs`Jc^N*Jc^N*
JcbQGrup_OeK=#sm2c0Gm2VE2JfB:\JfB:\k8X=hmmcn;mmQ,%o0WCBnj2b1VE_+GfKOmNJj/B^Rm#Ig
pB7f)jTD(UJc^N*Jc^N*blRkgllae"q&])JllG@2]c2PBJfB:\JfDKErC?<GnjW"8iC!'#o0N1;pHX[%
`';"#Jj+cMJj&`hp]Qrdrr[oUJc^N*Jc^N*k5srleK=#sp)WoKl5ZN;JfB:\JfB:\g)L#]mRHe:mmQ)$
!(-3Bnj2b1Z9OjDk<=J]Jj.jOW]eTip]S>6f`S5UJc^N*Jc^N*^]NjFe0!rsllGR8q](D2JfB:\JfB:\
oGdd"mmck:mmQ,%mm?b7rB]m;Qp7uCc9?hDJj/`hOZhkjq#mJqo)k'UJc^N*Jc^N*g&gXae0!rs!$:MJ
l5ZrGJfB:\JfB:\bo?[Qmmck:mmQJ/p-\=9nj2b1^-@TAp-+'lJj.=@\NR_kq#luco`B^HJc^N*Jc^N*
oE+D&e0!rsllH!Dmi7Q2JfB:\JfB:\k8XFkmmck:mmQ,%nO!7Bo0Mh1Ud(_@h*-ESJj/3YTKV!lq?4#)
k6%4UJc^N*Jc^N*bl[;Ue0"B*oH*B?ko@;SJfB:\JfB:\^`*8Dmmck:mmQ)$n3Z\3pH\R?M*Ja>`'/c:
Jj0)rLHY8mq?3)dJc^N*Jc^N*Jcb*:mNC"$l5oO;qAni@TGrJ%JfB:\JfED_!(ZKInjW"8iC!Q1o0W"6
n3F3BQTsh#Jj+cMe3:'!brtq,]E?mjVuhPPJc^N*Jc`^hmi^+%koT44m2Z'EL)Y^`JfB:\JfF>$mmck:
mmQ)$mm?\5s$?*=Q9VT<dlr@IJj/QcQ9FCoqZNVqo`L3UJc^N*Jc^N*g&g^ce0!rsruLMJl5ZlEJfB:\
JfB:\bo?+@njW"8ksP86mm?S2n3FWNLd1c#Jj+cM`BM"!^chSuQ36[ZJc^N*Jc^N*JcbQGn0$4&koT44
q&JoEOrJulJfB:\JfEkln4)t;mmQ)$mm?V3mm*U3Tg.O#Jj+cMhEIc!g-,?:XomnjRKA'BJc^N*Jca0u
n0$4&oH*`JllG@2\/U#=JfB:\JfDKEn4)t;mmQ)$n3Z\3og&F?LHi@7aZb;?Jj/omN'6err</DgrW7ZQ
Jc^N*Jc^N*k5t/re0!ornK%NJl5ZB7JfB:\JfB:\g)KQOnjW"8i'[B.og879mm+$?P!AJ#Jj+cMcT\^!
bru".\c^ajV?2>NJc^N*Jc`^hnK?='l5o:4lQ#pEKH#L^JfB:\JfF>$nOE(<mmQ)$n3Z\3n3E1%X$>6#
Jj+cMkWYJ!k<8eIT*+fiMunS4Jc^N*JcaX-nfZF(koTdDn/^d6WZ-O/JfB:\JfDrRnj`1=mmQ;*qa9g=
o0Mh1\j(g3!'YuuJj-t6_`bdurreShn,e1CJc^N*Jc^N*oE+S+e0!orm2bp@o,Ni2JfB:\JfB:\k8Wt]
njW"8i'[!#r^$3Cmm*O1S3Q1#Jj+cMfflE!g-,H=WrqYiQi_j@Jc^N*Jca0uo,uO)nK.KIllG@2[Msf;
JfB:\JfDKEo1&:>mmQ)$mm?S2o0E:?Kg2t0c9?hDJj/`hOZi>"!!JPhquVHOJc^N*Jc^N*k5t8udi[fq
miDEKko?34JfB:\JfB:\g)KZRnO;n7i'[<,pd4O;mm*s=NBd,#Jj+cMb!*@!brl%0[fbLiU]Q,LJc^N*
Jc`^hoH;X*koT13l5TdCJfB:\JfB:\JfF>$oLAC?mmQ)$mm?S2s$6-?O[#^-h*-ESJj/3YTKVI$S-/Ti
M#r81Jc^N*JcaX-ocV^*koT^Bo,['8W#L=-JfB:\JfDrRog\I?mmQ5(rBp'@nj2_0\3GR0rBH$#Jj-e1
a?@=%PlpFUJc^N*Jc^N*JcbQGocVa+koT13oc3ZFN>mHgJfB:\JfEklog\L@mmQ)$mm?q<pHe:6SNiH*
lop"bJj.[JY<CT&W<;PjPlcO=Jc^N*Jca0up)qg+miM?Im2bF2Zl=T9JfB:\JfDKEp."UAmR5u#n3Z\3
n3?t=K0QS)dlr@IJj/QcQ9Fk'Q36sbJc^N*Jc^N*Jcb*:p)qj,koT13l5Z32JfB:\JfB:\g)K`TnjVt7
iC!<*qEja=n3Es;Ld1c#Jj+cM`BM"!brrK;iWGkUJc^N*Jc^N*^]O6Qdi[fqm2bF2rYpG.JfB:\JfB:\
oGdNonjVn5i^<3%nj31=oK\I%Tg.O#Jj+cMhEIc!k<5=;qu_]UJc^N*Jc^N*g&h!ke0!orp`9#Jl5ZW>
JfB:\JfB:\bo?CHnjVk4j[0#8mm?S2n3FBGJj9#pM`u_V[Q_r!^ce%elN2Y>Jc^N*Jc^N*oE+e1di[fq
m2ba;p`,22JfB:\JfB:\k8X1cnjVe2j[8N(q*FjCmm*@,P!AJ#Jj+cMcT\^!g-)D;n,njUJc^N*Jc^N*
bl[\`di[otrZ:DHko?uJJfB:\JfB:\^`3)=nO;Y0k<n])nj2_0!'c'"X$>6#Jj+cMkWYJ!oKATEpB#pJ
Jc^N*Jc^N*k5tH%di[fqm2c0Gll;?2JfB:\JfB:\g)KiWnjV\/kX4u/rBg'@mm*d8K0K?"Jj+cM^coY!
brrK;j9)"UJc^N*Jc^N*^]O?Tdi[fqllG=1r#:5,JfB:\JfB:\oGdWrnO;P-l9k#,nj3+;p-=U%S3Q1#
Jj+cMfflE!k<5=;rr[oUJc^N*Jc^N*g&h*ne0!lqp)WoKko?H;JfB:\JfB:\bo?LKnjVS,lU(Y=nNue4
mm+3DJj8ikO?S7[Ys-T!^ce+gklQG<Jc^N*Jc^N*oE+n4di[fqllGR8qAb>2JfB:\JfB:\k8X:fnjVM*
m6g>/pHe^Cmm*:*NBd,#Jj+cMb!*@!g-)D;o)k'UJc^N*Jc^N*bl[ecdi[fq!$:MJko?lGJfB:\JfB:\
^`32@nO;A(mmHP1nj2_0rBGluVE`m#Jj+cMj$',!oKAZGo`B^HJc^N*Jc^N*k5tQ(di[fqllH!DmMqK2
JfB:\JfB:\g)KrZnjVD'n3c_4s$H9Bmm*^6Jj92uL-C2Q]0=;!brrK;k6%4UJc^N*Jc^N*^]OHWdi[fq
llG:0qAY#*JfB:\JfB:\oGd`un3u2%njDk4nj3"8q*9g%QTsh#Jj+cMe3:'!k<5=;Jc^N*Jc^N*JcaX-
r?0Q2koTF:qAn`=UDne(JfB:\JfDrRrC66EhaI$&rBg*Bnj2_0Ys3h)mQZt#Jj-8"f0-o4SHJ!UJc^N*
Jc^N*JcbQGrZKZ3koT13m2YpAMAq-dJfB:\JfEklr^Q9DiC*6(mm?Y4s$?*=Q9U0iq`]TqJj..;^-115
W<;eqNWOe6Jc^N*Jca0uruf`3koTjFmN(@.Z5\B7JfB:\JfDKEs$l<Ci^E?)mm?S2mm-b7Jj5qni]_rX
Jj/$TV*4H6SceNbJc^N*Jc^N*Jcb*:rufc4koT13q&JZ>R2^_sJfB:\JfED_s$l9Bj@&Q+mm7"?o0Mh1
U-F5opcj[#Jj-V,brs<7[KGarRKA'BJc^N*Jc`^h!$K]3koT13i>hk:JfB:\JfB:\JfF>$!(Q0@j[AZ,
mm?S2og&C>Ld.%enNMOgJj.LEZp!S8T*,&oJc^N*Jc^N*JcaX-!$K`4koT=7r>jc8W#L=-JfB:\JfDrR
!(Q-?k="l.qEjmBnj2_0Y!7M&ks(V#Jj-(rgc`G9T*+-UJc^N*Jc^N*JcbQGdi[cpllGC3oGio2JfB:\
JfB:\k8WMOksY&/mm?S2mm*+%K0K?"Jj+cM^coY!g-)D;p]HEUJc^N*Jc^N*blZ?9koTaCnK$C)[i9o<
JfB:\JfDKEj@/?%njDk4nj2_0pcj?pS3Q1#Jj+cMfflE!oKAiLn,e1CJc^N*Jc^N*k5s-TkT9(2pDi97
Sf<8#JfB:\JfED_j$i<&nO)b3r^$3Cmm*O1Jj8ikO?S7[Ys-T!brrK;liWRUJc^N*Jc^N*^]N"-koT13
g`6;5Kc>U_JfB:\JfF>$i^N6&njDk4nj2h3r]l0%NBd,#Jj+cMb!*@!k<5L@quVHOJc^N*Jc^N*g&feH
kT9.4ruK`3XW)j2JfB:\JfDrRiC33'nO*(<pd4O;mm*s=Jj8<\T0@ijU-@O!^ceCoi<"T4Jc^N*Jc^N*
oE*PbkoT13kT'%2PT,2nJfB:\JfEkli^N9'njDk4nj37?nj&=%Jj92uL-C2Q]0=;!g-)D;q?)QUJc^N*
Jc^N*blZH<koTX@o,Z@$]GlGAJfB:\JfDKEi^N<(njDh3nj2_0p-4-nQTsh#Jj+cMe3:'!oKArOm/hk@
Jc^N*Jc^N*k5s6WkT9(2oGld/UDne(JfB:\JfED_j$iB(njDk4qa(!Cmm*F.Jj8ZfPs0d`X?P6!brrK;
mK8^UJc^N*Jc^N*^]N+0koT.2g)To.MAq-dJfB:\JfF>$j@/K)njDh3nj2b1!'l0$Ld1c#Jj+cM`BM"!
k<5UCq#Z-LJc^N*Jc^N*g&fnKkT9(2!$'B+Z5\B7JfB:\JfDrRj@/N*nO)t9qa0j>mm*j:Jj8-WUcsAo
SNc1!^ceIqhZAB2Jc^N*Jc^N*oE*YekoT.2jrEY+R2^_sJfB:\JfEklj[JT*njDk4nNm(<oK\I%Jj9#p
M`u_V[Q_r!g-)D;r<%cUJc^N*Jc^N*blZQ?kT9I=p)VBt_&ItFJfB:\JfDKEj[JW+nO)b3nj2_0o07gk
P!AJ#Jj+cMcT\^!oKB&Rl2lP=Jc^N*Jc^N*k5s?ZkT9(2nJp:'W#L=-JfB:\JfED_k!e]+njDk4pd+aB
mm*@,Jj8KaRQc<eV`rm!brrK;nH4pUJc^N*Jc^N*^]N43kT9(2f,XE&NuNZiJfB:\JfF>$k=+f,njDh3
nj2_0s$)*"K0K?"Jj+cM^coY!k<5^Fp&]gIJc^N*Jc^N*g&g"NkT9(2r>a$$[i9o<JfB:\JfDrRk=+i-
nO)k6r^-0AmQd[7Jj7sRWBPntQp0h!^ceRtg]E'/Jc^N*Jc^N*oE*bhkoT.2iuI/#Sf<8#JfB:\JfEkl
kXFo-njDh3nj3(:pHX[%Jj8ikO?S7[Ys-T!g-)D;!!@iTJc^N*Jc^N*blZZBkT9@:q&REo`Z'LKJfB:\
JfDKEkXFr.nO)b3nj2\/nNVUiNBd,#Jj+cMb!*@!oKB,TkQ6>;Jc^N*Jc^N*k5sH]kT9%1mi9muXW)j2
JfB:\JfED_ksb#.njDh3p-JXCmm*7)Jj8<\T0@ijU-@O!brrK;oE1-UJc^N*Jc^N*^]N=6kT9(2e/[os
PT,2nJfB:\JfF>$l:(,/nO)b3nj2_0r',ctJj92uL-C2Q]0=;!k<5dHoE'UGJc^N*Jc^N*g&g+QkT9%1
q]*Wr]GlGAJfB:\JfDrRl:(/0nO)b3nNlV/Ud'GqeN^3#Jj,A^n3+QMWWUoUJc^N*Jc^N*JcbQGhB1u'
lQ+n'i#JL2JfB:\JfB:\k8W_UmR6V5mR$J1p-AI>M*HSVmQZt#Jj-8"f0.hNWWN5&Jc^N*Jc^N*Jca0u
h]M&'nK%NJ]c>37JfB:\JfB:\^`2W/mR6S4mm?P1mm-;*Jj5&Uq`]TqJj..;^-2*OWrqGbJc^N*Jc^N*
Jcb*:i#h/(lQ,=3d2]G2JfB:\JfB:\g)KBImR6V5mR$M2!($'=Ps9jbh`mo#Jj,_hjupsP[KH7+MunS4
Jc^N*Jc`^hi#h/(llFInl5Z32JfB:\JfB:\oGd0dmR6S4mm?S2mQgV5Jj4iOpcj[#Jj-V,brt5QX97to
Jc^N*Jc^N*JcaX-i?.8)lQ,a?_ApB2JfB:\JfB:\bo?(>mR6S4mR$q>oKhq2Tg+,ncp+j#Jj,2Yof^)R
XTR,UJc^N*Jc^N*JcbQGiZIA*lQ+e$gDm.2JfB:\JfB:\k8WhXmR6V5mR$J1o0E4=LHgATks(V#Jj-(r
gca@SXTSM'Jc^N*Jc^N*Jca0uiZIA*mN)9I[N*X5JfB:\JfB:\^`2`2mR6S4mm?P1mm-2'Jj4lP!'Yuu
Jj-t6_`dWTXomYbJc^N*Jc^N*Jcb*:iudJ+lQ,40bT+)2JfB:\JfB:\g)KKLmmQ\5mR$J1s$6'=P<XX`
g-;Q#Jj,PclTNKU[KH=-M?8A2Jc^N*Jc`^hiudJ+llF@kjW'j2JfB:\JfB:\oGd9gmR6S4mm?P1mm-V3
Jj4iOo08=#Jj-G'dQQbVY641oJc^N*Jc^N*JcaX-j<*S,lQ,X<]c>$2JfB:\JfB:\bo?1AmR6S4mR$h;
pHe75Sj.fkb<NL#Jj,#TqE;VWYQN>UJc^N*Jc^N*JcbQGjWE\-lQ+\!ef:e2JfB:\JfB:\k8Wq[mR6V5
mR$J1n3I"=KKk&Qj?K8#Jj,nmiB>mXYQO_'Jc^N*Jc^N*Jca0ujWE\-lQ*,JeJj)ZJfB:\JfDKEnjVt7
nO)b3nNlV/kWaY`Jj92uL-C2Q]0=;!oKBG]hZAB2Jc^N*Jc^N*k5scfkT9%1jrDD]]GlGAJfB:\JfED_
o0r(8nO)_2nj31=o0AC%Jj7dMY!.G$P<SJ!brrK;qu_]UJc^N*Jc^N*^]N[@k8rt1b8fF[UDne(JfB:\
JfF>$o0r(8njDh3nNlV/oKRplJj8ZfPs0d`X?P6!k<6*QlN2Y>Jc^N*Jc^N*g&gFZkT9%1nf5.Zb8Z$P
JfB:\JfDrRoL819nO)_2q*FjCmQd:,Jj77>]fq$3KKfE!^cf"+ciSe#Jc^N*Jc^N*oE+4ukT9%1f,W0X
Z5\B7JfB:\JfEklogS::nO)_2nNlV/!'c'"Jj8-WUcsAoSNc1!g-)bEpB#pJJc^N*Jc^N*bl[,Ok8rq0
rZ%mWg)GV_JfB:\JfDKEogS::nO)b3nNlV/jZe>]Jj9#pM`u_V[Q_r!oKBP`g]E'/Jc^N*Jc^N*k5sli
kT9%1iuGoU_&ItFJfB:\JfED_p-nC;nO)_2nj3(:p-=U%Jj7UHZT`t)N^!,!brrK;rr[oUJc^N*Jc^N*
^]NdCkT9%1a;iqSW#L=-JfB:\JfF>$pI4L<nO)_2nNlV/nNVUiJj8KaRQc<eV`rm!k<63TkQ6>;Jc^N*
Jc^N*g&gR^k8rq0mi8YRcl7QUJfB:\JfDrRpdOR<nO)_2p-JXCmQd1)Jj7(9_ENQ8Jj0/t_`bF1blWIu
Jc^N*Jc^N*oE+>#kT9%1e/Z[P[i9o<JfB:\JfEklpdOU=nO)_2nNlV/rBGluJj7sRWBPntQp0h!g-)kH
oE'UGJc^N*Jc^N*bl[5Rk8rq0q])COh]%.dJfB:\JfDKEq*j^>nO)_2nNlS.j$/,[Jj8ikO?S7[Ys-T!
oKBYcf`Ha,Jc^N*Jc^N*k5t#mk8rq0i#KEM`Z'LKJfB:\JfED_qF0d>nO)_2nj2t7q*9g%Jj7FC\3>L.
M*Cc!brrN<!!7`RJc^N*Jc^N*^]NmFkT9%1`>mGKXW)j2JfB:\JfF>$qF0g?nO)_2nNlV/mQZ:fJj8<\
T0@ijU-@O!k<6<WjT:#8Jc^N*Jc^N*g&g[ak8rq0ll</JeJj)ZJfB:\JfDrRqaKp@nO)_2nj*7AmQd(&
Jj6n4a$,)=Jj/uoa?@'9ao[.rJc^N*Jc^N*oE+J'k8rq0d2^1H]GlGAJfB:\JfEklr'g!@nO)_2nj2\/
qEKQrJj7dMY!.G$P<SJ!g-)tKnH+:DJc^N*Jc^N*bl[>UkT9%1pDfeFj;W[iJfB:\JfDKEr'g$AnO)_2
nNlS.i'2fXJj8ZfPs0d`X?P6!oKBbfecLF)Jc^N*Jc^N*k5t,pk8rq0h&NpEb8Z$PJfB:\JfED_rC--B
nO)_2nNlb3r'6$%Jj77>]fq$3KKfE!brrZ@quVHOJc^N*Jc^N*^]O$Jk8rq0_AprCZ5\B7JfB:\JfF>$
r^H3BnO)_2nNlV/lT]tcJj8-WUcsAoSNc1!k<6EZiW=]5Jc^N*Jc^N*g&gddkT9"0ko?ZBg)GV_JfB:\
JfDrRs$c<CnO)_2nNm1?n3E1%Jj6_/bW^VBJj/fjbrr]A`r^hoJc^N*Jc^N*oE+S*k8rq0c5a\@_&ItF
JfB:\JfEkls$c?DnO)\1nj2\/pHO6oJj7UHZT`t)N^!,!g-*(NmK.tAJc^N*Jc^N*bl[JYk8rq0oGj;>
ko53nJfB:\JfDKE!(H9CnO)_2nNlS.h*6KUJj8KaRQc<eV`rm!oKBkidfP+&Jc^N*Jc^N*k5t8tk8rn/
g)RF=cl7QUJfB:\JfED_m6pJ3mR$G0n3I"=KKk&Q_*>e#Jj+cMr]\[l^'"04Jc^N*Jc^N*Jc`^hoH36;
lQ*_[bT+)2JfB:\JfB:\oGd3dnO)\1nj2\/kWaY`Jj7sRWBPntQp0h!k<6N]hZAB2Jc^N*Jc^N*g&gph
k8rq0jW('9h]%.dJfB:\JfDrRmR6S4mR$G0r'9j=O?\=]Z9Q`#Jj+cMmlo/_^B;CUJc^N*Jc^N*JcbQG
p)iH=l5e%f]c>$2JfB:\JfB:\k8WkXnO)_2nNlS.oKRplJj7FC\3>L.M*Cc!g-*4Rl2lP=Jc^N*Jc^N*
bl[S\k8rq0nJmf6mMg`sJfB:\JfDKEn3le6m6^>/mm,PjJj4iOj?K8#Jj,nmiB?fr^]VpbJc^N*Jc^N*
Jcb*:pE/Q>lQ+OrXrPt2JfB:\JfB:\g)KQMn3cV1nNlS.!'c'"Jj6n4a$,)=Jj/uoeNL_Np&]gIJc^N*
Jc^N*^]O9Qk8rn/]H"s3]GlGAJfB:\JfF>$nO2n7mR$G0mQfkuJj4iOeN^3#Jj,A^n3,qt_?8NoJc^N*
Jc^N*JcaX-q&e`?lQ+t)T,co2JfB:\JfB:\bo?4AnO)\1nNlt9og"O%Jj6A%ein[LJj/H`f0-tQ_#f2i
Jc^N*Jc^N*oE+h1k8rq0`uMT/b8Z$PJfB:\JfEklo0i(8mR$G0lTk),Jj4iO`]q.#Jj+iOs#o(!_ZT''
Jc^N*Jc^N*Jca0uqB+lAl5f:4O<!j2JfB:\JfB:\^`2l5nO)_2nNlD)gHU9SJj8-WUcsAoSNc1!oKC+p
bQ<@tJc^N*Jc^N*k5tN&k8rn/di>>,g)GV_JfB:\JfED_oL/4:m6^>/l9PA7KKk&Q[m/)#Jj+cMoKLtl
_uoT4Jc^N*Jc^N*Jc`^hr#b&BlQ*JT_ApB2JfB:\JfB:\oGdHknO)\1nNl;&l9BkbJj7UHZT`t)N^!,!
k<6cdfE-X+Jc^N*Jc^N*g&h0ok8rn/h]/()ko53nJfB:\JfDrRp-eC;mR$G0og&"3P<XX`W'B$#Jj+cM
jZ_H_`WNmUJc^N*Jc^N*JcbQGr?(2Dl5de_ZQ.=2JfB:\JfB:\k8X+_nO)\1nNl2#q*0HqJj7(9_ENQ8
Jj0/th*&a[j8so7Jc^N*Jc^N*bl[kdjrWh/l5Y^%p`"f(JfB:\JfDKEpI+O=m6^>/iBZ<cJj4iOg-;Q#
Jj,PclTOl'`rjEbJc^N*Jc^N*Jcb*:ru^AEl5e4kU`A82JfB:\JfB:\g)KfTn3cV1nNl;&qETm%Jj6P*
d6<.GJj/Weh`]$_mfJ(BJc^N*Jc^N*^]ONXk8rn/[2ck"`Z'LKJfB:\JfF>$q*a^>mR$D/hE^NoJj4iO
b<NL#Jj,#TqE=")a90roJc^N*Jc^N*JcaX-!$CAFl5eV!PoT32JfB:\JfB:\bo?IHnO)\1nNl_2lTgh%
Jj6"pi')`VJj/*ViB>9b\cRHbJc^N*Jc^N*oE+.rl5d\\XrPt2JfB:\JfB:\k8X7cnO)\1nNkkor]c!!
Jj6n4a$,)=Jj/uoi]YEdhu\K3Jc^N*Jc^N*bl[&Ll5f%-L)g.2JfB:\JfB:\^`3/=n3cV1n3P_mjZe>]
Jj7dMY!.G$P<SJ!oKC>!`WC_nJc^N*Jc^N*k5sigl5e(gT,co2JfB:\JfB:\g)KrXn3cS0nNl2#og"O%
Jj6A%ein[LJj/H`j?:ZgliMb?Jc^N*Jc^N*^]N^@lQ*5M\/`[2JfB:\JfB:\oGd]rnO)\1nNk\joKRpl
Jj77>]fq$3KKfE!k<7#kd/nn$Jc^N*Jc^N*g&gL[l5eLsO<!j2JfB:\JfB:\bo?ULnO)\1n3QM.k!5J%
Jj5hkjZ\8[Jj.pQjupoj[fV-_Jc^N*Jc^N*oE+;!l5dPXW>sV2JfB:\JfB:\k8XCgn3cS0nNkYis$26%
Jj6_/bW^VBJj/fjk<7&lh#`00Jc^N*Jc^N*bl[2Pl5en)JfFb1K,]C]JfB:\^`3;An3cS0nNkMel9Bkb
Jj7UHZT`t)N^!,!oKCJ%_?,;jJc^N*Jc^N*k5srjl5dtdRN1Q2JfB:\JfB:\g)C#[n3cS0nNl%tn3E1%
Jj61ugHL3QJj/9[krm>pkQ6>;Jc^N*Jc^N*^]NjDl5d#IZQ.=2JfB:\JfB:\oG[cun3cV1n3P;aq*0Hq
Jj7(9_ENQ8Jj0/tl93Gqc2rS!Jc^N*Jc^N*g&gX_l5e@oM]DL2JfB:\JfB:\bo?.>m6^>/lTjDoU-F5o
R6Tt#Jj+cMeirC_ci^TUJc^N*Jc^N*JcbQGmN1U5\f@Lch]%.dJfB:\JfEklnO)\1nNkMeqETm%Jj6P*
d6<.GJj/Weloi_uf`Ha,Jc^N*Jc^N*bl[;Sl5ee&JfOY-L`:pbJfB:\^`2i3m6^;.a?]2YJj4iOb<NL#
Jj,#TqE=I6d0%,bJc^N*Jc^N*Jcb*:miLa7`>k-_mMg`sJfB:\JfED_o0_n3n3PhplTgh%Jj6"pi')`V
Jj/*VmQJu#jT:#8Jc^N*Jc^N*^]O!Hl5clEXrPt2JfB:\JfB:\oGdBhm6^>/`'F;dJj4iO]KaG#Jj+cM
q*+71df[_oJc^N*Jc^N*JcaX-nK-p8d2[l\r>U>-JfB:\JfDrRoL&"4nNl>'gd%c%Jj5Jamll=eJj.RG
n3,8'Y6':WJc^N*Jc^N*oE+P(l5d;QT,co2JfB:\JfB:\k8X(]m6^;.bs:qeN^&+[XZtB#Jj+cMl9=`$
e-"8'Jc^N*Jc^N*Jca0unfI':g`1ncp)K&2JfB:\JfDKEp-\46mm4`SoKRplJj77>]fq$3KKfE!oKC_,
])mQcJc^N*Jc^N*k5t5rl5d\\O<!j2JfB:\JfB:\g)K`Qm6^5,gHamdSNh]jSj2=#Jj+cMgHP3lecXk4
Jc^N*Jc^N*Jc`^hoH*6;V];ZUg)GV_JfB:\JfF>$pI"=7lp8KRs$26%Jj6_/bW^VBJj/fjoKCb-`r^ho
Jc^N*Jc^N*g&gpgkoJ"gJfFb1K,]C]JfB:\bo?FFm6^)(l9NrdX?V;$O$E8#Jj+cMbWb\_f)r)UJc^N*
Jc^N*JcbQGocEB=Z5f;Qko53nJfB:\JfEklq*XO9kX!T]n3E1%Jj61ugHL3QJj/9[p-%%1dK5"%Jc^N*
Jc^N*bl[S[l5eLsJfO;#OrJulJfB:\^`3,;lpBl$^d.][Jj4iO_*>e#Jj+cMr]^'>J,~>

%%EndBinary
grestore
np
357.64 211.726 mo
357.64 211.726 li
375.927 230.013 405.577 230.013 423.864 211.726 cv
668.212 -32.6217 li
601.988 -98.8463 li
357.64 145.501 li
339.352 163.789 339.352 193.438 357.64 211.726 cv
cp
level3{
gsave
clp
[186.301 165.236 -165.236 186.301 192.309 77.6754 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[186.301 165.236 -165.236 186.301 192.309 77.6754 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
342.983 112.672 mo
342.983 112.672 li
348.987 118.677 358.723 118.676 364.727 112.672 cv
511.729 -34.3299 li
489.985 -56.0744 li
342.983 90.9274 li
336.978 96.9319 336.978 106.667 342.983 112.672 cv
cp
level3{
gsave
clp
[186.301 165.236 -165.236 186.301 208.643 65.5327 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[186.301 165.236 -165.236 186.301 208.643 65.5327 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
248.655 242.093 mo
248.655 242.093 li
237.642 231.079 219.785 231.079 208.771 242.093 cv
61.6123 389.252 li
101.496 429.136 li
248.655 281.977 li
259.669 270.963 259.669 253.107 248.655 242.093 cv
cp
level3{
gsave
clp
[136.752 136.752 -136.752 136.752 184.9 163.366 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[136.752 136.752 -136.752 136.752 184.9 163.366 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
611.775 310.818 mo
569.062 310.818 528.905 294.185 498.702 263.982 cv
468.5 233.781 451.865 193.624 451.864 150.909 cv
451.864 108.195 468.498 68.0388 498.701 37.8354 cv
757.803 -221.266 li
983.949 4.87999 li
724.848 263.982 li
694.645 294.185 654.488 310.818 611.775 310.818 cv
cp
level3{
gsave
clp
[-304.28 304.28 -304.28 -304.28 860.59 -97.9069 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0666667 .278431 .486275 ]
/C1 [.0117647 .145098 .305882 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-304.28 304.28 -304.28 -304.28 860.59 -97.9069 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~&J,Kb&.fBa&.fBa&.fBa&.fB`%hB0]%hB0]%hB0]%hB0]%h9'Z%LrsY%LrsY%LrsY%LrsX%1NaU%1NaU
%1NaU%1NaU%1N^S$k*OQ$k*OQ$k*OQ$k*OQ$O[=M$O[=M$O[=M$O[=M$O[:K$47+I$47+I$47+I$47+I
$4."F#mgnE#mgnE#mgnE#mgnD#RC\A#RC\A#RC\A#RC\A#R:S>#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89
"pP89"pP89"pP57"U,&5"U,&5"U,&5"U,&5"9\i1"9\i1"9\i1"9\i1"9\f/!s8W-!s8W-!s8W-!s8W-
~>
<~7n,s;7Rfj:77BX677BX66psF26psF16UO4.6UO4-6:+"*6:*t(5s[e&5s[b$5X7S"5X.It5<h@s5<_7p
5!D.o4Ztqk4Ztqk4?P_g4?P_f4$,Mc4$,Mb3]];_3]]8]3B9)[3B9&Y3&ilW3&`cT2`EZS2`<QP2E!HO
2Dm?L2)R6K1c.$G1c.$G1G^gC1G^gB1,:U?1,:U>0ekC;0ek@90JG170JG.50/"t30.nk0/hSb//hJY,
/M/P+/1`>'/1`>'.k<,#.k<,".Olnt.Olns.4H\p.4HYn-n$Jl-n$Gj-RU8h-RL/e-71&d-7'ra,pai`
~>
<~I!^3eH[C'bH?sm`H$O[\H$FRYG^+IWGB\7TG'8%PG'8"NF`hhKFEDVHFE;MEF)uDCEcQ2@EH,u<EH,r:
E,]c7Df9Q4Df0H1DJj<.D/F-,Ci!p(Ci!m&CMR^#C2.KuC2%BrBk_6oBP;'mB4kjiB4bafAnGXdAS#Fa
ARo=^A7T1[@q0"Y@U`eU@UW\R@:<SP?smAM?XI/I?XI,G?=$rD?!U`A?!LW>>[1N<>?b<9>$>*5>$>'3
=]nm0=BJ[-=BAR*='&F'<`W7%<E3%!<E3!t<)cgq;c?Un;c6Lk;Gp@h;,L1f:f'tb:esk_:JXb]:/4PZ
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
611.775 281.124 mo
576.993 281.124 544.293 267.579 519.699 242.985 cv
495.105 218.391 481.56 185.692 481.559 150.908 cv
481.559 116.127 495.104 83.4273 519.698 58.8322 cv
757.803 -179.272 li
941.955 4.87999 li
703.85 242.985 li
679.256 267.579 646.556 281.124 611.775 281.124 cv
cp
level3{
gsave
clp
[2.7719e-11 269.462 -269.462 2.7719e-11 711.757 8.33437 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.756863 .776471 .796078 ]
/C1 [.878431 .878431 .878431 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.878431 .878431 .878431 ]
/C1 [.607843 .65098 .698039 ]
/N 1 
>>
]
/Bounds [.302063 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.7719e-11 269.462 -269.462 2.7719e-11 711.757 8.33437 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~_83t)_Sa:/`5KX6`Q#p<a2c9BaiVZIb0.uObfn>Vc-FV\cd0tbdF$@idaQ[oeC<%!e^i='f@S[-g"G'4
g=tB:gt^`Ah;7#Ghr!>KhVR,Fh;-lAgY:K:g=b04f\"j.f@JO(e^`1!eC2mpdaHOjdEp7dcd0n^c-=MW
bfn8Rb0%lKaiMQEa2c6?`l5p9`5KR2_ns:-_83q&^q[Xu^:q:o]Y(nh]=YYc\[f8\\@8rV[^NWP[C!<J
Za6sCZE^[>Yct=7YHG%1Xf\\+X/i;$WiE%tW2QYmVl$>gV5:#aUna][U8"?TTqJ'OT:_^HSt2FBS=H(<
~>
<~`l?$=a2c9BaN;QGb0%lMbKJ,Rbg"DWcHa_]cd0tbd*^7gdaHRme'lgreCE+"f%/F(f@S[-f\+s2g=k98
gY:N=gtgfBhVR,Hhr!>Khqm5Hh;-oBgt^Z=gY1B8g"G'2f\"g-f@SU)f%&=$eC<!se'landa?Iid*U.c
cd0n^cHXVYbfn;SbKJ)Ob0%iJaiMQEa2c6?`l?!:`Pf^5_o'C/_SX.*_8*k%^V@Ot^:q=p]tM(k]Xtef
]"5J`\[f5[\@8rV[^NWP[C*BK['R*FZEgdAZ*CR<Yct=7YHG%2Xf\_,XK8J'X/`2"WMukqW2QVlVl$>g
~>
<~bKJ)Pbfn;Tc-=MXcHa_]cd0qad*U.edF$CjdaHUne'lgreCE+"e^i=&f%8O*f\"j/g"G'3g=k98gY:K<
gt^]@h;-rEhVR/Ihr!>Khr!;IhVR)Eh;$f@gtUT<gY1B8g=b04g"=s0f[na,f@JO(f%&=$e^W*ue'ldp
daHRldF$@hd*U.dcd0q`cHa_\c-=MXbfn;TbKJ)Ob0%lKaiVZGaN2HCa2c6?`l?$;`Pog7`5KU3_o'@.
_SX.*_83q&^qd_"^V@Ls^:q:o]tM(k]Y(kg]=YYc]",A^\[]/Z\@8rV\$i`R[^ENN[C!<J['R*FZa-mB
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
611.775 303.89 mo
611.775 302.89 li
571.172 302.888 533.019 287.084 504.309 258.374 cv
475.6 229.666 459.796 191.512 459.793 150.908 cv
459.795 110.306 475.598 72.1531 504.308 43.4408 cv
757.803 -210.053 li
972.736 4.87997 li
719.241 258.375 li
690.53 287.084 652.378 302.888 611.775 302.89 cv
611.775 303.89 li
611.775 304.89 li
652.898 304.891 691.579 288.869 720.655 259.789 cv
975.564 4.87996 li
757.803 -212.882 li
502.893 42.0266 li
473.813 71.1045 457.791 109.786 457.793 150.908 cv
457.792 192.033 473.815 230.714 502.894 259.788 cv
531.97 288.869 570.651 304.891 611.775 304.89 cv
611.775 303.89 li
cp
level3{
gsave
clp
[-198.042 -343.019 343.019 -198.042 790.131 225.812 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .74902 .0431373 ]
/C1 [.996078 .431373 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.996078 .431373 0 ]
/C1 [.0117647 .145098 .305882 ]
/N 1 
>>
]
/Bounds [.35892 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-198.042 -343.019 343.019 -198.042 790.131 225.812 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8N#srr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
rr2orrr2orrr2orrr2orrr2orrr2orrr2orrVZNfp\+7NnaPu5lfmWqjl>@Yhqd)Ag"4g)da?Cdbfe,L
`l5j4^q[Rq]"#5W['Hs?Y,n\'W2?DdU7e*KS!o_2Q'@GoO,f0WM26n>K7SQ%I=$9bGBJ"JEGo`2C2%<m
A7K%U?<pc==BAL%;G^.`9M.lH7RTU05X%=m3]K#T1GUX;/M&A#-RL)`+WqgG)]9J.'b_2k%h/pS#mUY;
~>
<~^V7Co]=PP_\$rfR['R'CYct=6XfSS'WMlbnVPU)`U7n9RT:VUDS!ob5R$X,(P`q8nOcYWaNJrdQMM[.E
L4t;5K7\Z)IsufnI!^0bG^"=RFEDSEEH#i6D/F-+Chmg$C2%BrBP;$kAnGUcARo=]@q&nU@:<PO?XI,G
?!U`@>[(E9>$5!2=BJX+<`W4#<E)pr;c6Lj;,L.d:JX_\9he>U9M8#N8kDTG84Z6@7Rfg8779O26UF+*
5s[b$5<h=q4Ztqj4?GVc3]T2\3&iiU2E!EM2)I-G1GU^?0ek@90/"q1/M/P*/1W5#.Oceq-n$Gj-71#b
~>
<~$OR4J$47+I$4."F#mgnE#m^eB#RC\A#RCY?#6tJ=#6tG;"pP89"pP57"U,&5"U,&4"9\i1"9\i0!s8W-
!s8W,!WiE)!WiE)!<E3%!<E3%zz!!!$#!<N<)!sA`1"U5/9#7(SA#mq"H$O[@O%1NdW%hB3_&J5Wg',)
&o'GV>u()Ic((`=20)B0V8*$$%?*ZcCF+<VgN+sJ6V,U=Z^-71)f-R^Al.4Qet.kE5'/M8Y/0/,(70ek
F=1G^jE2)R9M2`E]U3B9,]3]fDc4?Yhk5!M7s5X@\&6:4+.6psI47Rfm<84Z<D8kM`L9MA/T~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
611.775 296.961 mo
611.775 295.961 li
573.023 295.959 536.61 280.876 509.208 253.475 cv
481.808 226.075 466.724 189.661 466.722 150.908 cv
466.723 112.156 481.806 75.7441 509.207 48.3406 cv
757.803 -200.255 li
962.937 4.88001 li
714.341 253.475 li
686.939 280.876 650.527 295.959 611.775 295.961 cv
611.775 296.961 li
611.775 297.961 li
651.047 297.963 687.988 282.661 715.756 254.889 cv
965.765 4.88001 li
757.803 -203.083 li
507.793 46.9264 li
480.022 74.6955 464.72 111.636 464.722 150.908 cv
464.721 190.182 480.023 227.123 507.794 254.889 cv
535.561 282.661 572.502 297.963 611.775 297.961 cv
611.775 296.961 li
cp
level3{
gsave
clp
[-190.333 -329.667 329.667 -190.333 785.992 220.198 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.560784 .607843 .658824 ]
/C1 [.878431 .878431 .878431 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.878431 .878431 .878431 ]
/C1 [.0666667 .278431 .486275 ]
/N 1 
>>
]
/Bounds [.302063 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-190.333 -329.667 329.667 -190.333 785.992 220.198 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~O-#KePE_>uQ^F20S"-%@T:hmPUSOcbW2ZetXKAY/Yd(L?['d?O\@K2`]tV7s_8=+.`Q#s>ai_fNc-FY^
daQ^rf%8R-g=tE=hV[5IgtUQ9f[n['e'cXjccs\Wb/q`E`Pf[2_8!^t]Xtbb\$i]OZa-g=Y-"e+WMl_l
V50iZTV%gHS=5k5Q^3o#P*(ieNf8mRM26qAKS+l-J:DupH[9s^G'.nJEcH&9D/=!&BkM$hA7K(V?X@#C
>?P'0<`N*t;,C%`9h\/N84Q-<6UF((5<_4l3]T/Y2Dd3F0eb74/1W2!-mp;d,9e9R*ZZ4>)As>,'bh;o
~>
<~S"#q=StD[LU8+KZV5C/hWN*#"XKAY/Yd(L?Za@-K\%&u[]=bei^;%J"_Sa=1`Q#s>ai_fNbg"GZd*^:j
eC<%"f@\d1gYCW@hV[5Ih;$c>g=b-1f%/C$e'cXjd*L"^bfe/OaiMNB`Pf^4_SO%&^:q:n]=PP_\@8oS
['R'DZ*:F7XfSV)Wi;qpVP^2cUS=HTTV%gHS=>t9R@'>,Q'@MsP*(ieNfK*XMi*@ILkg_=KS+l.JUi6!
I=-EhH?jaZG'8"MF)l8>E,TW2Chmd#BkV-kARo=]@UWYO?=$oB>?Y03=BAO'<)Z[m;,C%`9h\5R8kDQD
~>
<~W2Q\qWiN5'Xfek2Yd(L>Za@-J[^W`U\[oAa]Y2"m^V@S#_SX4/`5Ta:a2lBFb0/#Qc-FY]d*^:ie'umt
f%8O+g"G*6gt^`Bhr!>KhVI#CgtUT;g=b-2f@SU)e^W*te'c[ldEp4ccHa\Zbfn8Qb/qcHaN)<?`Pod6
_o'@-_8*k$^V7Fq]Y(kg]"5G_\@8rU[^ENMZa6sCZ*CO;YHG%1XfSV)X/`.uW2QVlVPU,bUna]ZU7n6Q
T:_^HSXl:?S!oe6R@'>-QBmf$Pa%ApP*(lgOH5H_NK&mUMi3ILM26tCLPCP;KS4u1JqAQ)J:E&tIXQWl
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
611.775 290.032 mo
611.775 289.032 li
574.874 289.03 540.201 274.669 514.107 248.576 cv
488.016 222.484 473.653 187.81 473.65 150.908 cv
473.652 114.008 488.014 79.3351 514.106 53.2404 cv
757.803 -190.456 li
953.138 4.87999 li
709.442 248.576 li
683.348 274.669 648.675 289.03 611.775 289.032 cv
611.775 290.032 li
611.775 291.032 li
649.196 291.034 684.397 276.453 710.856 249.991 cv
955.967 4.87996 li
757.802 -193.284 li
512.692 51.8262 li
486.229 78.2865 471.649 113.487 471.65 150.908 cv
471.65 188.331 486.231 223.532 512.693 249.991 cv
539.152 276.453 574.354 291.034 611.775 291.032 cv
611.775 290.032 li
cp
level3{
gsave
clp
[-182.625 -316.315 316.315 -182.625 781.853 214.583 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0666667 .278431 .486275 ]
/C1 [.188235 .34902 .741177 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.188235 .34902 .741177 ]
/C1 [.0117647 .145098 .305882 ]
/N 1 
>>
]
/Bounds [.303096 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-182.625 -316.315 316.315 -182.625 781.853 214.583 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~&J5Tf&eYik'GM5r'c%Q#(Ddo*(`=20)B'P6*#oq=*?H7C+!2UJ+<_mP+sJ6V,U=W],pjrc-RU;j-n-Sp
.Olr!/1`>(/M8Y.0/"t30/"q1/hS_-/M/M)/1`;%.k<)!.Olkr.4HYn-n$Gj-RU5f-71#b,paf^,U=TZ
,9nBV+sJ0R+X%sN+<VaJ+!)IE*ZZ7A*?6%=*#fh9)]BV5)AsD1)&O2-(`*u)(D[c%()7Q!'bh>r'GD,n
'+toj&eP]f&J,Kb&.]9^%h9'Z%LijV%1EXR$k!FN$OR4J$4."F#m^eB#R:S>#6kA:"pG/6"U"r2"9S`.
~>
<~7n6'>7n?0A84cBE8P2TI8kM`L91qrP9MA/T9he>W:/4P[:JXb_:f'tb;,L1f;GpCj;c?Un;cH^q<)lpu
<E<.$<``@(='&L+=BJ[-=BJX+=&r@&<E3%!<)cgq;c?Um;Gp@h;,L.d:esk_:/4PZ9he>U9MA,Q91qlL
8kMZH8OuBC7n6'>7Rfj977BX56psC06UO1,6:!n'5X7S"5<h@r5!D.n4Ztni4?P\e4$#D`3B9)[3&ilV
2`EZR2E!EM2)R3I1c$pD1,:U?0ekC:0JG160/"q1/hS_-/M&G(.k<,#.Olns.4H\o-n$Gj-RU5f-7'ra
~>
<~I!g?kIt3*$JqJ`1L5(J>M2I4LN/`jYOH>TfPE_>tQC!u,R[T_9SXuIHTV8*TUnsobVl6SpWiN5'Y-5%5
Z*L^C['d?O\@K/]]=beh]=PSa\[],X[^ENM['R'DZ*:I9YHG"0XK/D%Wi;qqVl$>fV50l]U7n9RTV%gI
SXl:?S!ob5R$a5+QBd]!PEV/lOcYWbNfK*XN/NRNM2@%DLPCM:KS4u0Jq8K'It)oqI=-EhH?sj]G^"@T
F`heIF)l;@E,]`5DJa6,CMR[!BkV0mAnGUcA7K+Y@:<PO?X@&E>[1K;>$5!1='&F'<E)pr;Gp@h:esk^
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
820 312 mo
820 202.268 li
710.268 312 li
820 312 li
cp
level3{
gsave
clp
[136.27 121.129 -121.129 136.27 775.403 147.567 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[136.27 121.129 -121.129 136.27 775.403 147.567 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
237.877 261.298 mo
237.877 266.773 233.439 271.211 227.964 271.211 cv
222.49 271.211 218.052 266.773 218.052 261.298 cv
218.052 255.824 222.49 251.386 227.964 251.386 cv
233.439 251.386 237.877 255.824 237.877 261.298 cv
cp
level3{
gsave
clp
[-33.2227 -33.2227 33.2227 -33.2227 250.727 284.061 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-33.2227 -33.2227 33.2227 -33.2227 250.727 284.061 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
227.777 70.0156 mo
227.777 75.49 223.339 79.928 217.865 79.928 cv
212.39 79.928 207.953 75.49 207.953 70.0156 cv
207.953 64.5412 212.39 60.1033 217.865 60.1033 cv
223.339 60.1033 227.777 64.5412 227.777 70.0156 cv
cp
level3{
gsave
clp
[-33.2227 -33.2227 33.2227 -33.2227 233.723 85.8739 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-33.2227 -33.2227 33.2227 -33.2227 233.723 85.8739 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
116.763 300.962 mo
116.763 304.891 113.578 308.076 109.649 308.076 cv
105.72 308.076 102.535 304.891 102.535 300.962 cv
102.535 297.033 105.72 293.848 109.649 293.848 cv
113.578 293.848 116.763 297.033 116.763 300.962 cv
cp
level3{
gsave
clp
[-23.8431 -23.8431 23.8431 -23.8431 125.985 317.298 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-23.8431 -23.8431 23.8431 -23.8431 125.985 317.298 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
366.347 101.628 mo
366.347 108.524 360.757 114.114 353.861 114.114 cv
346.966 114.114 341.375 108.524 341.375 101.628 cv
341.375 94.732 346.966 89.1418 353.861 89.1418 cv
360.757 89.1418 366.347 94.732 366.347 101.628 cv
cp
level3{
gsave
clp
[-41.8487 -41.8487 41.8487 -41.8487 382.534 130.3 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-41.8487 -41.8487 41.8487 -41.8487 382.534 130.3 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
442.711 251.116 mo
442.711 258.012 437.121 263.602 430.225 263.602 cv
423.329 263.602 417.739 258.012 417.739 251.116 cv
417.739 244.221 423.329 238.63 430.225 238.63 cv
437.121 238.63 442.711 244.221 442.711 251.116 cv
cp
level3{
gsave
clp
[-41.8487 -41.8487 41.8487 -41.8487 458.897 279.789 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-41.8487 -41.8487 41.8487 -41.8487 458.897 279.789 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
49.8771 210.47 mo
49.8771 223.176 39.5763 233.477 26.8697 233.477 cv
14.1631 233.477 3.86233 223.176 3.86233 210.47 cv
3.86233 197.763 14.1631 187.462 26.8697 187.462 cv
39.5763 187.462 49.8771 197.763 49.8771 210.47 cv
cp
level3{
gsave
clp
[-77.1127 -77.1127 77.1127 -77.1127 79.7026 263.303 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-77.1127 -77.1127 77.1127 -77.1127 79.7026 263.303 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
798.158 299.633 mo
798.158 312.34 787.857 322.641 775.15 322.641 cv
762.444 322.641 752.143 312.34 752.143 299.633 cv
752.143 286.927 762.444 276.626 775.15 276.626 cv
787.857 276.626 798.158 286.927 798.158 299.633 cv
cp
level3{
gsave
clp
[-29.5645 -29.5645 29.5645 -29.5645 797.441 321.924 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-29.5645 -29.5645 29.5645 -29.5645 797.441 321.924 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
196.94 15.1329 mo
196.94 27.8395 186.64 38.1403 173.933 38.1403 cv
161.226 38.1403 150.926 27.8395 150.926 15.1329 cv
150.926 2.42629 161.226 -7.87447 173.933 -7.87447 cv
186.64 -7.87447 196.94 2.42629 196.94 15.1329 cv
cp
level3{
gsave
clp
[-77.1127 -77.1127 77.1127 -77.1127 215.654 56.8537 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-77.1127 -77.1127 77.1127 -77.1127 215.654 56.8537 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
grestore
gsave
820 312 mo
0 312 li
0 0 li
820 0 li
820 312 li
clp
523.898 238.785 mo
523.898 238.785 li
475.365 190.252 475.365 111.565 523.898 63.0317 cv
757.803 -170.873 li
933.556 4.88007 li
699.651 238.785 li
651.118 287.318 572.431 287.318 523.898 238.785 cv
cp
gsave
grestore
/-988910224.0 
<<
/ID /-988910224.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 12.2479 12.2479 ] 
/XStep 12.2479 
/YStep 12.2479 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
{12.2479 0 mo
0 0 li
0 12.2479 li
12.2479 12.2479 li
12.2479 0 li
cp
}exec
false sop
.901961 .905882 .909804 rgb
f
{6.12394 6.12394 mo
0 6.12394 li
0 12.2479 li
6.12394 12.2479 li
6.12394 6.12394 li
cp
}exec
.819608 .827451 .831373 rgb
f
{12.2479 0 mo
6.12394 0 li
6.12394 6.12394 li
12.2479 6.12394 li
12.2479 0 li
cp
}exec
f
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/-988910224.0 /Pattern get_res
[.989816 0 0 -.989816 769.347 -2424.43 ]make_pattern set_pattern
f
2 vmreclaim
grestore
129.215 271.778 mo
52.2906 271.778 li
48.805 271.778 45.9793 268.952 45.9793 265.467 cv
45.9793 255.799 li
45.9793 252.314 48.805 249.488 52.2906 249.488 cv
129.215 249.488 li
132.701 249.488 135.527 252.314 135.527 255.799 cv
135.527 265.467 li
135.527 268.952 132.701 271.778 129.215 271.778 cv
cp
level3{
gsave
clp
[89.5476 0 0 89.5476 45.9793 260.633 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [.847059 .847059 .847059 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[89.5476 0 0 89.5476 45.9793 260.633 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8N#srr2oqrVc]nrVcZlr;?Kjqtp9fqtp9eqYL'bqYBs_q>'j^q"XXZq"XUXp\4FVp\+=Sp@e4Rp%A"N
p%@tLo^qeJo^h\GoCMSEo()ABo()>@naZ/>nF5r:nF5r9n*f`6n*f]4mdBN2mHs<.mHs<-m-O**m-F!'
lg*m&lK[["lK[Wul07Hsl0.?pkih6nkND$kkND!ik2tggk2k^djlPUbjQ,C_jQ,@]j5]1[io8tWio8tV
iSibSiS`YPi8EPOhr!>Khr!>JhVR,GhVI#Dh;-oCgt^]?gt^Z=gY:K;gY1B8g=k96g"G'3g"G$1f\"j/
~>
<~s8N#srr2oqrVc]nrVcZlr;?Kjqtp9fqtp9eqYL'bqYBs_q>'j^q"XXZq"XUXp\4FVp\+=Sp@e4Rp%A"N
p%@tLo^qeJo^h\GoCMSEo()ABo()>@naZ/>nF5r:nF5r9n*f`6n*f]4mdBN2mHs<.mHs<-m-O**m-F!'
lg*m&lK[["lK[Wul07Hsl0.?pkih6nkND$kkND!ik2tggk2k^djlPUbjQ,C_jQ,@]j5]1[io8tWio8tV
iSibSiS`YPi8EPOhr!>Khr!>JhVR,GhVI#Dh;-oCgt^]?gt^Z=gY:K;gY1B8g=k96g"G'3g"G$1f\"j/
~>
<~s8N#srr2oqrVc]nrVcZlr;?Kjqtp9fqtp9eqYL'bqYBs_q>'j^q"XXZq"XUXp\4FVp\+=Sp@e4Rp%A"N
p%@tLo^qeJo^h\GoCMSEo()ABo()>@naZ/>nF5r:nF5r9n*f`6n*f]4mdBN2mHs<.mHs<-m-O**m-F!'
lg*m&lK[["lK[Wul07Hsl0.?pkih6nkND$kkND!ik2tggk2k^djlPUbjQ,C_jQ,@]j5]1[io8tWio8tV
iSibSiS`YPi8EPOhr!>Khr!>JhVR,GhVI#Dh;-oCgt^]?gt^Z=gY:K;gY1B8g=k96g"G'3g"G$1f\"j/
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
129.215 271.778 mo
52.2906 271.778 li
48.805 271.778 45.9793 268.952 45.9793 265.467 cv
45.9793 255.799 li
45.9793 252.314 48.805 249.488 52.2906 249.488 cv
129.215 249.488 li
132.701 249.488 135.527 252.314 135.527 255.799 cv
135.527 265.467 li
135.527 268.952 132.701 271.778 129.215 271.778 cv
cp
level3{
gsave
clp
[29.7298 51.4934 -51.4934 29.7298 75.8882 234.886 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[29.7298 51.4934 -51.4934 29.7298 75.8882 234.886 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
gsave
820 312 mo
0 312 li
0 0 li
820 0 li
820 312 li
clp
396.916 312 mo
396.916 344.885 370.257 371.543 337.373 371.543 cv
304.488 371.543 277.83 344.885 277.83 312 cv
277.83 279.115 304.488 252.457 337.373 252.457 cv
370.257 252.457 396.916 279.115 396.916 312 cv
cp
level3{
gsave
clp
[42.0093 42.0093 -42.0093 42.0093 317.44 266.721 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[42.0093 42.0093 -42.0093 42.0093 317.44 266.721 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
357.198 312 mo
357.198 322.949 348.322 331.825 337.373 331.825 cv
326.424 331.825 317.548 322.949 317.548 312 cv
317.548 301.051 326.424 292.175 337.373 292.175 cv
348.322 292.175 357.198 301.051 357.198 312 cv
cp
level3{
gsave
clp
[-21.3407 -21.3407 21.3407 -21.3407 353.262 327.889 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-21.3407 -21.3407 21.3407 -21.3407 353.262 327.889 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
387.523 312 mo
386.523 312 li
386.522 325.575 381.023 337.857 372.127 346.754 cv
363.23 355.65 350.948 361.149 337.373 361.15 cv
323.797 361.149 311.516 355.65 302.619 346.754 cv
293.723 337.857 288.224 325.575 288.223 312 cv
288.224 298.424 293.723 286.143 302.619 277.246 cv
311.516 268.35 323.798 262.851 337.373 262.85 cv
350.948 262.851 363.23 268.35 372.127 277.246 cv
381.023 286.143 386.522 298.425 386.523 312 cv
387.523 312 li
388.523 312 li
388.522 283.75 365.623 260.851 337.373 260.85 cv
309.123 260.851 286.224 283.75 286.223 312 cv
286.224 340.25 309.123 363.149 337.373 363.15 cv
365.623 363.149 388.522 340.25 388.523 312 cv
387.523 312 li
cp
level3{
gsave
clp
[72.3367 72.3367 -72.3367 72.3367 301.205 275.832 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[72.3367 72.3367 -72.3367 72.3367 301.205 275.832 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
377.359 312 mo
376.359 312 li
376.358 322.769 371.997 332.509 364.94 339.567 cv
357.882 346.624 348.142 350.985 337.373 350.986 cv
326.604 350.985 316.864 346.624 309.806 339.567 cv
302.749 332.509 298.388 322.769 298.387 312 cv
298.388 301.231 302.749 291.491 309.806 284.433 cv
316.864 277.376 326.604 273.015 337.373 273.014 cv
348.142 273.015 357.882 277.376 364.94 284.433 cv
371.997 291.491 376.358 301.231 376.359 312 cv
377.359 312 li
378.359 312 li
378.358 289.364 360.009 271.015 337.373 271.014 cv
314.737 271.015 296.388 289.364 296.387 312 cv
296.388 334.636 314.737 352.985 337.373 352.986 cv
360.009 352.985 378.358 334.636 378.359 312 cv
377.359 312 li
cp
level3{
gsave
clp
[57.9626 57.9626 -57.9626 57.9626 308.392 283.019 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[57.9626 57.9626 -57.9626 57.9626 308.392 283.019 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
367.601 312 mo
366.601 312 li
366.601 320.074 363.331 327.375 358.041 332.668 cv
352.748 337.958 345.447 341.228 337.373 341.228 cv
329.299 341.228 321.998 337.958 316.705 332.668 cv
311.415 327.375 308.145 320.074 308.145 312 cv
308.145 303.926 311.415 296.625 316.705 291.332 cv
321.998 286.042 329.299 282.772 337.373 282.772 cv
345.447 282.772 352.748 286.042 358.041 291.332 cv
363.331 296.625 366.601 303.926 366.601 312 cv
367.601 312 li
368.601 312 li
368.601 294.753 354.62 280.772 337.373 280.772 cv
320.126 280.772 306.145 294.753 306.145 312 cv
306.145 329.247 320.126 343.228 337.373 343.228 cv
354.62 343.228 368.601 329.247 368.601 312 cv
367.601 312 li
cp
level3{
gsave
clp
[44.1635 44.1635 -44.1635 44.1635 315.291 289.918 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[44.1635 44.1635 -44.1635 44.1635 315.291 289.918 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
399.052 180.836 mo
399.052 186.31 394.614 190.748 389.14 190.748 cv
383.665 190.748 379.227 186.31 379.227 180.836 cv
379.227 175.362 383.665 170.924 389.14 170.924 cv
394.614 170.924 399.052 175.362 399.052 180.836 cv
cp
level3{
gsave
clp
[-10.6703 -10.6703 10.6703 -10.6703 397.084 188.781 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-10.6703 -10.6703 10.6703 -10.6703 397.084 188.781 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
414.215 180.836 mo
413.215 180.836 li
413.214 187.487 410.522 193.5 406.163 197.86 cv
401.803 202.218 395.791 204.91 389.14 204.911 cv
382.489 204.91 376.476 202.218 372.116 197.86 cv
367.758 193.5 365.065 187.487 365.065 180.836 cv
365.065 174.185 367.758 168.172 372.116 163.813 cv
376.476 159.454 382.489 156.762 389.14 156.761 cv
395.791 156.762 401.803 159.454 406.163 163.813 cv
410.522 168.172 413.214 174.185 413.215 180.836 cv
414.215 180.836 li
415.215 180.836 li
415.214 166.435 403.541 154.762 389.14 154.761 cv
374.739 154.762 363.066 166.435 363.065 180.836 cv
363.066 195.237 374.739 206.91 389.14 206.911 cv
403.541 206.91 415.214 195.237 415.215 180.836 cv
414.215 180.836 li
cp
level3{
gsave
clp
[36.8754 36.8754 -36.8754 36.8754 370.702 162.398 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[36.8754 36.8754 -36.8754 36.8754 370.702 162.398 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
409.133 180.836 mo
408.133 180.836 li
408.132 186.084 406.008 190.826 402.57 194.266 cv
399.13 197.705 394.388 199.828 389.14 199.829 cv
383.892 199.828 379.15 197.705 375.71 194.266 cv
372.271 190.826 370.147 186.084 370.147 180.836 cv
370.147 175.588 372.271 170.846 375.71 167.406 cv
379.15 163.967 383.892 161.844 389.14 161.843 cv
394.388 161.844 399.13 163.967 402.57 167.406 cv
406.008 170.846 408.132 175.588 408.133 180.836 cv
409.133 180.836 li
410.133 180.836 li
410.132 169.242 400.734 159.844 389.14 159.843 cv
377.545 159.844 368.148 169.242 368.147 180.836 cv
368.148 192.43 377.545 201.828 389.14 201.829 cv
400.734 201.828 410.132 192.43 410.133 180.836 cv
409.133 180.836 li
cp
level3{
gsave
clp
[29.6884 29.6884 -29.6884 29.6884 374.296 165.992 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[29.6884 29.6884 -29.6884 29.6884 374.296 165.992 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
404.254 180.836 mo
403.254 180.836 li
403.253 184.737 401.676 188.259 399.12 190.816 cv
396.563 193.372 393.04 194.95 389.14 194.95 cv
385.239 194.95 381.717 193.372 379.16 190.816 cv
376.604 188.259 375.026 184.737 375.026 180.836 cv
375.026 176.935 376.604 173.413 379.16 170.856 cv
381.717 168.3 385.239 166.722 389.14 166.722 cv
393.04 166.722 396.563 168.3 399.12 170.856 cv
401.676 173.413 403.253 176.935 403.254 180.836 cv
404.254 180.836 li
405.254 180.836 li
405.253 171.936 398.04 164.723 389.14 164.722 cv
380.24 164.723 373.026 171.936 373.026 180.836 cv
373.026 189.736 380.24 196.95 389.14 196.95 cv
398.04 196.95 405.253 189.736 405.254 180.836 cv
404.254 180.836 li
cp
level3{
gsave
clp
[22.7889 22.7889 -22.7889 22.7889 377.745 169.442 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[22.7889 22.7889 -22.7889 22.7889 377.745 169.442 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
385.026 -18.1744 mo
385.026 31.0443 345.126 70.9439 295.908 70.9439 cv
246.689 70.9439 206.789 31.0443 206.789 -18.1744 cv
206.789 -67.393 246.689 -107.293 295.908 -107.293 cv
345.126 -107.293 385.026 -67.393 385.026 -18.1744 cv
cp
level3{
gsave
clp
[89.1183 0 0 89.1183 262.817 33.3846 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[89.1183 0 0 89.1183 262.817 33.3846 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
335.796 -18.1744 mo
335.796 3.85517 317.937 21.7136 295.908 21.7136 cv
273.878 21.7136 256.02 3.85517 256.02 -18.1744 cv
256.02 -40.2039 273.878 -58.0624 295.908 -58.0624 cv
317.937 -58.0624 335.796 -40.2039 335.796 -18.1744 cv
cp
level3{
gsave
clp
[-37.5251 -37.5251 37.5251 -37.5251 327.883 13.8005 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-37.5251 -37.5251 37.5251 -37.5251 327.883 13.8005 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
371.276 -18.1744 mo
370.276 -18.1744 li
370.275 2.36494 361.953 20.9506 348.494 34.4117 cv
335.033 47.8712 316.447 56.193 295.908 56.1935 cv
275.368 56.193 256.783 47.8712 243.322 34.4117 cv
229.862 20.9506 221.54 2.3649 221.54 -18.1744 cv
221.54 -38.7137 229.862 -57.2993 243.322 -70.7604 cv
256.783 -84.2199 275.368 -92.5417 295.908 -92.5422 cv
316.447 -92.5417 335.033 -84.2199 348.494 -70.7604 cv
361.953 -57.2993 370.275 -38.7136 370.276 -18.1744 cv
371.276 -18.1744 li
372.276 -18.1744 li
372.275 -60.3516 338.085 -94.5416 295.908 -94.5422 cv
253.73 -94.5416 219.54 -60.3516 219.54 -18.1744 cv
219.54 24.0028 253.731 58.1929 295.908 58.1935 cv
338.085 58.1929 372.275 24.0028 372.276 -18.1744 cv
371.276 -18.1744 li
cp
level3{
gsave
clp
[150.44 26.5267 -26.5267 150.44 220.688 -31.4377 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[150.44 26.5267 -26.5267 150.44 220.688 -31.4377 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
363.203 -18.1744 mo
362.083 -18.1744 li
362.083 .103097 354.678 16.6399 342.701 28.6189 cv
330.722 40.5961 314.185 48.0008 295.908 48.0013 cv
277.63 48.0007 261.093 40.5961 249.114 28.6189 cv
237.137 16.6399 229.733 .103064 229.732 -18.1744 cv
229.733 -36.4518 237.137 -52.9886 249.114 -64.9676 cv
261.093 -76.9448 277.63 -84.3495 295.908 -84.35 cv
314.185 -84.3495 330.722 -76.9448 342.701 -64.9676 cv
354.678 -52.9887 362.083 -36.4518 362.083 -18.1744 cv
363.203 -18.1744 li
364.323 -18.1744 li
364.322 -55.9596 333.693 -86.589 295.908 -86.5898 cv
258.122 -86.589 227.493 -55.9596 227.492 -18.1744 cv
227.493 19.6109 258.123 50.2403 295.908 50.241 cv
333.693 50.2403 364.322 19.6108 364.323 -18.1744 cv
363.203 -18.1744 li
cp
level3{
gsave
clp
[134.774 23.7643 -23.7643 134.774 228.521 -30.0565 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[134.774 23.7643 -23.7643 134.774 228.521 -30.0565 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
354.744 -18.1744 mo
353.624 -18.1744 li
353.623 -2.23291 347.166 12.1891 336.719 22.6372 cv
326.271 33.0835 311.849 39.5413 295.908 39.5419 cv
279.966 39.5413 265.544 33.0835 255.096 22.6372 cv
244.65 12.1891 238.192 -2.23294 238.191 -18.1744 cv
238.192 -34.1158 244.65 -48.5378 255.096 -58.9859 cv
265.544 -69.4322 279.966 -75.89 295.908 -75.8906 cv
311.849 -75.89 326.271 -69.4322 336.719 -58.9859 cv
347.166 -48.5378 353.623 -34.1158 353.624 -18.1744 cv
354.744 -18.1744 li
355.864 -18.1744 li
355.863 -51.2875 329.021 -78.1296 295.908 -78.1303 cv
262.795 -78.1296 235.952 -51.2875 235.952 -18.1744 cv
235.952 14.9388 262.795 41.7809 295.908 41.7816 cv
329.021 41.7809 355.863 14.9388 355.864 -18.1744 cv
354.744 -18.1744 li
cp
level3{
gsave
clp
[118.11 20.8259 -20.8259 118.11 236.853 -28.5873 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[118.11 20.8259 -20.8259 118.11 236.853 -28.5873 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
891.1 171.77 mo
891.1 204.655 864.442 231.313 831.557 231.313 cv
798.673 231.313 772.015 204.655 772.015 171.77 cv
772.015 138.885 798.673 112.227 831.557 112.227 cv
864.442 112.227 891.1 138.885 891.1 171.77 cv
cp
level3{
gsave
clp
[42.0093 42.0093 -42.0093 42.0093 811.624 126.491 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[42.0093 42.0093 -42.0093 42.0093 811.624 126.491 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
851.382 171.77 mo
851.382 182.719 842.506 191.595 831.557 191.595 cv
820.608 191.595 811.733 182.719 811.733 171.77 cv
811.733 160.821 820.608 151.945 831.557 151.945 cv
842.506 151.945 851.382 160.821 851.382 171.77 cv
cp
level3{
gsave
clp
[-21.3407 -21.3407 21.3407 -21.3407 847.446 187.659 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-21.3407 -21.3407 21.3407 -21.3407 847.446 187.659 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
881.707 171.77 mo
880.707 171.77 li
880.707 185.345 875.207 197.627 866.311 206.524 cv
857.414 215.42 845.133 220.919 831.557 220.92 cv
817.982 220.919 805.701 215.42 796.803 206.524 cv
787.907 197.627 782.408 185.345 782.408 171.77 cv
782.408 158.194 787.907 145.913 796.803 137.016 cv
805.701 128.12 817.982 122.621 831.557 122.62 cv
845.133 122.621 857.414 128.12 866.311 137.016 cv
875.207 145.913 880.707 158.195 880.707 171.77 cv
881.707 171.77 li
882.707 171.77 li
882.706 143.52 859.807 120.621 831.557 120.62 cv
803.308 120.621 780.408 143.52 780.408 171.77 cv
780.408 200.02 803.308 222.919 831.557 222.92 cv
859.807 222.919 882.706 200.02 882.707 171.77 cv
881.707 171.77 li
cp
level3{
gsave
clp
[72.3367 72.3367 -72.3367 72.3367 795.389 135.602 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[72.3367 72.3367 -72.3367 72.3367 795.389 135.602 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
871.543 171.77 mo
870.543 171.77 li
870.543 182.539 866.181 192.279 859.124 199.337 cv
852.066 206.394 842.326 210.755 831.557 210.756 cv
820.788 210.755 811.048 206.394 803.99 199.337 cv
796.934 192.279 792.572 182.539 792.572 171.77 cv
792.572 161.001 796.934 151.261 803.99 144.203 cv
811.048 137.146 820.789 132.785 831.557 132.784 cv
842.326 132.785 852.066 137.146 859.124 144.203 cv
866.181 151.261 870.543 161.001 870.543 171.77 cv
871.543 171.77 li
872.543 171.77 li
872.542 149.134 854.193 130.785 831.557 130.784 cv
808.921 130.785 790.572 149.134 790.572 171.77 cv
790.572 194.406 808.921 212.755 831.557 212.756 cv
854.193 212.755 872.542 194.406 872.543 171.77 cv
871.543 171.77 li
cp
level3{
gsave
clp
[57.9626 57.9626 -57.9626 57.9626 802.576 142.789 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[57.9626 57.9626 -57.9626 57.9626 802.576 142.789 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
861.786 171.77 mo
860.786 171.77 li
860.785 179.844 857.516 187.145 852.225 192.438 cv
846.932 197.728 839.632 200.998 831.557 200.998 cv
823.483 200.998 816.182 197.728 810.89 192.438 cv
805.599 187.145 802.329 179.844 802.329 171.77 cv
802.329 163.696 805.599 156.395 810.89 151.102 cv
816.182 145.812 823.483 142.542 831.557 142.542 cv
839.632 142.542 846.932 145.812 852.225 151.102 cv
857.516 156.395 860.785 163.696 860.786 171.77 cv
861.786 171.77 li
862.786 171.77 li
862.785 154.523 848.805 140.542 831.557 140.542 cv
814.31 140.542 800.33 154.523 800.329 171.77 cv
800.33 189.017 814.31 202.998 831.557 202.998 cv
848.805 202.998 862.785 189.017 862.786 171.77 cv
861.786 171.77 li
cp
level3{
gsave
clp
[44.1635 44.1635 -44.1635 44.1635 809.476 149.688 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[44.1635 44.1635 -44.1635 44.1635 809.476 149.688 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
grestore
85.0432 43.7873 mo
84.4646 45.5476 82.8046 46.8175 80.8551 46.8175 cv
78.4277 46.8175 76.4531 44.8427 76.4531 42.4156 cv
76.4531 39.9885 78.4277 38.0137 80.8551 38.0137 cv
82.8046 38.0137 84.452 39.2727 85.0306 41.0203 cv
82.93 41.0203 li
82.5782 40.2531 81.7226 39.7753 80.8551 39.7753 cv
79.4715 39.7753 78.3651 40.97 78.3651 42.4156 cv
78.3651 43.8749 79.4715 45.0573 80.8551 45.0573 cv
81.7352 45.0573 82.5908 44.5421 82.9425 43.7873 cv
85.0432 43.7873 li
cp
.878431 .878431 .878431 rgb
f
90.1998 39.8883 mo
88.8795 39.8883 87.6848 41.0828 87.6848 42.4032 cv
87.6848 43.7246 88.8795 44.9319 90.1998 44.9319 cv
91.5206 44.9319 92.7153 43.7246 92.7153 42.4032 cv
92.7153 41.0828 91.5206 39.8883 90.1998 39.8883 cv
cp
90.1998 46.8175 mo
87.8352 46.8175 85.7978 44.7801 85.7978 42.4156 cv
85.7978 40.051 87.8352 38.0137 90.1998 38.0137 cv
92.5643 38.0137 94.6017 40.051 94.6017 42.4156 cv
94.6017 44.7801 92.5643 46.8175 90.1998 46.8175 cv
cp
f
104.386 46.6922 mo
103.38 40.7932 li
101.707 46.6922 li
99.8585 46.6922 li
98.1861 40.7932 li
97.1799 46.6922 li
95.1044 46.6922 li
96.7649 38.1403 li
99.0035 38.1403 li
100.789 44.1395 li
102.562 38.1403 li
104.801 38.1403 li
106.461 46.6922 li
104.386 46.6922 li
cp
f
109.165 39.6237 mo
109.165 42.1524 li
110.171 42.1524 li
110.725 42.1524 111.303 41.6997 111.303 40.8823 cv
111.303 40.1025 110.725 39.6237 110.171 39.6237 cv
109.165 39.6237 li
cp
109.165 46.6922 mo
107.279 46.6922 li
107.279 38.1403 li
108.7 38.1403 li
109.165 38.1403 li
110.486 38.1403 li
111.869 38.1403 113.102 39.26 113.102 40.8823 cv
113.102 42.6175 111.869 43.6355 110.486 43.6355 cv
109.165 43.6355 li
109.165 46.6922 li
cp
f
116.711 40.3783 mo
115.63 43.4224 li
117.793 43.4224 li
116.711 40.3783 li
cp
118.963 46.6922 mo
118.347 44.9694 li
115.089 44.9694 li
114.473 46.6922 li
112.448 46.6922 li
115.919 38.1403 li
117.516 38.1403 li
120.988 46.6922 li
118.963 46.6922 li
cp
f
126.634 46.6922 mo
123.691 41.36 li
123.691 46.6922 li
121.805 46.6922 li
121.805 38.1403 li
123.691 38.1403 li
126.634 43.4725 li
126.634 38.1403 li
128.521 38.1403 li
128.521 46.6922 li
126.634 46.6922 li
cp
f
132.533 42.605 mo
129.376 38.1403 li
131.627 38.1403 li
133.476 41.0954 li
135.325 38.1403 li
137.576 38.1403 li
134.42 42.605 li
134.42 46.6922 li
132.533 46.6922 li
132.533 42.605 li
cp
f
76.7679 51.5516 mo
78.6541 51.5516 li
78.6541 58.3932 li
81.7226 58.3932 li
81.7226 60.1033 li
76.7679 60.1033 li
76.7679 51.5516 li
cp
f
86.389 53.2994 mo
85.0683 53.2994 83.874 54.494 83.874 55.8142 cv
83.874 57.1356 85.0683 58.3431 86.389 58.3431 cv
87.7098 58.3431 88.9047 57.1356 88.9047 55.8142 cv
88.9047 54.494 87.7098 53.2994 86.389 53.2994 cv
cp
86.389 60.2286 mo
84.0245 60.2286 81.9872 58.1913 81.9872 55.8268 cv
81.9872 53.4635 84.0245 51.4249 86.389 51.4249 cv
88.7535 51.4249 90.7908 53.4635 90.7908 55.8268 cv
90.7908 58.1913 88.7535 60.2286 86.389 60.2286 cv
cp
f
93.7717 55.8518 mo
93.7717 57.2987 94.9031 58.5186 96.2615 58.5186 cv
97.0914 58.5186 98.1478 58.254 98.6136 56.9588 cv
96.4376 56.9588 li
96.4376 55.5385 li
100.651 55.5385 li
100.651 55.8268 li
100.651 58.254 98.7012 60.2286 96.2615 60.2286 cv
93.8469 60.2286 91.8596 58.2415 91.8596 55.8268 cv
91.8596 53.4121 93.8469 51.4249 96.2615 51.4249 cv
98.1478 51.4249 99.8459 52.6586 100.437 54.4315 cv
98.3615 54.4315 li
97.9465 53.5262 97.0914 53.1865 96.2615 53.1865 cv
94.9031 53.1865 93.7717 54.4064 93.7717 55.8518 cv
cp
f
105.933 53.2994 mo
104.613 53.2994 103.418 54.494 103.418 55.8142 cv
103.418 57.1356 104.613 58.3431 105.933 58.3431 cv
107.254 58.3431 108.448 57.1356 108.448 55.8142 cv
108.448 54.494 107.254 53.2994 105.933 53.2994 cv
cp
105.933 60.2286 mo
103.568 60.2286 101.531 58.1913 101.531 55.8268 cv
101.531 53.4635 103.568 51.4249 105.933 51.4249 cv
108.297 51.4249 110.335 53.4635 110.335 55.8268 cv
110.335 58.1913 108.297 60.2286 105.933 60.2286 cv
cp
f
57.6617 57.3525 mo
53.1156 57.3525 49.4303 53.6673 49.4303 49.1212 cv
49.4303 44.5751 53.1156 40.89 57.6617 40.89 cv
62.2078 40.89 65.893 44.5751 65.893 49.1212 cv
65.893 53.6673 62.2078 57.3525 57.6617 57.3525 cv
cp
57.6617 36.3953 mo
50.6334 36.3953 44.9357 42.0929 44.9357 49.1212 cv
44.9357 56.1495 50.6334 61.8472 57.6617 61.8472 cv
64.69 61.8472 70.3877 56.1495 70.3877 49.1212 cv
70.3877 42.0929 64.69 36.3953 57.6617 36.3953 cv
cp
level3{
gsave
clp
[12.7281 22.0457 -22.0457 12.7281 51.2976 38.0984 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.996078 .419608 0 ]
/C1 [1 .74902 .0431373 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .74902 .0431373 ]
/C1 [.996078 .419608 0 ]
/N 1 
>>
]
/Bounds [.305866 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[12.7281 22.0457 -22.0457 12.7281 51.2976 38.0984 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
254 <~CM[j*DfB]:F*)PJGBeF\I!pHnJ:W<)KS>/9M2I4MNK0']OckomQ'Rf*R[]h<StD[LU8+N]Vl6SpX/rG+
YHY:;ZaI6N\@K2_]Y2%n^:h4m]Xtee]",A]\@B#W[^NTO['[0GZEga?Yct@8YHG%1XfSV)X/`2!WMlbn
Vl-DhV59u`USFQXTqS-PT:_^HSt2FBS=?":R[KS2R$X/*QBmf$Pa%AqP*1riOH>NaNfK*YNJrgSMi*CK
M26tCLPCP;KnP,4K7ec-JUr?%It)orI=6KjI!^3dH?jd\G^"@TG'.qLFE;MEEcQ/>E,]`6DJj<.Ci!m&
~>
<~zz!<E3%!<E3&!WiE)!WiH+!s8W-!sA`0"9\i1"U,&5"U,&6"pP89"pP;;#6tJ=#7(S@#RC\A#RLeD#mg
nE$47+I$47+I$47+I$47+I$47+I$47+H#mgnE#mgnE#mgnE#mgnD#RC\A#RC\A#RC\A#RC\@#6tJ=#6t
J=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"U,&5"U,&5"U,&5"U,&5"9\i1"9\i1"9\i1"9\i1!s8W-!s8
W-!s8W-!s8W-!WiE)!WiE)!WiE)!WiE)!<E3%!<E3%!<E3%!<E3%zzz!!!!!~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
62.2979 136.679 mo
69.7842 136.679 75.4331 140.893 77.2261 147.707 cv
68.7979 147.707 li
67.4981 145.017 65.1221 143.672 62.208 143.672 cv
57.501 143.672 54.273 147.169 54.273 152.728 cv
54.273 158.286 57.501 161.783 62.208 161.783 cv
65.1221 161.783 67.4981 160.438 68.7979 157.748 cv
77.2261 157.748 li
75.4331 164.563 69.7842 168.732 62.2979 168.732 cv
53.0176 168.732 46.4727 162.142 46.4727 152.728 cv
46.4727 143.313 53.0176 136.679 62.2979 136.679 cv
cp
level3{
gsave
clp
[76.5263 132.547 -132.547 76.5263 136.73 91.0234 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[76.5263 132.547 -132.547 76.5263 136.73 91.0234 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
93.3198 162.231 mo
96.0542 162.231 98.6099 160.214 98.6099 156 cv
98.6099 151.741 96.0991 149.769 93.4092 149.769 cv
90.6299 149.769 88.209 151.741 88.209 156 cv
88.209 160.214 90.54 162.231 93.3198 162.231 cv
cp
93.3198 168.866 mo
85.9673 168.866 80.4087 163.936 80.4087 156 cv
80.4087 148.065 86.1021 143.134 93.4092 143.134 cv
100.762 143.134 106.41 148.065 106.41 156 cv
106.41 163.936 100.672 168.866 93.3198 168.866 cv
cp
level3{
gsave
clp
[76.5263 132.547 -132.547 76.5263 136.73 91.0234 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[76.5263 132.547 -132.547 76.5263 136.73 91.0234 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
127.749 154.924 mo
127.749 151.518 125.866 149.634 122.952 149.634 cv
120.038 149.634 118.155 151.518 118.155 154.924 cv
118.155 168.508 li
110.489 168.508 li
110.489 143.492 li
118.155 143.492 li
118.155 146.81 li
119.679 144.703 122.369 143.224 125.731 143.224 cv
131.514 143.224 135.37 147.169 135.37 153.894 cv
135.37 168.508 li
127.749 168.508 li
127.749 154.924 li
cp
level3{
gsave
clp
[76.5263 132.547 -132.547 76.5263 136.73 91.0234 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[76.5263 132.547 -132.547 76.5263 136.73 91.0234 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
150.88 168.866 mo
144.201 168.866 139.717 165.146 139.359 160.304 cv
146.935 160.304 li
147.115 162.053 148.684 163.218 150.791 163.218 cv
152.763 163.218 153.794 162.321 153.794 161.2 cv
153.794 157.166 140.166 160.08 140.166 150.89 cv
140.166 146.631 143.797 143.134 150.342 143.134 cv
156.798 143.134 160.384 146.721 160.877 151.651 cv
153.794 151.651 li
153.57 149.948 152.27 148.827 150.118 148.827 cv
148.325 148.827 147.339 149.545 147.339 150.755 cv
147.339 154.745 160.877 151.921 161.012 161.245 cv
161.012 165.594 157.157 168.866 150.88 168.866 cv
cp
level3{
gsave
clp
[76.5263 132.547 -132.547 76.5263 136.73 91.0234 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[76.5263 132.547 -132.547 76.5263 136.73 91.0234 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
190.42 168.508 mo
182.754 168.508 li
182.754 165.101 li
181.23 167.253 178.541 168.776 175.178 168.776 cv
169.395 168.776 165.495 164.787 165.495 158.107 cv
165.495 143.492 li
173.116 143.492 li
173.116 157.076 li
173.116 160.483 175.043 162.366 177.913 162.366 cv
180.872 162.366 182.754 160.483 182.754 157.076 cv
182.754 143.492 li
190.42 143.492 li
190.42 168.508 li
cp
level3{
gsave
clp
[76.5263 132.547 -132.547 76.5263 136.73 91.0234 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[76.5263 132.547 -132.547 76.5263 136.73 91.0234 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
195.934 135.333 mo
203.6 135.333 li
203.6 168.508 li
195.934 168.508 li
195.934 135.333 li
cp
level3{
gsave
clp
[76.5263 132.547 -132.547 76.5263 136.73 91.0234 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[76.5263 132.547 -132.547 76.5263 136.73 91.0234 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
210.369 149.858 mo
207.32 149.858 li
207.32 143.492 li
210.369 143.492 li
210.369 137.396 li
218.035 137.396 li
218.035 143.492 li
223.056 143.492 li
223.056 149.858 li
218.035 149.858 li
218.035 159.9 li
218.035 161.38 218.663 162.008 220.366 162.008 cv
223.101 162.008 li
223.101 168.508 li
219.2 168.508 li
214 168.508 210.369 166.312 210.369 159.811 cv
210.369 149.858 li
cp
level3{
gsave
clp
[76.5263 132.547 -132.547 76.5263 136.73 91.0234 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[76.5263 132.547 -132.547 76.5263 136.73 91.0234 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
227.359 143.492 mo
235.025 143.492 li
235.025 168.508 li
227.359 168.508 li
227.359 143.492 li
cp
226.642 136.768 mo
226.642 134.437 228.48 132.599 231.214 132.599 cv
233.904 132.599 235.742 134.437 235.742 136.768 cv
235.742 139.055 233.904 140.893 231.214 140.893 cv
228.48 140.893 226.642 139.055 226.642 136.768 cv
cp
level3{
gsave
clp
[76.5263 132.547 -132.547 76.5263 136.73 91.0234 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[76.5263 132.547 -132.547 76.5263 136.73 91.0234 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
257.843 154.924 mo
257.843 151.518 255.96 149.634 253.046 149.634 cv
250.132 149.634 248.25 151.518 248.25 154.924 cv
248.25 168.508 li
240.584 168.508 li
240.584 143.492 li
248.25 143.492 li
248.25 146.81 li
249.774 144.703 252.464 143.224 255.826 143.224 cv
261.609 143.224 265.464 147.169 265.464 153.894 cv
265.464 168.508 li
257.843 168.508 li
257.843 154.924 li
cp
level3{
gsave
clp
[76.5263 132.547 -132.547 76.5263 136.73 91.0234 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[76.5263 132.547 -132.547 76.5263 136.73 91.0234 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
282.544 149.813 mo
279.675 149.813 277.075 151.966 277.075 155.955 cv
277.075 159.945 279.675 162.187 282.544 162.187 cv
285.458 162.187 288.013 159.99 288.013 156 cv
288.013 152.01 285.458 149.813 282.544 149.813 cv
cp
280.303 143.134 mo
283.979 143.134 286.668 144.793 288.013 147.034 cv
288.013 143.492 li
295.679 143.492 li
295.679 168.463 li
295.679 175.143 291.824 180.836 283.172 180.836 cv
275.73 180.836 270.888 177.07 270.216 171.108 cv
277.792 171.108 li
278.285 172.991 280.168 174.201 282.813 174.201 cv
285.727 174.201 288.013 172.677 288.013 168.463 cv
288.013 164.922 li
286.624 167.118 283.979 168.866 280.303 168.866 cv
274.161 168.866 269.274 163.846 269.274 155.955 cv
269.274 148.065 274.161 143.134 280.303 143.134 cv
cp
level3{
gsave
clp
[76.5263 132.547 -132.547 76.5263 136.73 91.0234 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[76.5263 132.547 -132.547 76.5263 136.73 91.0234 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
64.8765 103.457 mo
64.8765 123.954 li
62.7974 123.954 li
62.7974 120.499 li
61.4209 122.988 59.02 124.13 55.916 124.13 cv
51.1138 124.13 48.0981 121.172 48.0981 115.667 cv
48.0981 103.457 li
50.2647 103.457 li
50.2647 115.608 li
50.2647 120.001 52.5781 122.197 56.3262 122.197 cv
60.2207 122.197 62.7095 119.942 62.7095 115.111 cv
62.7095 103.457 li
64.8765 103.457 li
cp
level3{
gsave
clp
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
85.2871 115.023 mo
85.2871 123.954 li
83.208 123.954 li
83.208 115.229 li
83.208 111.978 81.5098 110.309 78.5815 110.309 cv
75.2725 110.309 73.1939 112.358 73.1939 115.872 cv
73.1939 123.954 li
71.1147 123.954 li
71.1147 108.552 li
73.106 108.552 li
73.106 111.393 li
74.2188 109.519 76.2974 108.435 78.9624 108.435 cv
82.7105 108.435 85.2871 110.602 85.2871 115.023 cv
cp
level3{
gsave
clp
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
90.9395 108.552 mo
93.0186 108.552 li
93.0186 123.954 li
90.9395 123.954 li
90.9395 108.552 li
cp
90.4707 103.691 mo
90.4707 102.9 91.1445 102.228 91.9937 102.228 cv
92.8428 102.228 93.5161 102.871 93.5161 103.662 cv
93.5161 104.511 92.8721 105.185 91.9937 105.185 cv
91.1445 105.185 90.4707 104.511 90.4707 103.691 cv
cp
level3{
gsave
clp
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
110.822 116.253 mo
110.822 112.681 108.363 110.25 105.112 110.25 cv
101.833 110.25 99.3731 112.681 99.3731 116.253 cv
99.3731 119.854 101.833 122.256 105.112 122.256 cv
108.363 122.256 110.822 119.854 110.822 116.253 cv
cp
112.872 108.552 mo
112.872 129.635 li
110.793 129.635 li
110.793 121.056 li
109.504 123.046 107.396 124.101 104.937 124.101 cv
100.544 124.101 97.2651 120.938 97.2651 116.253 cv
97.2651 111.598 100.544 108.435 104.937 108.435 cv
107.484 108.435 109.622 109.548 110.881 111.598 cv
110.881 108.552 li
112.872 108.552 li
cp
level3{
gsave
clp
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
132.55 108.552 mo
132.55 123.954 li
130.559 123.954 li
130.559 121.143 li
129.476 123.018 127.485 124.101 125.025 124.101 cv
121.101 124.101 118.524 121.904 118.524 117.482 cv
118.524 108.552 li
120.604 108.552 li
120.604 117.278 li
120.604 120.558 122.302 122.227 125.23 122.227 cv
128.451 122.227 130.471 120.147 130.471 116.634 cv
130.471 108.552 li
132.55 108.552 li
cp
level3{
gsave
clp
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
138.847 116.106 mo
138.847 116.341 138.847 116.546 138.876 116.751 cv
149.74 114.643 li
149.3 112.124 147.28 110.221 144.439 110.221 cv
141.16 110.221 138.847 112.622 138.847 116.106 cv
cp
149.681 120.235 mo
150.853 121.582 li
149.476 123.222 147.368 124.101 144.938 124.101 cv
140.135 124.101 136.827 120.821 136.827 116.253 cv
136.827 111.686 140.018 108.435 144.439 108.435 cv
148.568 108.435 151.672 111.451 151.819 115.784 cv
139.169 118.244 li
139.93 120.733 142.097 122.256 144.967 122.256 cv
146.87 122.256 148.539 121.582 149.681 120.235 cv
cp
level3{
gsave
clp
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
179.14 118.303 mo
179.14 115.638 177.178 114.467 173.576 114.467 cv
166.344 114.467 li
166.344 122.168 li
173.576 122.168 li
177.178 122.168 179.14 120.997 179.14 118.303 cv
cp
166.344 105.243 mo
166.344 112.681 li
172.874 112.681 li
176.153 112.681 178.057 111.422 178.057 108.962 cv
178.057 106.502 176.153 105.243 172.874 105.243 cv
166.344 105.243 li
cp
181.307 118.479 mo
181.307 121.963 178.73 123.954 173.605 123.954 cv
164.177 123.954 li
164.177 103.457 li
173.02 103.457 li
177.588 103.457 180.223 105.39 180.223 108.728 cv
180.223 111.07 178.964 112.622 177.09 113.384 cv
179.726 113.969 181.307 115.696 181.307 118.479 cv
cp
level3{
gsave
clp
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
199.697 108.552 mo
199.697 123.954 li
197.706 123.954 li
197.706 121.143 li
196.622 123.018 194.631 124.101 192.171 124.101 cv
188.248 124.101 185.671 121.904 185.671 117.482 cv
185.671 108.552 li
187.75 108.552 li
187.75 117.278 li
187.75 120.558 189.448 122.227 192.376 122.227 cv
195.597 122.227 197.618 120.147 197.618 116.634 cv
197.618 108.552 li
199.697 108.552 li
cp
level3{
gsave
clp
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
203.388 122.197 mo
204.325 120.558 li
205.555 121.523 207.634 122.285 209.8 122.285 cv
212.729 122.285 213.929 121.289 213.929 119.767 cv
213.929 115.755 203.944 118.918 203.944 112.827 cv
203.944 110.309 206.111 108.435 210.035 108.435 cv
212.026 108.435 214.193 108.991 215.481 109.87 cv
214.573 111.539 li
213.227 110.602 211.616 110.221 210.035 110.221 cv
207.253 110.221 206.023 111.305 206.023 112.769 cv
206.023 116.927 216.008 113.793 216.008 119.708 cv
216.008 122.373 213.666 124.101 209.654 124.101 cv
207.106 124.101 204.647 123.28 203.388 122.197 cv
cp
level3{
gsave
clp
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
219.845 108.552 mo
221.924 108.552 li
221.924 123.954 li
219.845 123.954 li
219.845 108.552 li
cp
219.376 103.691 mo
219.376 102.9 220.05 102.228 220.899 102.228 cv
221.748 102.228 222.421 102.871 222.421 103.662 cv
222.421 104.511 221.777 105.185 220.899 105.185 cv
220.05 105.185 219.376 104.511 219.376 103.691 cv
cp
level3{
gsave
clp
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
241.895 115.023 mo
241.895 123.954 li
239.815 123.954 li
239.815 115.229 li
239.815 111.978 238.117 110.309 235.189 110.309 cv
231.88 110.309 229.801 112.358 229.801 115.872 cv
229.801 123.954 li
227.722 123.954 li
227.722 108.552 li
229.713 108.552 li
229.713 111.393 li
230.826 109.519 232.905 108.435 235.57 108.435 cv
239.318 108.435 241.895 110.602 241.895 115.023 cv
cp
level3{
gsave
clp
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
248.074 116.106 mo
248.074 116.341 248.074 116.546 248.103 116.751 cv
258.967 114.643 li
258.527 112.124 256.507 110.221 253.667 110.221 cv
250.387 110.221 248.074 112.622 248.074 116.106 cv
cp
258.908 120.235 mo
260.08 121.582 li
258.703 123.222 256.595 124.101 254.165 124.101 cv
249.362 124.101 246.054 120.821 246.054 116.253 cv
246.054 111.686 249.245 108.435 253.667 108.435 cv
257.795 108.435 260.899 111.451 261.046 115.784 cv
248.396 118.244 li
249.157 120.733 251.324 122.256 254.194 122.256 cv
256.097 122.256 257.766 121.582 258.908 120.235 cv
cp
level3{
gsave
clp
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
263.155 122.197 mo
264.092 120.558 li
265.322 121.523 267.401 122.285 269.567 122.285 cv
272.496 122.285 273.696 121.289 273.696 119.767 cv
273.696 115.755 263.711 118.918 263.711 112.827 cv
263.711 110.309 265.878 108.435 269.802 108.435 cv
271.793 108.435 273.96 108.991 275.248 109.87 cv
274.34 111.539 li
272.994 110.602 271.383 110.221 269.802 110.221 cv
267.02 110.221 265.79 111.305 265.79 112.769 cv
265.79 116.927 275.775 113.793 275.775 119.708 cv
275.775 122.373 273.433 124.101 269.421 124.101 cv
266.874 124.101 264.414 123.28 263.155 122.197 cv
cp
level3{
gsave
clp
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
277.474 122.197 mo
278.411 120.558 li
279.641 121.523 281.72 122.285 283.887 122.285 cv
286.815 122.285 288.016 121.289 288.016 119.767 cv
288.016 115.755 278.031 118.918 278.031 112.827 cv
278.031 110.309 280.197 108.435 284.121 108.435 cv
286.112 108.435 288.279 108.991 289.567 109.87 cv
288.66 111.539 li
287.313 110.602 285.702 110.221 284.121 110.221 cv
281.339 110.221 280.109 111.305 280.109 112.769 cv
280.109 116.927 290.095 113.793 290.095 119.708 cv
290.095 122.373 287.752 124.101 283.741 124.101 cv
281.193 124.101 278.733 123.28 277.474 122.197 cv
cp
level3{
gsave
clp
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.5114 118.665 -118.665 68.5114 133.966 53.8811 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
.0117647 .145098 .305882 rgb
%ADOBeginSubsetFont: Poppins-Medium Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Poppins-Medium def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 33 /exclam putdup 73 /I putdup 74 /J putdup 78 /N putdup 79 /O putdup 87 /W putdef/FontBBox {-537 -582 2540 1077} defendsystemdict begindup /Private8 dict dup begin/|- {def} def/| {put} def/BlueValues [-8 0 551 561 695 705 740 773] def/OtherBlues [-273 -262] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings8 dict dup begin/space <1C60D8A8C9B8666C32> |-/exclam <1C60D8A8C9B82BC33AAA910CE11213F730DD51D5A70292B160178D629153C8A06406317A7F8DC58A481B8CEAA8BFCB17A368> |-/I <1C60D8A8C9B8622A4CF8DB7C8952A12D1AD1A9F30F> |-/J <1C60D8A8C9B7E7C1AF063E51FB35D27525EF42DE23486F1555E0FE158A6D4FE6DF688755BD488C2BDD43050E9AD0809AD788> |-/N <1C60D8A8C9B6042A96F86C03C46BDBDCC86ED49F5F4CDF37FD185A0DC37840B6360FF23FB1A53B103B855FA02D54> |-/O <1C60D8A8C9B6C5CA2272BACEB98A839FB6127FCFB7BC787865D95C1E37DA9247075AD6322E6A1781DC6813243BB5D676132C5029E74B8DDB83AC27E8D0674C2CE2089412BBDE355FCA0489E40A044051DEE9AA> |-/W <1C60D8A8C9B5E9399DBC570439CB0F34E8A23D529FEC44FCEB9396EE7B14CCBDA30B12A1E701CBAFBEDBA3A8A2553ED27CE8CF2EBE514F026443DBC167770283D6> |-/.notdef <1C60D8A8C9B7A73DC5D77C30F36B8850AA4B95FAC0129777D76744C5394A9EB088D3954A15CF2A44E3180237C80400D299541B3796F3A32366C1D716F9E06702C5C82A759782191A2E207A0DA8C6B3E5> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/MIYZHC+Poppins-Medium /Poppins-Medium findfont ct_VMDictPut/MIYZHC+Poppins-Medium*1 [32{/.notdef}rp /space /exclam 39{/.notdef}rp /I /J 3{/.notdef}rp /N /O 7{/.notdef}rp /W 168{/.notdef}rp]MIYZHC+Poppins-Medium nfMIYZHC+Poppins-Medium*1 [11.3154 0 0 -11.3154 0 0 ]msf58.249 264.59 mo(JOIN NO)sh104.619 264.59 mo(W!)[11.3037 0 ]xsh.847059 .847059 .847059 rgb
%ADOBeginSubsetFont: Montserrat-Regular Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Montserrat-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 2011 The Montserrat Project Authors \\\(https://github.com/JulietaUla/Montserrat\\\)) def/Weight (Regular) def/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 44 /comma putdup 46 /period putdup 76 /L putdup 97 /a putdup 98 /b putdup 99 /c putdup 100 /d putdup 101 /e putdup 103 /g putdup 104 /h putdup 105 /i putdup 108 /l putdup 109 /m putdup 110 /n putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 121 /y putdef/FontBBox {-823 -262 1586 1042} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-13 0 525 538 565 577 600 613 700 713 742 755] def/OtherBlues [-207 -194 -113 -100] def/BlueScale 0.037 def/BlueFuzz 0 def/StdHW [64] def/StdVW [73] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings23 dict dup begin/space <1C60D8A8C9B864C90A> |-/comma <1C60D8A8C9B89618EBEB2377D91D16555BB99A694C1AFB85EDC1232503412BA311B3A0CD981F092EB3E43F2437D3689147811D3BE5> |-/period <1C60D8A8C9B89618F2B5D11A0D8020C6D6789D505D06A4BDDDF76C76DDEC319AF39778546B50F3D1> |-/L <1C60D8A8C9B7CEAE79396CEE4CA4A06C354484027FFB6BA3D8CE2EE0998760259530C1FC73> |-/a <1C60D8A8C9B7CDD8B30C9787163E377BD6252004AB55582AF2331564BD48DCF2E42DB2D0ED352EA698E850BA80232F64601A00CA641A079F79157004676BD96B66730BBAF5E01BDB71E38EDD14D4B99AB6EC611588550D21C1FEE176A22F694BE69CE84406B83BDE4A890C7E59DB1E901CD2955A6AACA958D17203F526A6F2615DADA0C8E6233D7707DC9FE709AA83520D289B23A76E4D807D38166E45A17822> |-/b <1C60D8A8C9B65B4396CC36579768D5BE2B9485BBED0F073226B1A367A05C6EF875E30E5DEE9F898BFF45822EECD640F0353C6AD1739B3B288E696FD084E788C04CD81F745605FF259486B55D7A19AAB501C6842A84EE9B6AB721EC2BB1BA53613697227200BBC66085EF2062446BD65F769D276157460FAEF60345112F5E9B28F4F1140699329AEFDC684EEE5004F92888EF6E7688A1> |-/c <1C60D8A8C9B7E89793FE683E3003ECFAEA29870144DE0AD98E6388B5D73D921EB35E31D1A068E03545C3BF93A57E52B4DD7B51A445F1531BFC25C7E4031A75B334CE7E77F2787B7686DD8B431D2A14AFFD9ACFD29EB7049F228E> |-/d <1C60D8A8C9B65B4396CC36579768D5BE2B9485EC1200960DA32D135FE72A71C47539F0C3AC5531BA0BE39168F81052858B46839F65EC4F935A69FE890FD7EC2943DCCB92DDBF9CCBEBC62F9F46A1D5B14EB876552E1AB7689C4B236DE24CAA099B03E3EE21C2B57F7C47ACF89443CD05E8EC53695EF30F60FBDC12A36D046765C4D2FD38066436461FB58215FE4F1D4BF231C89369> |-/e <1C60D8A8C9B7DF55E951ABFB9FBB4FEA35D61F99C8E04641B790D8A0DB6E09EF43CECF53983E268A1BCD87A986C6209A09DBA0365C50E6BC10C013B6CA782FE9371F3B2FFCA45600E3B906CB2D368CEAB9E6FA9B12928897BA47209216D190EF69F44866026CADFC436DA02583F909E53FB43B1C43CA> |-/g <1C60D8A8C9B6232B142A7A4280C1854155655B91BBB83503E19751AB815B03F346AC5C341BB64705AE89CF8E135F9C1120B44EA5A04FED37A2269257907BE2560B9E0BAAFB6BF9901A1D14E837B4EACCD7C724B9C0B68B1A69264B31813D7701A4305D44D0D34E02299BA1513875DCE51BB89CC7CEC641F76F34CA4455E95212834EB330E0391BBE560939FB5DBA92F687061D45C99AE5C5679A81EC5935AF20FA49FAC2CF6FD07D84F47AE1348D17162E88FE2D51D32FDC2BF7FCFB9D6BEF9DB86133F9C489A28D1DB151A1E5280B2A3AD11325BA32D8> |-/h <1C60D8A8C9B658EF524C481D1AC2DCF7A25EBCDA4C1959E21543F745D79E292102A792BE028CE0E0B71D6B9A41781F1CE82C496CB71372E69C0658DE82F991C6586B1D3AB572FB609398CD5A131D80AFCF> |-/i <1C60D8A8C9B85FB10645229D56925DB2EF573F5BCB49F61F8D635997186E960EE821A2E046146065630D04F5E2D9147414DD54B0CB079F610ABE041B3D847060641108FFA6918BAE43E97ABBFC> |-/l <1C60D8A8C9B85FB10645229C5FFA68667F6EA467D4CB596B69F4A3DD65> |-/m <1C60D8A8C9B52BF25C98304B4309FC6A4585DD5A215660353D876468A13E0C05EEB3F61477765C199B2BE0A11B6A2E413509001195C23A30C7E43F8CE68E9D3E5E87277A1F3E48B10C797B9D1FE6001573A918364082B45CDC3CFAC9CFC76EB7F50C5DDBBC03EBE6C37BE9BA8A33CB0BEB8D469DCC72A7255328341347BD9E6A66C678136DE66C091B1389E29B0B48499690F443B03BC779B73A> |-/n <1C60D8A8C9B658EF524C481D1AC2DCE09E139D0E78EED180E3B130A1A3EFD44884A49F660A5146ACBFE0B1A0F155D2FA233D584C764CF0BB7305653A71D1E8FB1CA02D88FB933B5DDAF4F7B89653D0E220963F5C8E78957688276BF454E163793E526CFEC864F776EF7E7D0C> |-/o <1C60D8A8C9B66621CE82B94831125BA299C84F50F007387DD3BEB5F3AF3E9C4FC225B0F92506EB260E04132C269EE3447730D6198E2FF4B9A26D342A1607B8D3ACE1960FD3B275EDEF54A0A58ADCA50E6EA4B2C38A709050B699C466003730> |-/p <1C60D8A8C9B65B43EBD1F2720CA86EE1EF0A3B6CDAE55971467D05E84B1C94E22C6E1E703321E374F14E85BA69E6A433A7DCAA082979EA78870C208060AD87F0D2AC49CEFB839ED40CA402A1C8E2B0C1ADCB32905B682B0F4E5702BA4E27B67C97F6D63568795E785573D5EE61C70D96FF6EE7E22C976220FEA58444465C02C537A52585BF00081C1E790F314E47FCDFCC86C59215FB> |-/r <1C60D8A8C9B70A9A39BAD115830914C0D3C6608316CF5EAF3346081E3B3DA5ADBEEC437A6C27CDEB80D92A633A78E79EF376CA6A29C31ACA37C000759B949B22CAEFEEB4579424CAD694ECF9461A3757C538041C> |-/s <1C60D8A8C9B752AB3A27A66A287A1864B42959EA3F51C2D057A5AC996D518D06523B08B1687AEA4B8AB8F28FC11CC2C0BD9AF21E0FA9429DD7495E3BBB03881B6BCBC2651CAC1DC5EE0F058B6984FB81723221C621AC6B0179FD3A0F5446BB0ABABCEAB3081F2CA1984F4993FD7CB3AD7004D39D409A5DB39BC1> |-/t <1C60D8A8C9B70582BD5BA922DAC54AAB53FD38C64CF2E14B1880285E9FCDC5E53EC2D184E9CCCB00FBF4B237D3FBEC84FFF7CC8F523EFEEA4A64F86297218DA4BC9DEF28AF99493FD9932EFE2B> |-/u <1C60D8A8C9B654A489AF8583E1E4CC1B5AD724DE720C13929A0A86D963E54AAA832E2BA6B7EC7E8E0F2565A00B8E10B85125979AAD45B2103E620EBDE0AE79CC6182BD7F47E24A50FBDA478A0523C33D3695BD30F46C3221F8EB> |-/y <1C60D8A8C9B79D2DA46A3E65E6109C1C2A9140A7F620D15663DE59AEE5F59AF3E8193320B4639D6A92DA1A61119CE0991ACEAE5C833FC6589BFBF5D4915232D0820102C55E18D4DCEC7DB6F54022FFCFB922FE> |-/.notdef <1C60D8A8C9B7F000AD2CED2D91C8738E548389197D6E2F99BF39E6741036AD2264474D1145D8CDDD45FA26C6F5A246AC44> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/MIYZHD+Montserrat-Regular /Montserrat-Regular findfont ct_VMDictPut/MIYZHD+Montserrat-Regular*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma /.notdef /period 29{/.notdef}rp /L 20{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]MIYZHD+Montserrat-Regular nfMIYZHD+Montserrat-Regular*1 [9.89816 0 0 -9.89816 0 0 ]msf44.9355 191.59 mo(Lorem ipsum dolor sit amet, consectetuer )[5.75098 6.20606 3.84082 5.97852 10.502 2.59326 2.6626 6.71094 4.84033 6.66113 10.502 2.59326 6.71094 6.20606 2.6626 6.20606 3.96924 2.59326 4.84033 2.6626 4.01855 2.59326 5.83984 10.5215 5.97852 4.11768 2.09814 2.59326 5.48389 6.20606 6.70068 4.84033 5.97852 5.63184 3.83057 5.97852 4.01855 6.66113 5.97852 3.96924 0 ]xsh44.9355 203.467 mo(adipiscing elit sed diam nonummy nibh )[5.85986 6.71094 2.66211 6.71094 2.66309 4.83984 5.57324 2.66211 6.7207 6.79004 2.59326 5.97852 2.6626 2.6626 4.01855 2.59326 4.84033 5.97852 6.71094 2.59326 6.71094 2.6626 5.83984 10.502 2.59326 6.7207 6.20606 6.7002 6.66113 10.502 10.4033 5.36475 2.59326 6.70068 2.6626 6.71094 6.70068 0 ]xsh44.9355 215.345 mo(euismod tincidunt.)[5.97852 6.66113 2.6626 4.84033 10.522 6.20606 6.71094 2.59277 4.01855 2.66309 6.72022 5.57275 2.6626 6.71094 6.66113 6.70068 4.11768 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Pattern [/-988910224.0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 ]]
] del_res
/MIYZHD+Montserrat-Regular*1 uf/MIYZHD+Montserrat-Regular uf/Montserrat-Regular uf/MIYZHC+Poppins-Medium*1 uf/MIYZHC+Poppins-Medium uf/Poppins-Medium ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 26.3.1%%For: (ayib) ()%%Title: (UP_Business tmp_14-07.eps)%%CreationDate: 13/09/22 10.13 PM%%Canvassize: 16383%AI9_DataStream%Gb",Kk??W_oC.)/\d-\-J?@f<8\gT(>%iHu6A-r+_7#;5-R\)ps4ZA`U>AqZo8C[EH>q>JG@l&Bg<T%;/6(,-YLW&(<n)UW;X6b#%QWb3sH$C(0n4CbogqppGqc(u!"g_pJ-l&i3``M_%9l1BP8oJ[CWD,h5X(k/ToSliCQeY4Sb)^L3:0fB@NqtP3l,_+^gER082h7WX%kY9G]H*Dat4:XHY#%^hP5F4G67I/%t7<]G*;>^<8:LC<(SX/;k6`&<SG&7\Z%K$*!>A='(#0VA(]10E-1fUS-%oS"Hk0]6AGZPck%40>8dpKl6*;M)\Wk]c8$pXY$.h#olq5,4_XGC*Wjj\-O#?k`TIW+=k/Vdf+'p^plV2ZR5i*rsZ)[<K5LX4>^K=4Wu9kj_$Zc]rC_%"5)T60+*(FMIh)*B)b3@!d^(b`.CibTif7Pbc4+:A3=8IL[q4Br7jj1.WS2088"3q_--YB5[MMu)s!:>3?<8Wm@r3%j-<,!Pt5O.%W\(%Ljius-*?"S`^'*be'KDGe7qDZgX`fGtLB'Q6"W34$q3Q\h2+JQEmOPtlob'X&?H`aj0di[*+[Vf4F4jej84*mp"]7r"Hr`iG%7GLk&:J&3066KC6U`i\hWmk^aJGrqI:LK9F[J"+B[iq%3e9\i.,f@Bl[9M5G(W9:8]O8D#7GE=6pa6>4?OR-2O*2%q?1lQ67==t$%%%=<m>#htgL.$f8'd0+i:f^)7,koO/p^TDMluP+U<6Di^<L==o=%>iInsN!Brh0=K(Gk/R>LDAhSgeGo4&^"5FQdi-9O2NG#>4,l%!48q?Nf@LQk/)L4-:MHM>=NM=25$7jNq,t8[`X]pAR'N0W*I/7EZ'QnWn8@mbX^E`qDKeO[ZtQrAU:k4/u+T8.OhFPb,T&VQ%1V8%7>I]&cmm1LL1],)r:m4(R2,e$.%)FSG=DhGdQq"!8eY'3k'ktI."b3#ekcnLT/,n(=73Ka44$V=T%QqE/(7Jp^OT4R"rWfm/HsDd%%"Z620&9G2/`e-SY%NdfNiYHbk"ks$;"(i>6`Z==r_)Ke\jQ5<S>VnIY%k'D"fc>3'_JpdlciiCI5))Mn2kLcAZ4euad2e0QVm`r%G2t:T#h7CBarP`BI-L_ZG.Zo@it8e58*R%+Nq+m.^6+ueRF:LJbk8^*<&/#?(hH<UoW=]^&WQEd!)c;Ni\sQPd)ELmisVh"J$XSO%5IT91g5&#<:,DeFgALT9a^dg*6VYO]igF8mNPFH;\BI;Z&>nLh/SFq,NnQf&K#cT6BD8^7QiQ,!:iu3&%Wrm+/lT3@B\iBm9IQZR%!`paTZU]K%Z]j^H=_Nj13[TQ@D=nck+-R<RUr7u#RL=/:Kgn\dgDSbpA0AI(;a^0e63%gcRs78].8=D2Q['MC*bB3@mE!0GbX8e9%4D1*<4NF#E0e:N9hjs'U9f>m>E0J?Zbbj[=VM\?=NRXM#\GODFRuC.ZN6eh`Vk8GcN<+McRS&iLlFh6;X07H^RTI<2f0124HLGK5%CRudYFqr)t%fqL[mhnX;hZ3dU]%f?6%1Mf#``8T6PT(c!:rWt(?HU%d:gSls#JT7TmG7q!^qhZC>=Cr@$\22UA2K:n(JZ@cLq<_4%+11-)X8VOL!T^go<Qk"l[5Db%mr(RQ"!kjYqI1mpgf5EW'IT,c).<,n;l54G+X?a?JU]'^V.-=!F?m)8c%NAM@&s;W]gj@pApI@c%!t=M`lrWpfmG)9o44R.5l8d:rGL4Y`0FO#'^`E*qS`8HsB*bti1j.I.lTM3%1@CR[,mZ*\e,Lo"eFEK]pp-&d`gUZ-*4R(i!8l$V%Bt<&,$*=]%'hq8^S+%^&C:m&$>uMe0agN6<^Xd`rP`FJ,<D1J'f13ENX`r%$m(]'`+`)=dZX4i:=__^r78-?S[%[J`3`jjl<NY;I%#q,Zhs,+rHUQ#rb5ju2f+.iC6U'9=(JR2*C8SD>j1Oe`,c.CB5<<a`TCQ@eZ?San?c1^MuiX?LQ0R]b2r\.qe$CA#P.Caoq(,J+L%5`Yr3'$sZmRBrOVT_W]V^=ScVK7W<<VPoulPHS#J*<=mU2hq/iEXu]a'AN]F-Sho1X&;nn)-hmGLgU=Q"'0L.CtKdWf'o]q5'#5M%cCX+2K)(X.o$"0hLP21gc`aNn`Di[HP6*g:dXXNiO]oK_p#I`Epdb0Z8e>#_hd8[68>uq%IdSf.:\`7ATtj<KNmI;c^;QB6$=DiZ%Hp\GJ;36I$:]Ndc&h64JW!a&s(BmYM,r$q4`4T1d94D$TF(.S>MD_Xk2T,f%l[gBSP*D5PE93nt>XbUp=';Oo<N-1(?#!pGXFMrY%$UqC)j9'o_%p+>*(:0iR).+,gWnA:qFgr@C7ZPdq=?-uDNh8Ueq-3s',$ZG(b.1-I$<I\>HENCn\NHK#nmWZUJHg/jI(k[qk"GMj%^65\]lhO!N1m(,5:b#EPoqD`b'T86>:s,*pV.ut>3#9ZuEigNcEg:+1<bZMQZ'qd1X-IE?nB':>[;)g@([APWZ!OTb)F?f+j;Q!,%V,;"^rGdBIh?+(K)s'PC8$D$cm1oY9]*-/#dS%GYQ<o)]--'!mpd5YMd8e+dM-ab@Oh\3h'tm]=HPO<IkW?Ftn5?#GfO$/k2tUFs%mkss%?:e^/`Fa02INu(!Y6_]`r\*2Z5R%1#nUD=L.08]HTZr\G_-L%o=#omSop"FM<%c%;Tpu>h6iReu(X%1DOg>%[d5U]%%UKN>%\d2)3dIU0pWYh2`TFCq2SthC4!Mt+=;3`hT'_#,(U;'l+J.&4[cuBQqkA9U4Hkj.p!IlN7<N)2H<N_TA$.Qr*">_0%ce!_9i@<do%Y_#?FE7O7HHD:Ks(LJj.d9LDHi@4gNU8nDufc\C%JfFB$oEsma&\86:(Z<F<lrag)!0qj4UPJ]SKFuNr2b:>;^8aFhA`tr"NDd08%$<H[^6.b:N"UJ,BdXXjX!-+Ae6qR^g4LdLq8fdc=">`1G1S0A^JjG%RJGomp!M]XD+;M6P%ic*d"`tJe(cVY6Tn]a+^.RUG633HN%*nUe]I0C4M$bCS1$0J;Y$XEK3\N&M9kc3&=:K$+KKEQb5+L$b,itCkc9V'Mh.u-OsJf0CQ+u$$9+e_crJGOLA3O6Gpo2Kmt6$?AY%_^R[/fK^V_#n/(1OJ!^_!Xf8D,XX1g!-(iT63&`i`;"Dhlk,_j@eMDS=%>@nEHKFN!B^t*56h9f!qq@n3Y,^I'lt?':C3n>($6$6%&j\#/@,Qqsr.mUQ5RItY!Wr?[Y7dEeF@);`<Ih"<n@Zi9(G`Z0'8>`!+-o>\/HVXa+;1=_J-:u?qC;Vm'I]q_ht#ED:#7Q-jY7LD%$b?t7!1k]@R)<KcW/,(Y%]5'co3H&!0NIBl/'qfUj2k1!@`$Rt\;*oD@?T/V2*,GDLs9m`mUSV<M85d/4G.CaYUV>Z8h^ds/BVFf%B$@(ijk(lC"lj;c3$Vn=29KSERmg"/8(jqNcF,3EFr<?SLc[?sE`Rd@,dXZar"%&e1@E6cLSl5^HpWt9?!2e'XjGa%J3M-7\VB5a%RRqWEJL[6L,p8$G&4R._^'*G&aRcqH#;f?]b,GC>P[KR[TKM:#NKA[rKH(M]V[eql"`[EE-):g[T*H:Y![W_sXmf3jZkqXX5c/*8%etQ.%J8TG$_am&3K#E9S<!TG+K'4d2g(4WWm5^hc#rF"qj:P#eBi"sF%A\\;$-\VRbSUZKN?I_<K7g];@tB:Lbci;N%l!=BBhSSq%5u=!.?k\o)@'!!<F)hjJ1B)=hb0gZs6P9VE,N?ul(QY_(K3i\J;*fo$.b&P#.c[R_01t_)%HDDoP)K68h%"4:W1-62e`=Re"mL1)%WoL-LY:@79*7\>N6<M*+O^;RI(`8BYN'@VU,/&f@M4#1cK1N.+^2!;?ieo9[&lo+=ieiJY>_Js:ksZ/82E9J+q%N!=i!ZkdU_i'l%NisA7Wq\@A1ou%[-%$Ff&^))cSH>Z1E^@0;K##[($&>t\kT!A&dZ?.OI$H,+/n;Ui0&YS+B&GP``0'bS/lMt957q6*/(0d(&/)Pt%6B9.,&dO(q_Q4hb6m&Pj$S+Ot!Q[]/'nQL$_>#7G8;7VJNF`=*$M5P@6b81t*U1Qn]grs'%W>1]KNo>tNfFbJ,G[ZjP7DJ]=tW6Y%]atRKN3/HS(/e.IbohA1c='>^<(09m1iGcsiXdmnlS*JPP^j.+S-a1F68tjW9!=[l"9Ag>;[[daNT5R*OATO\`B6&/.bO@oZNj\s%=]73kCSu_`%jE+e^d(Q.81VJRl_#SVPiRpn"NF:=k$%mF>Qo:Ua4_aK,DmaY(?TrEbKM`GnLBfm!Xo+XUN=5&$<Y&4RWbf<#NLMo%0$/*iN_?#]-9Wp"lLgV3ErC!dcUO$H]dd+cQDq`7^T\j#8lcEp`[mF9kRp2##!c%X:/EI\In4BOo\ufT(bLg/M.8/1)TNT4#,!<P%.6F\qlRFruK&b#.09.eJlcM7@a`30?95n-((WM!RH$."2-jCf\(J6(U+:INfRmeF)cqY'7!)kH0d0B]$.A:,MM9cop@S0<#WB:Mk%J8.qeBACA[7-^f9*/[OBGmR^Y<EKC\<5^L!@(Ph2oNW.K>62]8Qqp>bFKm)0J;de8D&iTY'cfF<ge/p/+R)5$`/=m3r3Z,FDf7Pr%PL*X4B):*f%iVKI:%WS.M)M9cmpV_1b`'Y!:?'h"D="Uk@%UF8q^f]uTB,ic9GIG"P_g;#ILdqtVTgAhWF=G40iU))/[DZ]Ni;n2%R&ZXX3gm!U3Z"=O$L16i1OZm`a$b$,,c`;d+$&,==[shX>t@$'0FMZn8SAupaNbs;+L5C:\KZ%/&[2j\Ghn=:O?"K[*;7;3l#^l?%'&o7Y:qp8#HKXc;jQM!_rqT:?7Y@`#VGkfi@7FYq"_6+X>gkrV';*8RWY`I<<2g+o0NX+:f7M+PWtpW4hRBR\4Y9lcQ>ft:Ze;u%%S)j_hD&'<Zb\77I/'h[kEWNe?YogQ7?.BC^#L5d)Y,U?N.*cO;Rp_c2;R8"=,]umkk6-!'J!2P<Po2.I9;#Nd\XuAif-0klpf+WD%I@L'gimX[$$kf1eZ-A?23#Ks\b#1@#a2*"*Pst7D=X;$KTZLCf->t&d!_lLhc_("//(iGq3-u=G!^IgI.pZ:?6Z^nF<Q)5NK\*!!%`_;)s.UX]Wbl')aY;s1A795Jjg(NZo^<1NLECj2AZIjRo<b7.gi!a_,!4b2=+*)cfTMtZ$"+*DVRLNE/&[70M>E_$_LDu.1H+JB%%^hYmm[>=j@fY*1Ab@D%e?^9>5*VgoKNZq0j3[Y2b"GR(`VlaB/$M'LITS&>M?,Y$IP#MVL`FBtmniE$)g1lU^_8_@I(9aML3UC$)%@kXHa+Vjm#7,(=K%P,Z@H>3a:b7e3a0GOqu[u7=VOG.JUCsD"CaO5e.1A3[bCs*:lg+@H(7kUGc??7M>(J\#(M[^u*PWH5]ZIge.%@%0C]FHJFg=ooO4e%97<p+3D=c(F0<jUi#:(;#5GlkUAAmgB]eY^a/Kh.&>/-a$ocEQ)%=^cpd&osa%fml6+$a'%\u'<rVsrBZKa%`$E-"%==A@fX"hfWJd'WB^(%Hhnr!R%c.9[ll&&n_jfuaiu/tDm(9*3>K^S^5g0%ZYL`3k)ZEk\qpu:tXPo="S?[eneoJTqmT7<r%8mSS`6Xh,K@lWg=eOf'*8G2-i*@W_p1q9bYNT`5/9-K\$Bnk6734pA6V@-:N92[W^=.3/9l#WY6&Ts#M,8;gf[sfX\ng9hRY#cj\%!?9'K+9^]-*4@<;7K2Lk*L7u7,"j2'jT6#@L4cYs+PJ%j4!dR/=Wf+68>ll+;oCI-/`5(I<%R#X-c4Z=!>ku&@g%EoNPPEF*&-L%%<%jY46=`C'=:MR>"_F\3jl=Lh<B;TLL;Vnfp)@mu_o6Qhp'ndNiR9`uq3EZUHgs,U`&IYhL?IF_g)L%f\f!h&i355]*NjB#(?G1K%fBDc;>tgtR[]rR.m;k+!aG:hYk);N7]rGJ[&^a])$qEE!KR.t27Yo4jiSrN5a95)IF#"3S=lRiHq5dC@PXn&]>(FI&W^*:>HQe<I%FQi'(?a=eQEU*X-Y_`>^cKF/=R"qZ!WY:&5:-]Zc=C4A'$:QWk&@t<'bFFV>0S,\4ZO:ffG!U!Ll5,:_+:p_?`0.0QK<.lXP(;'o%#pr.`lb#[!S<%dJ)ZFYO/_A?g-*#PU<Fl[+YkI9*]P(lTNG-&Vn]WbYVZf1cb1(uGpXKq6Q:S/&B.8a<?).KFLgq:\+c%l&EGu1\%du<2rUrI#GW`F,<C+(9ZWbS''Wu8/UL.[,bf]cu37<ZqSic:pL?"\FU8)d2IR@u%V=90XM^k`d\+pO!n!?<s^op740>n"-[:fo1m%Yd.eS.QN+p`<gpJe.=Th(#^KZF!ul-DiAt4pRTq3($nkdcKj`-rgiXAC%E`e]Ope]m5qHA%PJl(KF:cXV,?h@!&BHQ2+?l3+YiO5%3hAg[;jU5/FP1%ZQG^P#f'9*jVK&eIQ<fMo&g$:VZ4lnsXCKsO5UntOXe15OU^hR7C<Mn.%aES-f+Ka-5ZsPlcj2_6RuE:[YQErk%eQRq7HP-M:PDElb%pd$n;(DiS_Vo:K'1u`*6NZd@"u5'eASd9iZ&M\U6*)o)eP(ZNdNOEram_%HZ&qtZ6*:r3k&?[gO>I8+k[q,R%OY@s+.+fLcKE>_EKKW?a=W$B:4@eXgcj7/hfYpb,mZnK_(@'s:Qb*\s?^<bM#k;:(ii'2eNr+hq=a^dl)[IaP+PSYX\>`D6QtTA3%TrBfEWYu5+Y(>+K!+@%O.?E*$MqA2bBW?W9E!:(1+c7aXMF)b+6r,'>5DsqA7A(sfIAq5=qo`Kq06RheOWn:6_uC0^LXsQa@G`03%7jT'VQDJS43GOeA:PMp\Nua"hVdoeNApg!]@n+mPWoe(#ZZl'!0J$==`#4?lJ7&kqLh-Z!YLYXF*1E!QA&P/(BM9>$9?VB54O".0%o=c16MC%#(M$dH3*QJG#K3pWbUMRZ2bX,l7J;+<3Cd)1DUhSUQs&BsRLZ@?P'H\7f(>gPlnD8jWf5_fHYi=f[o&a,(o36=skaIuf%h5t3lGr)f5>6LdJeSO\Vqr"Ck@`2:cnWe5q=i%A/p4&gZ=KdI*6Tr#h0Bcc]^)A4];oB/RM1-5aJ)f.^/VFcdF"fUGY\(jbEHL<s%-X(nf?u^'>DH4l\b"X(Y_QI*_UH)A-K>fjcB^p(o`Ar.L\2@1(=;dlFN0c8.FNisI)<5=fS2#23oJgYrO9'1E>V.^eL3),e7q3g(%Yp?)YN2JD)H&`@a*EI5haj:rYCCIC$_!Z.P1<O/Qkee6PA$CsO2?oZ[\M<<fYg\.^LRnu>7s/U"!"9JoLqk,8K+LZ;@Yh9#65MqH%jU]XAq]P2G"ZfQD=J=+t`iF\-#K`>Jku(u^Ar%=78(JfB&YrpXiF+PIZAb,,a^>m'@K7:m/;[?'UFKYeLl?0+bh44DG@ceHfG.,A%4:1[.6S2a"-^Z&>`fM-l?85aR76L3]EMgK6CQa4((U=;a1iO3L+U*K8asHUK8:kC+&@);Qi(Vi9YR*h`"&Xk?,8KM00@<H5.u2:j%(Qugm8Z'Rm*%jQ:LiTNhKb@!PG"Tp26Ac[<<=9C7J`^#n3Ch?63=<;:1<U(U0pkGHP@7?J=!<HC*<L9i\ti?4nHosH:Ft!F?"e:7%,0O^IX(qcBj/AB/\md,p%c5-$I8i&Tdd2pmlsa$#b7Y*(ZE^M]<M%C,9bTd;U_ciMXNZT[Bh$iOBks]/-q$H`P,K!>&C$*A!E[0S%2&0&(/()=j!X7*S1i'8*ns%=l$NXK7AWl8AL.B)G9CVO"\31.DG<?o/'1NcN53KDFj&t0RJ;,U:N"l0-fp<_`ccL'tj\6Dji\Jq-%dnD9$6`kr62.W[(1#OBD:6=6r3Pf_gLcC_hW(Y>9cO$6X6oU3&0HG\lW0=M=lD/=9imN5>XLV/AJ5iC[d5;kB">17a,k<4!7\1I4%;=J6@&ca6,?Y9M)Pau2#J54Bklgj;!>o-fX!lZ6n)g[n7@J\qdKKNGU6#Iq-EVB_8H4Bou=mJBfWXm"5/V20*]N/L@<5=<@r"a7a%(R1&&aD7&._-V@,$GB*r"7fc0r;stc<oI0;Vh1Q8WSlrf1Ahc,ajkJu&@[:s:I?-q%$Bu'OJdP]1(>-7M"`?VrD*U`Uoi99L$ZO+%!qdHk4A^cn`U7*4\\'F*[F'iof^;Tk9Q1(9h@Kq3ee<?*8pi$uF8LeD(4HI.!Z$b47Dk<c,;DQgbVTo)%*;bq2LIVU)GjlgU(L`C%E=IFtilke9SsoL"KeR9un!u?u0shgNW'[UrLLH-q%i8sa]2Jkb6at9@->+(I,&OheD*lCF9mE0>3FT3\jb1eX)1mjSRB4\1+?P6O%(bq7uGjH!pXYBpX/Cit?p/ojEisgntc^>]aBE;hRaXZGM(ku$[qGOUlLpn@(#kOWEAtj/(D7Z</`M=EL8+eC$4u8]!kHJ)`jcA\U%k2Sns!-bGS3E%LCr7!L%Q&VOm;10l[R0cl)kU;o2](I2DP2WRZ;8jC3h^SNOMG&NH@H!D'J>%NXTFT!4)Fh=e3+WS&Moh<C4@h$\%M!rI9R!;=j/7sHiU+1[",=FiH5p><>-snN:EMQ/9`"t`SbeIrp.nCosgeSNL:jlj<!@9rnTO_822D`FV(g=lEX,a<Sa;,gcdkt5d%A[56i!(gg!8f+J*0m8d2;+E(k,(ruMRR+O)*[+!,)-$^M<SFp\Z7=lTcl/00ZjB*Ks+W[987l1\Bibea4ZQhCPr8gl'_6L4m^++2%W%@QA<*h]_@/L?kNPaU%mLT:*BOWi^<"O-FE5?J@#2Kf]KQQ6R\jN'+%N9]Vg%.5*hafP4>0IaS`]FBtN*ic;_V5WO'IZXV^[Tj'%q"Pm/If`BE_plp_T5'KY:.]G/B,=]icMCHE[bl?-NAob^AU<j<.;OQ>)fN/9CVNadfHAC;<4.on0(2Y*m`:-5G87[ah!R>b?0grS%nWp"enA$CKj3!G)8.)$<iaeU38AYFc4AWijdNr3JjTYP_#6ph3+@NN7/(jrF2\>1dA0:`sb!^V9.`n211*A6Z2`;5)1>8FM@q/S+%]1irdq1(53oL=`!JW-Fu\uL!nl75af]\-*Jf&2Cqb%jmqH*?s0m^-1KWQ[f7h,IV$f`5jum<Ru]*_h3/l.t!R@Qn't[@X+TB8*To%k/l(M.^KA#b?]:pf1$_YIN6K^:$u.o5`!o!<(Cdhs(q!npeVRT:LS\_FgHM)_GZo@6CbpP(]t?D=m#dDpN53,\&6IOnLP];9i;8a%#)YA-gt4TK27]d:RN3.<f5H"X=73IWMKT,MgqS#9/!<Ng%k9DN!m@[u*-P-.!T'!naW&^'+Cn,IWb$6?&gLE#jY<7cOZA)j),2k[%K8l,?@7?Juc[_E.RK(s)nP32^n]f6*NB;U(fq01F?&#Y[R+tS3o?\-ZbVHP&)m:fhKjnrB/#U%#at$g@YB4N1#-6_c)44:Xn$fPY%_F_$m#*'C]a$hf/.>s\$\1*>/,)a)&B1Q/tnK,Re]ug"VFB@#lYIanEH1sW#7;C&7`8l3Df'_Cc-lP,ba=89Jh4rt+Ip:<'8foGl%K=c<qY+_i7,g6FC:CjKn8'^@X78MI+]!$\OGlg&Pm+aQ;k&[s!!h$$.)q1YD=%Y'JUoln$Fn=6)qHWeu0EP$fSR(Y?g?<&j/n9>5%!m"Ue*ZP24_T1aCr1fTBs64]Qn9#bboI*^C1hXQ2'532?$ad,)2[@)'klMH3nh54Ab5"lG+*NlTdq=F5/dOA;qou$^Vkkhec8^N`%*DB?5$[Bhs7XRmc`JHls.g.,l[I8kQ"]I>70Pe%(eJi[mJNNfqKpZfm'8;SiHm`D"TKQsPTaA\q=\h2ucQii`#9$>G2+8U1"u/Y(%;2?+:4)mUMj>G9b>VLGP0qnlh0UF3;>Y(rM'jbsd6@:2?NfT#g/159.,+(W9W=FRKluTS<BJKj#7[29)57'ZtJpts%7Z@,4WC'M8%G0!6QM*e?#Mjul68b\&kDG4=\nGGVIHK<1I47,$+,l6Nd7-UVCm!?':I"!ms?7J.ed!#,.U6'KTj$Ya+:eSkUCY8XVn=/!d^FV,p%..>uW48gQ&:.Q'G#]M.@b^)dbL*TC?aOHH0eE56`r83llpdf,0F/38X@"QI1,">ru;(,.u^t5TH:XTMBQ<9R/J;GS`W=:hp!N.h`%Jl%oiJ?RDZ(rlhSQ3'(S!S&IJJ33<uf@t>LdM`#p@>HL"@]A/WOglZ'jc6;ii(9Fe["tI7[/F/cj[Ye06bGaleqlXC$f^s?6!"mp%2#22``RmS"L"A2G'#tm&;lI[8R3ZS-ZojdKMcH>r%$A&kK<r;?*-Pl[!8.VXrL]86-Yg7P3++\OrWj$D-1:FGM6onc?$PS&Q+Y]P%5&%P)EoZ^D.kY;jE;=_KcAG_U;MXLd4H([OQ')e^1k5=TpA1N4To=91WHM6Xj6'@:QhQ!4FT1QMeq`mkp)l;ZZ_ks*BX/hfS-ZWd%UGB1T:LEK<4a+kRZ7toYiK%PMmHF_@*QphpBd*#uXfMB-r18&A.(KhBl)IVOWK1K$kV)**SbCu0DFZGV=2kr;8S[9@"BfLNT"<&e%@;E#qrGo1aWTOPJO1!E"-q"X!/juL:WR<q&*^j+u6Ga<(E.d<Z!0^#Y6;.u;W+_7l6h0Ei3;T(Oq9@,C'=uO&>H.J""soB=eYM3!%ra]P>2IXE8'8W_^)G7`+<QsbM@`#>e/`<S%r(oFe:NB,,q:DF6,]7:%GMplBWqE"6Nr$iLs2k!:,g1DoDuReaQ<Wa:S?Ttq$!GDB%FE[Mdg=Ji??5BU#m>b9PH9,3`>o:Ate&MDKmZsr%OstU%*NWXjSsCpRS+<r$/\q$C=a%os+ZkNIAt3S-XC:YEHfhQ`oiE3d3o(h7%2=1m8XOs`@mJs?T/n'(B"SW*k(1s/O!Cda/$'S+oaOt)5&!=1QUf4CtpH*CokpjB_U"iGJLl04`+sI@,_%51.Llt5=hXI6=im^a>%NHnN?4\!YBZ>e4iK&(oVTB'<Sl's1CV9/.r.OPQZ0+tDkcI%_99b`as,\"d$G#[j*L-gjB]h(/N\dZ(o^fZIA@?Y8gO6cO3(B5=D%.OAk8]M]%<^hU4pa%u9*Pinh"pm<J2%3/l_]g&iWL`H]1fBu,2jSVlP/%8^L62Lm;j4+i[ga%b8//2=lTW-aK)*LXnG9Sh>?_tLH%JaN$]TL27PR8jAkqd6sM#j<nM4"G5Pc6Wi;%(Jf7)9<_;=Ae7Zr$to0R0^;^6+bTSG/c&T^WGJR"F;Fb1-49+(`ao1F&r$uKp<Y\%-Z3=l2@ig=Gk'lj];N`lMNPA%E/g;`n-B-BQL2])F4L;:!1h4/dCh1#P9onA[@IqBEK"<f-#6b54F6PlKhI`738GC2%SJT\j"_(5%8`[+7'/ic_'IM;5RD1e!-=JtC:#fhfq-C9AQN'S_.uklgP9upAOL3-(]P6:4*L:4fKT-p1P;Fa.,B2cuRek.#Z1.m.P,2bd")"K^%1Xj.-s0]BO:VnI%>rnkG-Y^5@%&oJmELCq,N%b^2Gu]08ZE2Yt\O=<seehX9=lV8C,+@r^(P;mr:Y:>_q+-b>[gYaSQDOW1K9=*3%6,jFHR;=S$Iss%>+^lcn:T7o11s[I`gd^$UZDspq9(E$Na4N.&Be3`)A`RbGaO<;n?I`0]Z*s0pQHtY4'<h0\,n$oZ@Cj-F<f]X$%L/7X"PeTrg>9IDN6m7`srg'W,RI[i*nM`m8U\mJXp6H9`Q7QV/O0Z5U,29*j2W\gTmZn^>VTRY(\Qc@#jHXeq<t_Ph652_k69J^G%&cA6R@it!JAG+5i&g_W4'bWq^8Xi,ilCD!>M3>X(Q_sBiGu/#-YGg8m.1bfPjDjD`o>jK:%B!,#(N3mYhq^+^8/OD:?*jIl;HJjH%Ggfs)-G^fO[;2)b8,HmE$F`UpRRK&ae#;Vn5J:XZaOqt.9%XjRP`UN!4pCtUn/:(AiC5:o3):2aN1f4,S`DtH$Hc_#>\W2PBHl+X%aYNG,a@<//h7fmZg*<eV,r?'aNe\4-,_S%ZmLkZC[1(B9&M]WDU);s,>B`[\e!on3)dc-:0&^=X6P>Z=ES5rF[0KK5AWSTp2`?"R%XGl`8H-[(<6C*N\;2?@!?&1ne^EbY`(kM'@KU"29$kX"+G`DbXWMCiY'W'93mti?<-WYsL1WB#OPW['p:4(Fg8*QOcjBm*;UE5Ih%K$i1bSV+eWElhdS2@QJKcbIj1R]\kNf:Su,cXWY)?%;R?9@NRsf<tVUQ_3"(\$&#+*=f2:Mu72XoXX4TF&IG`dl$=,&(,LDfm,'`%_o#;P%aY\dJB$*IS(`$agFap'NGI9C:ZS)#G#R.5C>6_6m5e2_=Dsq_+VKLkj:&\.8uJH`gjITcV7-alWj2pT]D\[Grb/>QA[&-_%X\DfZHVphtYJKe1[=Lj@"paLAXSreP9Be\L0m)o4ZA`fCpoZXPDnA)Ah[6fZ/@8+7-_8L"bKt/>1F5m]1[YjbM)1)\2tE.l4?c9o%&h'eq&+d\?)7nkE_22V@g$OrVM*f[NLW=.[R<KG,d'[BnU'#k205@FKJ7T`+[q'@LmmJ:aSoWC`R\69g;eK'ojIA9+VTu->1MZ36%RQ@4@cD[]ul;%lJ`10]SogG<Ie2)f,;H%5XT@1!3:#A]&,(JD;SU/jb;pSW4YNXL"8m;)GhsXhia]AS=+Alg+4).7SAdHM%B/m,j%;lBUj+4Nr,LLS+SoO-X=AR)]YZC%a1MuRr-rbH$@dffT`D-r=!;W)YDN_Xq?,.F=,r@;@dM-QdFm`H-a`fmsLOrLD#hR4C16Y,h+%3>.(fkhC,'COJ;<[N'e!#Yim[N%78ZX0PI]kUTQmVBRj:%"#Rl<ROER]!Kq?j`bO4R4QLPmV;F+G.!4cT7;5_Ge0r@ZR>_dl^Vk9%OSm)Yj=Vpl;&WjnK4H^:0t&hsIX'5),f^V<RR8RE#&sf@BdJi4rr2DG<eP'oif^C,3YC!s6l=7h:)Y=kVA@N#Z@ES5HXa2*r`+T7%oVJglM4/5op$>7fWBV',lgiP]9994D3#-:F`.^VG-OQ]L&be=#WMpJBi_iGa,%DI0#t&6<`(c6$OL[D0ihf0b9?04Fm.mC!K#B;f%W_X)fSL"0?h."]9bU*`E$G>8bid\hpB%8E_Kj:nfcD+O\E>g*<XiS,Qc)N$8DH*@[Uh%)%cA1-PYbUib2W:'AfehNj$)@6`[VU9:%e1PMB@6.Pj]``F)3WkWbR:I=YJ,jfH`6?\E](a]rn#>R.;q&FXipAmO0C)4t;dP3OfgKM>IsUF[a]dF%@&?,6d,a=SmMr4nK]UdR%2;7Qb%D0X\m18?Pf7\!M@>EaRACMYWT?c13B%2.l)1Eo0#Wg?%#Y=Z3QY*N3<W@3-)!iQR)Q!mt&JpV!#n'5l/0cn<#+%$\M[ZY*%45!t.,49P/R(mPqR&%ur#q^c,8"J[V0'.YSZukV8*ej;8gp"QB[MU^Xo,93=A;+_k%>u&KR4-!#Bj1!4[k4J'lr9$?\/q,!rpW!+%fm(=mI)7(/-4l-"1mFlR3/f%6=i3.$.#t.chaM?>oP26_&iMAk@%8KFJUdD$;mLGHVfq!6eak,%#:>?UVe4l:%%Nc;;_rB-##<FY%W>Xo4"t%N14#I,j,aa/3/LcjT5bI["d#gYf&iW?fL,?aO)p,CBVAj?aN[4A6ItJ2B[\,D&h&g8<dlefQ0HtKW4H5B$1/_NNR9B*@%3"OqSbgFdo6c`%>pr.V=m/s(@Emj?pI7J0=Dl1TOC0tke#JW0[ju]E\rH1<Qs+69Hl4m&RH;j"r/)Z;[X*$J[(o3T_Pi?;heB%HY%#P:.M5NT>Q[INe:#OJVd5I5%B8g!hUpk0r;G]Wq^"#.[HD)5=/Tf2D2Gffuo]0l;b$n5>>A/"f203lKE*g1bcnC4S%ki)(%.hF,0%C(GB0ed7`mX?8I%;=%,q\^$l)Ql,gM9%jbFDD_9#K[-#AZcST90m(5"Z@dqdKA9Gci0Gp6iC"fSmWV.H[@Jds^HqZg'Tl(3^T$YA%Y59O<]^*=>s8,T*'7ZRoFWa3;:Apg!g/HXHhINlm0,FOh^1tpLMo:*l_;M`+rFu3)hmPq7<!nS4BZ"2t)iV\n'/_?$1581XdDfc*%ZIU'ZFd8b>1,Ln1GYM&1cOo[Y<pY%)&4'^9&;eK9:+@HN#8("6O>''bgu(1ZM,("TNPM-Cd(`>/-<F]HMU>KnL/SDI3.=$%"AK^W%UJ&seO]G]n3^$CsEXRK6-.[/Pb4o0F-c#k$r&),(K0%fgkr!=.Pct=`kmg7CaKa$r7+cLSm":Ptm;U*b*rZ>;)lFYqb#!mKB/Adg%^<;%"!Z6;9-F!Z'kgA>uM;Sui;^e?0cg*X-!&2UT'MgBs:Za<e6J4UX(?>0/2b$B?75g8;;Ncg$GHOZL'_ttqdW)R@*+R9m`8]mL%;TtVMX=%d1NNjGCHEp5)f\:EDF_d6J+Z*cUPI@1J\EfCdkAo%5^t3!e`AZKN7d\sU,a+GX5,PWI=RJ*[rEDhF=h8*Vi)oEAr.K,c%mcb73DV*:UYh)!3n@Xe?NuQ17$"LDmmPkX:AK44$QqGqeMZ\TVS%f!/m7`?gai'JtV"dopn/@5?.T:@\1q<prR(<0E-1qU%K19'<%f#WoOU])Q_d9l,u+n#5/6ZMYe.$L'L1Nf2"'"0`&XPu'oFTR,W$"coHj.)uKC`<n,\^O,LY?23[Z98li"KPeEcDR)G$!'VbBmP@G%j#WlqY^mb\%'*1(g3V90K]sJO+(1AD@:;:8C8&9fn9=P3b<3oSrKK[ag`<B-'>O_=@^JmZXsf@uT)Ak;e44_?jN^>0#d;9n%`0p/%e9`KAd>%Krl;6ojO,B5aelms>&q2K&DH>joVu9.cD-HL8<BD(C*B'O;DJ*!JB`\].mf6q9-j;j?TEg%V6DEhbCeEW2r/WImK[rj3%lk6j-ecodN"9>"9I-@OoHh[smk]0JdV8UYF9e7^5s#r9s!S&4l'dM^!CNoXr`@/m,N]AU0&7&?mB13#2rIQ^"nDQJ,oFl19*N!^l%q,@`N^,j4:Y?G08kG80PR:iDmJ0U=S/mn1'e`"\]"?:+hOI(2@"Wt[a+;E0-.@64uW&2g.Ke0kQZNWNoo(hde^s>7>C?cop?bBpe%_+.<;F*XI4JBA4E+cG:'Aoi>XLCaH=o&t]+^QaWF6/lt)UA3ICs%k<9>Wc8jS__1S1-i)),m70rQd(F66o82jQ?X!mSs9GXnCmp`%p3BC!*#J>@T6<KC^^GXZJ7c#1"U)Sc,i<Y8#qA`5!Y'H&*s+#]MdUnmZE:V)41IUq%;,dRq&H/aMQF:Vp;]&`=^ced`&B`t)L]uO%nH!cTE2k`pi05fU<4Ee4!N>_A4_)\%"+lE(!Pu[8i_mt.apja>Yi)39OgT`N\d8!HSJ?kt4B2ERRTdGPQ22#fGMFCJ))Yj]HQ8O3%.eh<3b83;e\Q^Ljd]KqZoN*/sY3/C&=Wu-YWq$GA<[tP<0k"JVQE&YS%GLuN5-`WN;IQDsoNDpnkR=W<l;GXi[!KW95+jtq3A+81%7qiGF%)Fau]KLcU_K:6^b\q)srsqn:6(H6^ABa.Uj^L9?VmCXuQs]Su^4BYQ@:sNuf2RF.9c(UB_00"5#9s7P2n9Qn7u!+mj\&`m%^_Od-2L@h8QS7;.\SN^lmcn^a@"T:IBZhBU[&Hj^N\VG"(n["=^n:gBR=L9f@_RXLT/9Yh3=1*^'scM%JV(CZEsg7Z!tC%Uh6,\M%\GDP5s3@/l\W_mWLs]NKX8W+!Z]C$@4P<l@#CHC$-r'qs-b%BMFmmijWoj?74@d[=""L2ceC<Wb$hLqV%qKS:/n986,!t2RhQ;Jn%QoCq#gqf5VZjr=U_56*YF5K)]qmLi3j5*O$]pCgY8q5L@Bl'XCa]%7m[lnN<i8A+AD+r4F=`nYdR&_[W]nabTbcdhcs8G*4rr2@L%']-c(Dl/ho[o4(ZHaV?.jd3GK(Q.NI.@V*2?otQM;GJEtSZ'nVVb6,W4[%BMctcH3[=!RX"Q3.)=!0@R$e][:i,q.';84AG(4.!9%D8"hhIiZ\c1V&VQ1EL.@?@p:P*"c5p\@'do8'slnZmi90.OfX??C,^ZANe4$8F**'?W_5YV*_N-ht)_i[<[4p)t$^/CS@mR26704%Wqh%&)-)e]/Jt7+;Ecsf+d-M72]=bV3_FIdZqT92"mD2UqStd9\-*j'BAZ]H[9qK!R:n9r9J%VHoZ^X!dW's+)itG7+'lB,Kt)o/%Uu['!Wsn&)9WIU`#[=#4!T8a7[8G#oR=Z5jr\tI=*/=K)0*EgBGkk(lML[Dp>e"V61(s58?2orjQ5Ltr`98(ej$tAfbDSO^%YdU5%$n,kC3Gc[s2[k=mK6KTM/N2[Y6[bVNPDYsl>;/'t8-L]O5d#d`8+kD\)m9taam1?:(1'o&W6Js$C985np!d;E0Dn,k%-W0g'uZIj%8`g/7S`I^pJ,&i[,bX".2ua6TLCk^"@Q://OZ5?e2?TGciQUK[FI!^PSN7qTDT+KDd5#1#_QbR*V0".jasINK1UbECTHZ+rm)*A-%oT((T^S9*f$Uld%8GRq4o?.Z8HZ];q'QQ8PG&RS-VEpX^XLnfa7,!63HKE"eEY<"O^tUs_Qk]-i;54"jhD;f\<Oqikf$E(M\d>gX%-O?[b:!j^CLQX]"rY_NsXnG#oDg0n;QT#&62>q]kTFUju"1e.cPTQ1?M:s'F8bk]uH@SdSF9$!NVe@MRed%)@r^1B0<%W5GG@\@Y%RN!=F,CKYLonT:7O^CrrJ"YJ/pJXd$RBHRc2!#=\;%N"ndjGHG1?c5,%HhVoFWE#>dtq^6iso7\BHbkUG^?43T8)2!e6]<^:$qUO%4"(":R@kV'$g+AgfVR(-!a-QmWJeHYSiZ;9O9`%j.:tV#oOUl6;FR9)\D;6SMMBCu5^o[QXkgQ5:=<HQItF)BMie@(&e>^fZV2+(%^lTrI4*MEn;N**Ne\:ErK73l[j)kr-E+]8uTS,P[kbtKss"U!I'9?7jXm$%=3C'\p$2H"IYf@S>>u`qVqEG'.$:T0>B1c+i;<+Rq%kLl:]qoRZ/Yu"sU%dN=#K/tR57jehJ%Q=0fap3mtHB./5)c_DI^_][&IU-=p-gO`%VfQt#=Ger*bGhh!g8>V@A.K;k/h<1\8u^k0%TKaEl:,/qfs,3dql;Z0]cHr$16I,,FTqXb?4L'9TW3k9rY3j62fDG$WTc5=s`,'maZJ5dr5f]L$ZIUW&*O6LXAQKp<HVfWp!=uNI%ciZl]W(jgT+L%3?(H=o)(q",,L2G%ed%5;1aH/7<h-")*O=aqlQ75lZWR<oN1mehOgqHq.=6um'6)WO;;?IK'i<%.MWT0h&h-4aQ%<`nc!g*sS]Q>*m@+e.WC]M4$)0(1ZPSW5GeQN0#S(Yg;IABk*&)2*M]q`'hfA4djj5ElXXcioJtK39*<j)RS0@/RO"SOqKrU6%DT%p5r&#;kMFQ]r>L/X@H<LR=W%X0eWme&BV5Q.>C0S$a9650/lU:-b(_i+O7:3;Gd]#TjlHL,Sos)0S+C^\AY\`Y`<SA9r6Wlm$Pe?%:'t^mXH]-t,PGk'^JT6-LZGbCqugaY-eL?mf7`hc5.YTA<1i)gZ&N.1YMbSHDTV$uKcngZ@+]30!c(9R[]0gsNfX;s6No'l3gbH%%4_CT61jlj<*]UPZBEjf\6"X.p0c82A'uZ3fgU6ifbXlWPM!jqZAZ\s4[?g7""`YKLY,\Ag1"a9r2$92dP)n2X7$bNqQN"k)=:?f3%=o^sVZiL_@p>4ifo+lC>>BG@Fp2'$;)VWd`RVTB1\k,.F@8KShjZ^`d^"j]PCfUT*0]*9@0\$BX!1=Mp./jH`An^/dT%\PrB`u\]%L?7P5pVnH[/2UF>+@(%<!ecK>qX(YJ??D:NXs^ie:*U?%DbseY=\AhX]i98::ecqj>d2Q,JtuYe\mq\c>bFn65W-P"^CcS>nZ7:<%`j3'0hpqV2rnQr!K0oG$*-$0W/CENRB-jo?%>:p^.k4;C$7uS?h_EYf9D3_$7EJM:NuJQFYC>\a_B;e3;c,LlO6F%2_Cbs*J$lK:%n+@aOPbl-Sd*_g4mW84GWI)p9isX6tp!*enhX%*K+%!=2MiJaK(/:t#Bt:'&+9g$P](H.*l@me(;bSh0V`U0n?G2dD9)8CrR.f2j%h#j#?d-e+I(5<6Z*hX?'Q_8J#X0pBs<RR$,ko[`0Kr\-u8C_THPgYOF68f\&g9ZL"^^%`5GAp.&4t_Y?&7BT:A:ln1?NB*>UJY<1%);6gUJ-Pm-"t@&l:amNMrfaA\9C")''3&=3gBbo^5Z*XZM+n<p#q/2fQKiNo0rR,08r?FR.b3qgY=O:'b>thLRL;Qk:^A_S=j7b.%+hT@G;hn-)Y%c&So0)#;\ta%gS&D-3ZV&i;a;I2epNgT,\EN1;J@plIgKY2VPYW?uJZD!58HsHJ1CX4#"W\LiA)S%gV1Ws3e,pnm%@L0joL&.A&YE7/KAXYbFUr.$8=<0MXah;:V9:J[`OL`X!n?Pcr#GhYrh[&H[;f:5iDeM.6^MaXoEh?L1p,iACDFc@Bp(K"Wo[>k/%OaePgfpJL":pq(OrRd=O)&B)\#JXpC-b03ba,Ncu@BUQ#5+;@NpSC^9PR!;XXjm<Q<)!Jl_e7.:2sYD_iBtmCSf:qUc7),\;Jdar%87hL(&S.UH3g=4KqlSfPKSiXK@$YkejG0]NTJ7ounN*s/;MMW2aPE5G$lI@^[KSjLBDO2JrLImo,)V$h7eo<.C;2V7)&5f&KTWN4%V0l\8Y,jePW3dui)9Q\+7-'"G:<f*O%I>@9n[CgC%NaP`hB:Y>==bi(.a=9Z&2c;cVS/<RSJc8P'jh\H:Z(2WqbW[c%"<^/g-Wu)%1$8ta!Hj5_]FPZS:fU;:Pc^VITR'e4^@n4gX--A2NaTD#rU:&$2P_.4$AXd-EX?6:Yhd%fT-$d[/ogt]*]<]'6i_>%lV]Ur:MGOr%m_rF<eL"I2_-lS`1Q)blU:J)M-q?ALiKFeW2A)VmFetrnnQLRj4AkK\/Al";(&+!Y7-S[Nkqoil`ZlqQE_3@/HCJj:9`C_*JfJIu%4,VuLdEA)@1UFs'g')?C:X2iCBKZGL?-Bns#pBR[n"NUGX)$oJZ3'07b1W)J.dt>o$9o6\;M:BGq.?hZ).N$4C8oT,E.im4n=J,J%G@V!lV't'ad&[bSTY<f)<3ZVT[`<4F6].Z+;l^\3r6Xkc3!"tn:5HDMBggPCT\kDX>G8kBGQk&o[l]>2`ckT*:RqMr<X'"@WM`9$%`Tjq$U(>sG'oq,51fNk0D/iPIj)t&ZXJnF2,YMSWRBu"%eIWP29Z)+>XFW2b[0qZc;hb3-c#@#ZD2g<,?)p]G$Lp[*[>.fZg(/$f%nI$@7#L4+<KS/Z>apiL+SiV"q8?`^d?0r&K:,I=-MPZ&f=2?rb0S>]PoI.GYARJuLfoj=$DgGd3;s1SXL?MAo<-rBO$2Riq)riXG%@m0)"<T4JX6)^e#0Ge!$kgpeQPXU+,L-;[aP^sI^7i<kIH[0QQs&([3:R#qcU0*?1i.O(N=kT(@^YJ`:ZE&Ui;ZIPe`A#4TLPef/%$Bo1A-uD:&^tEWgH*4Qe8?.*D\HBcTPl*q)Bj5Aefh`07k!sCJLUW!-E]+]Q_'iIQopVPW`+NLE_'uJ3Kr`okEnV"15Web'$XLRU%aLTQfl"c3q$98Q3/mtP2oVQ,ugU'Ea<""dhjZX!QD(D4.;c]d^Ai]rDMc=(q\jqD?$H?44If_H)+?rbV-RD4;6n+Lq#STAoo1A2C%FSQ1$=)os*=-6@8V.:VF9K#Y!lHPUWF:(JN<=,kSb'p>-<$-iC"ft]I*JU%1eNKX$@bQisel'k^q.L:89at'$78ldc#H4kslH$`e%._"4%_r)-8XeWQJ!PH*P%=:mQC.N,'kY88a;sK"cHs9AUHd?APN&7k!g=4i)2W6pp3GA.RSD6S2cr:Uh$D3hV%05DfUth_!*>UP/%GUN":kaDsP)%M<jMF,YD<Z*,QofUIaB?i0gTR3AM0.<7-K0YEAf&dK0I;TOl>VR7,@@ZCp!(J><d]<H$jW0`cn2jMFWhqdj[RgmO%:BXbF=KF37TV"D2+W8^mD9G5:gP78IbBI>d4rK4aZu6=(Uiq@#&80e0]7bK7G])Kmd5u+GN;1Tr0F9f:+PjCKY7.n\?LKn.FrR^^%41n,62#4&i2<O<PZC_4//Z+=rIL"""3(6R_d1ZGLW%3q-B7/]#F-^1qV#?A&!SAHXVE7<qTP5di+hcCejQQb=*D]rb+4b*XD\&VN%PpDMGAZ6`EqkD<Y/=kl,ZO?#clhBkE>3:(=[+UNW[!.eALVpZT\)jraRCCWB^Y9^JgOn:#UN69ND-sJ"s8+J'9kEEjD._qTdd53%%o):2LJ1LKJqEqlsXDVeqpB:7FVk^G.jhgCp#<pA(_TQb(Vm<Gk?oSqUk^IFHo(HVu4tJ>HYOui&?dP^i\*.V),!Ogukj&9K\p^0r%Fj\eophTh4F)N.KmGMV-;K6ac@CV30EXUXbT:6e`LFrEkU\\s,mbds*I/g0pJ'Q@uhUXW?;Pbf/Q](V:a48>%O)%SSXfu!#hu-H"%3.E@-AU/"(][f++0ch0!0gFFV<OmhSLTA^D5/2:d8sRiarkIkcD?4'_^S7=3Gb@4ok4ph/&cT63Q,b)OFEZeil/C(a*W!kM$iY%n%[s/$Hc94;-%=Zn'EV=_kmX21SO2l\?a/qAsrp^qLK=jVH_?lm/)W%1+6'`S;oq_TBD7A:V$P@Y[[1\"O<,Yqfk;Y:ae%&#n[*0iD%q^R&@T3:m?Q!37-Qbt,JH@,'!h<cb7AlkP:`N%!N:o-p=;nJ7/)$>oAQBC9.G51n94:.&CJ+RDFd(`t\lfC8?qY&4Q"[`(6%Pt(8%[&4m4!]paU@dPNW.l^-[iC6.[C""T6XA-[(HWd%;-[T)AXGqQHQL"6OI(AD)qqSZtlIP'FL<lqBY-2_+%4(R;beF%c+dk8QR\0)/%9kip@:oQUBG+Np@:>a1$#QFQ_cS+V[Fg_4C$I/56JlJ>(lGB!o%<02q;I+#WIp^J@/M%ou/*i8Mp;UZX[<urem@<)4[_Dure=P,,%4h&%CHW&&=L@Wfkb.".VUUkWtm$,5TI9S/(p#"==k?GoJ.(nI!>Dq)j$ug*]\oQ"H+NQqP.).NEj9>NdX$5ltR405-4hgu_R+9/[%rU<:hqpJg-rg7%nKu:mL8`ik*GUq>\bMDQL%m+WJn*G;(>WC'dLb"nZB+.jblhK4]IeQS<hPb/Wj^.=qj8-DcRc"*JhT^O3Wdh#g%mPd`oSaPX+:eXqk\r14OgV$@aIe.DV(>b8`4TsfcX=hc(F="C]3chNSUPZ,Pg9Im9*5665E_lZ)l"PEeqkS8>RlS-+C^<hU`prcB%?0Mg%b[uV=?(%%Fqo\upY`D9rqJl8a8_*)r`a2p(cCI0/`0J<*Y1+:pSjG)J&#=n4*tO'rC:,Xp>qX?=?[R0'"9Ru8D9oij0r,Uu%ce#2+q^8$*Dmc^tPt%N*pO%RD&+!VafPrs>FDn@0o#-#"hD_l=Q9NT1T:@!Hb$n:GV+1(C3ck(pouas,B-5=aQ(:_*hmK4X(`-fi%QbK$Z]E>[/e*W+np_N`'YZ1L)gNjcn%_)\gUrpA$MosVmQ*bLoShKj'QcES6D=^"rS<4:;VdHL)[+OeY[WAjop$M,#[jNd^F.N4)%$hSU[\%J3b=Fa.p]&=ET-H*7-L[D3$pn>69&B!:meV^BYq%"G8[T#F?M;lZ9^F,<$+*UbdlYfNIn3AYqq^ZU^pb=h6nnEf,,0bV\%"-("Kf?_D3g=dL>H+MM`*tJ/%_YpsLQ8repkCfDf^$W,Xj1fD[/9F\2m99?%qW'onZtukhB<Ig6KHL;k,P(*TC&U^$,2Zq[dQql_%qL3&]BFK\p5;Wp(mYJdHDtiaDVaIutl"X2bVLGAtY1*sW9_N9?UL@"G4Lt;K4"G3]J]EG8D*FU^@IE#ZjD.f&Y"!ISV.VBYd;Rb+%bMXS;dHZ/Z<*gA\UP+eIc"_RpP7Z7-DRQoKIeI^PmHgR]1p?WO)?jB#hpV,>p[b:ir,>qi.inh%R\-(]r-Xb#D_uh>R;Z'qa1+t`%I2B&mNUOj^T!We&f-oO$B^Q'_\gV0ol[Fg;St*K3nN/hd[=8E??7s1]q>C@WQrVtuHb7e`TT,No/\/l#dOm=O\5A>sDp%fskG[6N%\$aBmeEDd6<3s'e62G'H^X<&K^0dYj!cBoG`,Er[ApkS7C0un9Q%,Q!of$qFq;J#SU\\61d_LhdcL8SlG>%9/TD]_RY$A/JFtSgQ%)?iHR\+4/.di6uj.%:$X<(loY!?I]&Rm4O72?Ol2^?$<C];NB1c8P=>L$-\A)<X)]r6F$c.'V)Fj`11M^X9MH)))Fnk#%mlX@<fb%`uY)_nRei+4bGf*d!%Ep:oIXJ7^(F1?&e!m%\>=FU\-:d%0rc&\+tZG3nSSXAgsmp07)T&mUP+_dDInH40[-"kIYK^eL50d1jcRG%T5?!fJ"n+:^O0]DCBNH`cgJ5"!ujE"ZFaJ[g4^WO2c]itl)Nt)keZ'Dm.%eioPO6k5YtaGi`9a!(H\%U:/I]-prgCY*RO$$b2q5N%ho`ZmIbMA_"1'`gf=SZci);n9?aBUsnbJ&lUIW@chlgd5hcPjV)D#e"G*)\?fP("iFn$r[d0>*pn`?m&UW;+>^b'KIHIWh`qY0Z1%5bl<SR86?N!GPN)*UGa5c'C9cFH].QY2VnO(E6F:T%dNG3pb]hU[L$`UYjpucI57T95bf0k+3@a6RlfgV>&0Fc:695MuL4NLRMNC%15LSTba5kf!ug"H4Yl\g=sArD/_ATZh)ePQ*&!FDD[.6Y8;c)'iPk*Em^mnsBZA4&080#8_;]ZPZnZY]WjT<:BVQLgdnWS\\V5sa%_W"eTXL*+iE8\NSmRGOYhdB$nH^T=sEV=/:E=Ws&4ks0jhtJa((SnP8Y"'[O>,A`NI<"afhtQB/4S+lrqm&6g\@_B>OS+etf3O#5%c8HSV1CKKD)S5CTf'[n\6=X=eG?;J%TDJB?;I0^?gXEZd_X[#20&Z_::__c90)4>[>FaA1r`&n7E-JP^@;gWja*2rRQk0,^_<PcQ%kl::1r8#coqr(Ggh%(#D)hlIXf3M=h*.8T'QFCaLdJYpUVrHmaZ1Lrl6%8>j^8\jX\GI'6Z-2Fe:YPpE.rRVrC[Fa0h;,KNCB"-h%s4tS5j86G'Ba*Del*7#4VsjIfIF\A^UT<ih8^E1nGIoNnqQj(Ah)/p5qY%kSSpd3EI</mr\+f=HbGE#aII>6ZTYnF3>q7c0mjhI0%NPXtdid^]R^O9;^^,PA)GN%#kf&cJHd?]9CC"g22O4*aBj^iNumCb#Np5V@<O:ObO0HmQGf@=MOQYP)WCoPf_&6J.,2Y4Yi49$=B%+Q<JGet%%^#k\!:bPs@8b+4UAU/WU\^FVp6@/99UjeqLcO`5:6ZGS81k<s;e]PFV[KUknoh^oW<m_&6E<%FC8:UN2orsZ!SZh*2Q%bi00tm@8!*##!LdeX&`5=T*'\J89&E#F[Yj+k(ma^B3]TC`OkIeu>DXZrqD5h8q_.H7uHtCn1;!S@!rd<\2bWDcCYX/P_fr/G>D)%be'o!@e<`(mQ\@lR^F%;<kfd\2TduR2hqEnK$IR[?+IB/r/PBm^B?G%%(._l2nCg>q'*%?DII8J55f.O]@4#DqK?JihIuV!hVPpn%3RQDkCN4@>f"F_178'FL80>/qRsRKGXQ/2OG3(WldFj8E%VujAIcJ=MCK)SrXp`pXg:)T%YO=drh3lSN3/k1HIcobHkC?$[]*l[H%6TM*me%eG`"ea``Q[u[;p%h+p3ND]7m[Es.PgbA*hIQc3E=;K';O(mn&N$hR1./V&%<YLf>_R28_"p*-o-6;nmZNM$]J&YW<Q1dd%ILgR[jRt[M?`UB`?@YIEn[JjJ:E!eLF?W""k#Q:.,PY5*%L(iSE&ae8o,#JR[YVlDn-s78lc-X[7=aQ3Z#:=;gU;GdjjOROT3GF%%?JbFC>N\tN2LK+;@/tBGKqj>AC_hY.aZM#["nXQ_p<FV@JUb&R"Uo9`JipfTCNcAahqu2P0;)GSDpX2nC*ZUb4VX\P@I6B`6SCBA%B+3AeD8_#f*H^TX;4W_SjK"_\jnn!ac#8%j_"]qfr$I0,(NT]]`c#RW@Jkq/E>Wjo#<=*1PO:Ej8$,jO+g68p0&q%S0JW'Srqsm<%b3lYI,kiEj=,$LQ^(X%?(0tq-jM%$okkX^sLE<3RJ#?"Qk3ro3oSop/X`93a//RWOIsM(6aa35iemi/"4VhrmY1GL##FZbs=c[Td%?6l\!^KF]0B(hf<4;=6ri=bYR__ndhQ37!OCL+Rn<^,/JV%bp?M5/?$[ImZ,e2TC-DUcJ)4q'`:bb::j4GSOb\Be<!bU\])XEHcY%]%05b`*WIA>7X5[o,TF/=RBAfm<!5@6O0/8U6efn@DXkp[E^uBZe&]29V@V>o4>&09ZcGQ@E(Q\j!D4@b3.3%JB7JgarumQo1kn5%=`r$%7c:oeT64g!aT_(F3"-nP9RCYe%DP^\LfZ6Wa?lK3S&IfiT9B5)/s$+AH)Nm5dI?WjHWAh51:YDE?HDQ2PlSl8`BY\):[74,%QPO1mY0gb)+X*;K@n:d;['278@pe8KiiO6[:$$`>?SHbJ7^pBN/,WWl=GTo$5N;G>n6^qZg(UsRVa!2^GK7t+]q+i9Y0_G[_L)ao%V9B,E[;BZ"^+,Zm,Th`cP*O(ck,aOX*j$GUV=Rb>,'8;2#aQ7C'arU__cG4IqID'C<V\+,FBi9VQAGb])OHQ.pdt1H0Y&5<-eW"X%GWeO81*s:bYMo>fbI<eu3eMTll,KTJEC*m?C5$^=RmQF*$O0fk;1-Tb@/J9ma'GU%+(nUa[cV'<b'9W2Qc:LV"(jn\#b&_OBK2=7%i>)1VK$fS9Wu,;NmNQ6u'-IbucNOT`^]4]C,\#bf"+kYg!6(d=`pOKC8FT=7(49sdZ39D(;7eN9n&$._0$DUDYGB6Nf1t^AE6C*J%VYEm9#48Pl3/H&!8tZ[cI?2pg%\FjDdYgi:j7RhDTNiVE1&u286EpSt+[R_90E=Iq\K*4SNnESKr1pI<o0X=CUrQqgq@i`gG!lme%W#!mqSP+)\p]2uX9.s@$I%:9r3RIaJd&kA@`9s^C4Qd7?.bfiGZa8XcECXZP-Fg:`,:VcBimN4R5E*%^UV0=VI;=FiH:Yo#$.Aak%npDiB2O>tS\d?gCpY?b#^EXlD-&Xd5GMfC9O+ph]3=n&cJ\f0R!HF%Z3:75cmK4aDSL3Gh#aJ^A5;V#r_++<Mp7[a)0Cf!)0)5Ph%o<>Lt3JJ%i^gD`j`q%`7;R47K*1dA4.\6+0des\O<Ec]&DF0S%h_Ecp=Iish3u`rp&lns!aI8>p'+PV,)]tEV"[AH3Y6b;G)ro82%rWf>0N(<&qOo^dNJH`).3re-#HNlgTcd1V0,dcSEH&N0I6";TF1JW3S$3Pfrah,.'N.hWPFTK)?#EPMcP=$U=F>[1MTuAK\jOB2)%qTV%h_IjmP0*1YS1#^Z&.A@0eP]a*cL<7&(Bnn1m#jst4HsuNRU<;=%`obBEB+nCC5bmHUH.W`OXWFA`)-T\[RQ.<[Zl/),"`-c1%_i.YmUtk!t,Tj#0\O%-'L_A!OF,Qf)hIW%fM1/*Qc^\sXQ\31@Ac-)W%BA]Q,mIN(p]A(uXN/\QS4`klj_1!\Q_VB8d2\-Ud3R)o%LfhV(k@d8@<BWV_UN88jlG.8*(_I@"=--6i-So7J8llgmi+OfZLnfqmpJF)9*0"I.B3^IOrQ2"0Z.E<%/P_=<)YM_u48roqj1%3U%^&o-_6'J-4b&D12$\t%r[ni9-/$!!1rou9<!c4NW\aDOBAKtl#BK1:\CH^N@/ugII\^[mucbO.d11-f=J^)j0IT<=rq8-tC"OY5c%-`AJM_aN,:YM'64@ZJ17T(,,iN*</G*O5/V>n9ll&R$!/RYI.RqPl,Mk_SUl(j`#%r"_f;pQL;cmfN8dAo.DefZ9>]Dp;naYtIG?%Sq8hg,1m-Y._?dLqL$/cE,6s-UDE7F@ZY&tSf%<PTG3$)-D97k=or6.1DZ"EScEIA/dm(fbbt6a0N8gje'WA3_lFBeOhB?(Bil,`%HTsW;MEr&g6B8Y5!4\%RP"6=3J4PdBU'cn:LMN-gF5,<mO",KcR#ikf/l_L++5p3*j0d/R$WVE,CTjEId@J;<](W:u3\3I^%-\>T%Ff`YH"Hkc:NE2Q+&Z'6RNO4&g/!f*P;_0["PCnfN0I_VpO]LN]\)8(7k/I@,%rhY?:+j#bkB^Ub[SW7"G2kM6Yla2fA\s4Ta`pAE%FXDTY^rh1kP,mgU;t)BA/3q0>nH<_?LqONn1o!93/s$o!,/a6R5fhHOe)DUoYk,7RN*T@_hgLmf,clDUdp[,9Di*`,E*$]ghAg'$%^E*J0in[XN]3K#tk,$&opQpJNq05IeKgkr[B"ds/DJ&;,COKg./:F'lh_3MmJ.AXDe+Lr=e+[qUP"*2DB%C^p<V5i2/KL)<:"0q!%3fIog(IuW9V@*e*KPkEl'\Z-TjI]]OG'4I17+j]lcK)RD1M,"kkiuCBnRFhZq74%oIcn`$.$BiP&aOL?Eo$JoN4t(BZbT$HL&JW\%II92'^KMf&F[q]Q>GJ@^]"'3-ih[pZN:,CfZ56m1]-a]KjLXZm7a[5:_&7ZKUVn8-/.6ZBh>Ctgr#1g_(7NXKB3gMNZdSW>[;VC_%N@l['Kr:U!`H54W#>:*D=spJAIdqk6YgJm+g\#X.QmsDWH2NL/_b0TCX6U]&J<F8ph-OX&r7oKIqUMiX3LhU7Q-;C"atoFnb-Lh@%??M!((sHRE]DU+pqIYsgMpLsK"M.!klak8G`V65F(a<\?8n6#P3a$2#kklS1;LU\,9e@jaMA7C(G;ePUG`_Wd=a)E:j5Xe.fsB*N%K='>.ae^_=F0(c+C%I=:@!uL1hq]qiJN89fl\QtDTtI2*Gg&/B"\53>,#jns'&1:`1'9d^mR9BlM@;X\"j'mG).gNAH-M55f6j\j%a,hteC`Tpr_s6UpnlfD(%E;Q#Z].6KbN0.jou^YLf>A>Qds@!E#$[]=IpK/DkA$%CEJ#tVno2S<.:'-:]#%ja/5Y'XfIkU`?XfAH%"4,nfE`Nqq6fP8kfX!*H]d<;69#SF<&k1u"4BZPq.-:lTo'E/]Y#&_8Y^Z\mOG)`8q;`1&0P3N&r!UdkF88n/Mg]f*qU3!6n3m\-%0AK<ig(cF(bO)cta=[eDfc,Z=,bN<$i&i0\bL5-J%`atX,c?$8/d:\p^n=:]5dEI8h=:D_F7u.%4t,UB[UKu7Zf_ua+)Ceu8GhSE%k&g6S6O]F,`pf2hm$38MQH%*u^m.>+)KC'SI$]mr8@m53`p5?,7uQ25Y/K;Aeb-L0EHjE'ES.-HL;YK0VqG4:4XaCrBu[]D4@0e/%Jbcg_JoBXM!PNl=M!*ZdbSD]cPDe,Ho4JS15q%*<=K72"Yd6gQ?[LMGl]l+r0aIM,,!VC".5h+R@dm]:Fts2C#0Q%92<"\K,<B4`%Gi>AuL&dpgH1!AhS6D`;Y5G`e=VO3u7WHYr?qQI)X)e=\S<`2@)Kj&)q3\5!fh[72$0brH'AHLNq];?tiVFBq5P_g5>X[k9[i@Q-%/t<%qT@3JIQl_Y,OPD;LSp5\g\g/E;n]7)EFH;Y\`sNI=0])bh=Sp5)O\'m_1>RA[R0CPZY^9pS)*B[:nM$UBc]@IU1%J]62q!Tt%n]:(oH";;GTSc'QH2P@Lp*\g]60WX^rQ!nf$fQ3?3$&t;I2,RF??TS7be>Ak,GGF<_adNu*`EJpd)rt!=[o<Dn4mQj6WBkD0r(Le%Cl=QL(P$E'K?^P=5ERS:%l;$i3n@Q-nIk'fe*-`$`C<OsM\U(jE[%&qQu$JYULuae,guL29<d;oe3pm`GUC<54),r[PG"sc.@,uQ%Q9G=5BAnD3KYt$K*hA:X2XVN&H,^DA`/rti9tc['%,%("9]8H;Mj_[%:s[e)j1#kB@JiLu$r(CZ/&tmj'^oXom)#"k42,2OOJC(n%f9W\sZY)Pmk^83nV2hu"Wro71G4b9&*cL&`[(iG3Fp1=1iN,/-XpiCno>sSRT3"-8M>D9]2K/AjYGK(0I%qP%W<"gS;Y?eRkKYZ\%/k]03\TK>g#MRH?nuZ`pNA+1I95H+ZiRns;!/Zj3*Q@]QN<>0*q7&Fc#,PI\n+;IGX%(VYaUku(V4@qg>8DI8KK-oEUTU/OOR1`n%`]Xdi[toTC$bemZ7PG.hc:kbYh?DK!KW\GC^hF(>`L2I`8a'EcJBGm(L="[mCN0Jo*+e-[ibaD-T)ld4NA)S6l);fr`d1a])^9H>%`q?QHW/!l%(`W`0A)G6X13ppRaWpNOiY3O_P<(0n+WuCi/ftJDTc5<$-@QG1GQo0]S.\I)h3bo?`Z.%Jgp_9Eke].>@ctIbPY^`,%QJNUmGY((")0ETnU*JaGH!SPc%(`,0(Y3<1YoLu;ib&\UBp6aX\scmDd+'BtL9;kj0m'<f/n8R)3B_i2OCre!Yqh&13o2,;L.qL2%Tpf<^.#-8oKJ9hK6i4Eg5!sZ;AtRaZ6$NS^Q,m!^6r_*5jKA+\8b^L95-&V'HT"jP3S'Q_/oo9mC7<g=);SfSZOCV@%(W@hbe#fe%m?NX91IFR%^MjJ8+6GV+2a_39@+UV<9]L$8Y<<;r<*<JKPRmN&/=2uH^8toVcO3t3c]uBan_9Nl46<nQe[IVEMatY<nl;G9Sj&a>%;`P(B,A:]bFM>OBTEMe]PTY0(ZX-nORsFU6;nuOV.'N&TB'laD54dpLS4B2HBQDpa]:A9(o(VV&B7%**U<H586K_CaSQQFt81U9B%S;2MRcF$#0He[RG*QP=VK>!oEIMc^8=Qg?<?\;;GnBp*ANT,#[o5j,/n%55D\?@'8m`aaD)at!YgH=unK@eJ$f3a,M_a5!aMBB=p%`s/!#@J&>iI,MDhX5rPRFPq:+-jqXeoa\S-O`s>NGOjSWXukZ^eN2=M3HKHfe>V`c.,OCoG;-ejLF^W$Heb5$C_RnaHP+c@CX+J+%2m.LcY#.V]@i[Lh58cJC_\PU"FAgucSAJ1am.%\*L2u#;mWlY2?7(p'M1[KXaY]R6QKf$YXbDEu#OFDKra`;"'(c1f7ekQ]cM1rI%^(F,2J$LHR7I2rS%$VDN/K?$:*Tj47lem@[V\G0&=c<V=B20Idn#p?qP'sMQ[XO)p[*Hu(kb%[l*afkNWOD*_.?-\j/oPfE]Ob'&%=nqFJ@JDj'H(rWc@gC+aC&=F@a56'CkI.V?(]NA9qh;#Alpd2f:/@pd'urrAoie!</d[1"COH82V[N/Na5MBRZL=>jTA\Sj?gD5!%Wl'%-A).M2V9b.9G</Kk)gD88E`8%\*N`+LmrWY`hLtf:W%*#JlW?76gl&1:8W[Qq?6WFNfd':NZgLL+3V'PhEBME4<]1di]4:L`%pmlODkj8]Gs1)$.(sfd7kI`T3nm\25(OfCg0f$g6`lVR]Vqm>Rem2+JI;n?(-th?>A3P`9g5g:*h./8_UX$H/Q2*E1=a-HC!Wl00%MbdKA2`=(5N)LT]/e<;?URlVkgLIsqh2R/b1gZ6^3pSE^$uVpJa'H0`3Cra0ng,uj.3LF%4Y=fa35I[Ri7T\McL/_YB+T^a.:-7u%(kX'RC+Jj#bHS'(e4SdfG79=DHt[+E@if"PmOE$uHkD-C1$%jn9NSYb^8SDCQ9;n>%82,f>Cbjf&.221n_G9681@!jp5NS_:@n7X%H$n('^:u1ZcO!L@S\kTn--_dJ1JWjAIq![po,G"EG%F()g>qgfKF`ul-?ItTV"kI.Bl)ZqGCTP'V"rG3fH.%I1?U!GQ\:Oa`m.4D%$&'&697i14M'??L9A6"S?IIEEahW=fjjqC;`.$Jm?6PC<F5ocgIpe(K,'sniS(.BI'8mh7j@2\2Fee(4Z5>ZYGN7]lCGq>ET,tTW%NVTNnM)\Dqm)NuHkJ'EVbSML-0jl@le1ou/,!#Ot^dQ;'JVlWQSta^r&9OV.p5FQ[d3n36ATRA)9YGGoU)Z0oTkEZ098dh^W&Go[%`B7!NljULGj+XTKod4^6?)5POLk;L:lAYlT[`"TZe/RR=4WeR`Q3&/o6p:EN&p)u=lkB%YFFMi0HL\?9>iW\CVOl7uN-D"fEJiF;%P+,a>,M%7'Fl"W@-la[*g,C,L@P[8\Zml)Zia^:499hemk87)(=6$=pSlHh:cNKE#;(Y)5c-Ff!U[&fbP[7ud1<SG]%N1.JAdUSj%05P:]ph-I/Had-H^I=`^_Di"j?hVA.UranC(8=PkRma7Xag&FIgbc[6`/Zl<TeNnmmErpn!pA4b&D(Ac_U3Qi_"BDL0G(\Q!Np(j%_m486DEj*Knd/7K"]Q8)O6bj\CjQS@ikMhb$MSWG>51SCYQ\4sI!M-qNmgP0M`?H^4[29#[FpP2o3YreZ;>*`q^t>"MTW9Jr7D=0%<.c2U0eq1I`>WfOlP]Ll9A@/fT1063nj;Bi,')33`iItS)TObWc9s/-GH2,'2"V*WWHr`t%eFJp2=[X*oL@']F%`coj7L>T9[B9Q%_n;U5XMaZ=^LcVKH=J<R)*PuK]oRW0?Ed]Q+Ho8U9J=bn?p@D)m*Iu@a.eUC)b2X$q]c>YE6$;]$U,grp<NJaAGd13^i=qJ`c*'4%Wo=e]_KhOZRk$1p,r'@J'J.&*l&[E;_<1s=&>9n93$==$OI[d:nna/%Y\*A$ggSO<4mGo*QhC9f\lS'Qkq>!=;L'U=>Wrc.6a=@k%S!D.bH@sFM^XEjLj8Q(.(uBc%pV*^=J4D"f:"p9r[PNQ4C?']BE*`@r\3@*EY%ueRh>I(t[?>E.X-Lna<QnmsqM*\4cuF6VOZ,M.%\Ee?2SXEH"j-M0,A9&DLDOfA$`d'DtB(PfEDFcg0ee[,fW'T*^=!?bsl*H@M-Ep@]EF&r8O)O!eI4,>ma7h/:.<)t2CXeo][]uh;%jK')?ZWBp-Rhd<^ZIWWS_iD_MdXdC\^>8,[T?!:j$ctf\?JgD^"a7f/j&=:M6dF^r4A_VQ6&d@&-P([=E]*,AO0="SZP2!-N^QZe%UE;X/$LE=%O5n5S9&Bn-BpRLa.[U*S@$MtI#sfk=:.RtA8j:>n7._<0[k[6Zh94qEF2%Of1*"[">XhoaGsqMNU?]&'7SZ1*3mY\*%;2e3#HO3[==[Bo.*rs7u;\u=7e6(_M)2%9oC(+O@/qkE=]/Wr^R7u`[G!O$&ljE/.Qh_SG$:$9OW.>17#4thr7]IAPfEs-Xma^Tb%1K%4RdPS&$&>5bX?=3biA>H6qNa;tl8K%;S7+P_R#s?ULIj6<=fmJ3!Bn%A2=i<r0$alIVPQ"h!2DP!'7nNRKT#MV9p,?I/hafi9%a%lL&ha]CTm;Kq=^PEoaUH4,al-Di@/89SY>5jQ\q4lF<7L\`P*%"//hhXjRmM0&_!0IkVr\,tkBn$/\B2m;$e]1e@ro,SfiM82=%n\n&r)_pU'N9OnK2&[e*0Bd5g!;13IUd+n8k@,L!(Rap9)P]jPr^KTXF.Y$$R2@bYdU/)I_-S!PdN?`<@nlh>&P;l2(dm$7Le3*V%pD?QO+*3K7PO,R4A-AqS>$8(Q=O;F>L^*>@8Q\BA]7ChchUCNfWu*(PMk6.L\_53;5[GWOo3c@jY?SY$*^m3AMNt6Y!i*.8TNca9%Tc5<:cHQkdZ>9U=jLlUG@<tGbjg@SRLTG2W_$B-`f4^_UU9*/_3SD*:iT0q#fY&\J$U/a[M3'mRJAF\b3sdUn=$iT8G+f5$gD"T!%qm9:Kg5FORI$9r1P^KP+iZ.5&YdOYF^hbjjB?SY2h4H1f<*92N65O$;)3i$p[tA8C)'@^292U(q3Opd!r`"E:^Kl[OfckM1=nDTX%?ETgg0I%ss7EB9=5$)/X`QBTPJE2gh!*!i6rT)$JG3s?nI,Q_^SY;*K_S5G5@[\tCK=<q'&Tb?+HuNtu`pRQFEW5onD:%(oGHF1.%SANL[$4Wp;+-,JM/U1WVrE,I%!J'MIBqE;Rq1lf+3ck5Or]$$@ehDBqi>o%1_W)I!)Jhe['D0SK]+5R3lr;ZILMhl"9"ADMkVA\-%e,M,16W`!Q&:@tcm/&1d)YbE6LD^?bCu#%Ep+C65g:NWTrKdBmXJnkJ6?rLgfRa#M__+$5>g^X>7ZK)#E6PC0@ui^AKK-dMb]^bG%/Qpd\h$G'M>n.BDAIL1Tl2&Xck@n'-aVOGQ`:5X4re7$:P2n]jdplL3MkMVL!iKU<c8RY@iI&uAJr<2GjB;Ckq#G++7:*VHX0]q7%UPS4BG2gQrh>YX]S<8phk37I)8tPX-;P*P4.34de_g9TJ<#-KcaLF/C:A&+)Ac\l[mVt7"gjHoO:(rp"rFV=*5<3eY0.(d]P+k1Q%^"+DK@J-MQ#fi?]5?Ln<5m7'mhVYX(fdhB5\UP3i^W/BFkY`EU'A@TK&?9C@PESg`SKeeo[+/nrchMi!OEuLQms$3-?-nDq^b%'H%T:E:"lJ7Q['"9WY"3d';K%K9.Heh)\!&nqGLAT2@<7rS8b[EQJXT%=-G&2"8jWCdrd:(`gcM*jEL'6+VP/BBL1^%JY2^I;sf]sF2%Q8UU&>Yhj7N&bk\<TT%dnCaKuc@uIPhl>kL-=PK-8k854(3j*5Vc_"(#4f#P0,*%>$WY.t9Iuaob=eL.*@"?"qO?`RVf5ub:1kO3%+C)5g2r>V>>Z%GTabG[6<tsq.g<h)W)Sq]`&X)JsQ21Oq,lBW-1[]k^5[D;Lei_E#@lYacN:itQPj14(WG*D&k)$,V-gte[3@r?#%AleE@E^V*)(F(GTA!qW61km(;0q:,D?rpZ;#!A)T)8NaYrZU$qBaiCA(oZt"9lo^O\ruba%BmfQ%#m,.OJ'FHkj_UM>al*\/W1H[%\J.WD'cYo;"<ORg4n_&S[LDS>L-miOFI7F2[95rF=qXaH@YSOKYp+:NDOg(6Em-!887Zqn%-sUU9Z#a2Rs#)CeB1'8"Cr\m]Fc5<%f<3HVVc@LAdm%=j4Rh5(%39i[G%isb=GtH>hJ^SC]?:R<Atp#1RXgM%<O=C_fIbKFnQ%kZ(7I0P8,W@/UEhF_jOQ)A08hK>o<6>[%C%9Hl[^:@WYEaGj-`>]HC9NU95ZrlS`V#Y<@Js-de'+gD9bQVj^(W$c05dt[B,5fIm**l^hjA\aSpd+@2pMn72`htDebAMhjR'MQ%n?g-cO89LH.+Pg&`pN.G^U#g\jUV]`)uedXF-Ah9USmpoc(uD0G.1K10>?>QprfMj'7Y9M]^V9drH\CkepWOm4b!CGh[\(9r8$4U%O8nq9FFjJcp?N&HNU^\18^kklGth?VpU&o!i's@)=!#`QO@+%LjI8[4jF)Jkk4#+N+;U:)-08\*o(2\Sq4<md/;i,mUSVmA)o^M%%rT<tAH/iH"rPuB>Iaq-.j;+&)PqVh'_SP5Ukl0*:3[AWl7Vgmn:nm#"Np-2)impA"D0P,KL>06LpRU]pL"s_mTt4=fQ(;bt3,$XN%Pf:35ceb/c7BLD'_lnUb!"(K)GA9g'$?S'SU7s($<b)h?5\2q<Spu3mrE8#XQ))j!L4F19\^0r?ceX?+PuU1PX]fdo)r^a90r45C%XBlS_ir7]?mBjS$r;0%ZLUd717OHi1CQF5Lg=]P\ro;di8a`e;Hh-gL`eu5<p#dFOn\r2J1Gq9OXN$RnaJX6_WrjU,Q_3`\e)1-c%R-(O1DP$2tPJbSUa887$1Xksa*b@p/6^La/p%l^#V!km!#2;d(?]IOl#Q"XNp8q0=1Oj!3lls;q2IC:2@$_!pUHMi0$pWIfLMLg4%@VYb_V0k,qFA4ZWk_n(Vr6QdiDgc519e9)]EtUpV/BldU1GSW=pejupCZf>Co&ANQpk*]Pe7aiU_Mt/q6c0:'CM7I1D@Wm@6^,jb%X:J%n2:qB9lqjIZp4oN:Con+?r4%(h[<@!ER:bDEq<uEsa:uO$@U@i^5MBfXm-a8OqeJQ3]Eh/gnk$\3&lXR@1\C>)#E.Y?lg()g%^Irt9j<BK$RP"LP#(nYnZP_gsF7dc#\@[Z`[!*@B<[Rd;dpon!H_o^$>gjb5Vp4Ia`P&H>d\p_XU\;g=[Ia+Pf<=(%/%_id9AALq%*fI#]o]*_X2UKJXP7(;6QV1g=X/f]EIUkD;@4M1`;s`[31rCCF+(kJrX9JRMH1meRZ<s!\l#F5W`hWL;Z0;ZT2jlW)+;R185KJ:U%C(rmOXUp)d[@Dd#>(.A%H'q75G-0k#anl"m$)3fFe>"/O6DH"+:OGcaXu<TaE]N)=n[#VM2k^_icKWZ7#U+&:rj.YM[j31uZS,,1%[j('GI(23)^YkU3.Ju@IIf23$S(rqe,V$?Sn6u7Dr+EY6Zu_bm9`i4?Srr;7Q!J%]M+eaF>!J"OKPr[;;BKDURh)F[gRIs*J"6NY%5Q9MgffjhDZQtg,G7u'c=QK86eku/"?`M5e='I3M/g'odqMF[D:$!I5LNZ/YKO>`npKaYX+uJ_ZG4*"Xn.RDMM[B.-H)jtb[(_[k%0-@:dPQ/#%LB^Hk4tH[!AeR%m"F[\2*O$!ig`COM1e>3FJ*=rEF[tTSfqf0:B<rZiFg`gXRX?a"C3FY)<F7r<&,'jMTsaLMhXodk%kiU<G7K"O:>`F%n[_2:gRqUT,mZf>SEpZ.`M\khc(a5i[4lMtJs*?NdSq9gH*%En6VX1s`>jNAiI=&8?]^TXrr8l^dfe)$/]G98!%-LVC8O3bid2n=,hEmO3nMt<<XN&f,S,=s3m^B\*$X?oI>,gF)Ns&pf9*b&s*Yrru])f:GX@f5>XOjgA5oqoAum@hq(kc<M=/llGn%+L_mTT$!*mY`9?3rk9*%brkNFkn5p2DrDJo7:NF'[t_oShi<!]HTB>P0s;-aSp`UUIWR\.e2VmU(O0sm=OQ.n87J@"f3VYlhmiJ<%3Uj3E&h^FqcSTfoJ6T`2(%7P3UX^672RRsq&];a>_IA"Fk>$>pMlU*(SdUtdc*o$HrT37ud!OUgOD:[QMhjs6FgQ;=FQV\[.6:A3%`bP;JihJ!l3,P;\a)8NOs)Hq-dg+jX`8_"[omCT<iFDrC\[2.'@.V%-`k]:%G)l$]/r?P<nNkI%UWJr!e]Rg1YO290SrBlL"9][m%Y"aRR`T>@LKZN0B.D<DY`TN.]51E]>oqqV-AU(AcnE@]tLtOM(G+.Z(42W'-jH#M&AMJWtPhTn^(NM:FbB,@9Y6RNB<sE2T2o`Bl%4SNu,EiFJe*g&'%5JB<b;j7&sZaF]5:>8QFmbUh.osl5'pO$eYUlZUGN#q@MS>#cG['=<ljhh"9>I>9tr8c(u1h'U([-7^@f8L2_%kM'HimHF[8btV"f$R_"e>"?aTD0><tM'Y9R$`(Hh[A-5r].H#te6/Fkl7kfUMj9FPNbFB1_CPCP;[8:N3Ska(gtV)gIJWGSmHE$"%;%#I8WS?9)=4(_E#<PB(h<FLmpPtVEqbl+HR/29[(45Su4=Ibi/NS<Y7eTC5)fL+<a[O`_Tha5%5R3:O:=[%O`gg:Y2mJ1^9IIuR%`l7MSa"$Ga@Y(`L1gJo*:@mT?)0X61kbl2L::Arm2aq8gI)ObsItG=9eoCl8HLTs'oQBa#&hu1jO%,>]*a2qG9)S,3(1bUfVrr,5%]JVhGXL!?.5!2!^FMYHB?g,b`V:O&^rj'k#Gkab?NRYH#Mrh4i66+74?7@4F74cJ\:>0d8mEEr4ZQIqceFU\c=T38[/e<^$p`2(*%ULDKp<Yra3b#:_Z[e-eH2"Qe51B-o/.kH-fpK2bL@J]N`^%TkPR60g/q_Q.^o]iU3HZ]1[[;j\uBg90*D'Sng3;I[a\G9lKmRQ;2%G\-ho8eI3RYK67E@7agHl%'c+++9qU_g]B0bj3>5g:Jm1e)To=rmX/)W\@*5kAu4JG0bP?.XBkgH=ss?LL/cG5kA'R8g=hbG_fho%BJK8n>SUk"G]kfCJ6(`5qF61D4Uf#FB4dIDlH&2kWP.1963@I,@&*rYN>*e8K0,r1TO?F'f!BO[i+T3fn\CX0/DMu3`P:h"e@kbJ%">T\*.Jim8B,=tnD>%%*#CCs7Xm#/ecEgGcqkBlph&Z/gDrfku/t;t`=c^><=aI!E2\`Zk*o+RBDou'`7LQ&3@d`p-:8[nOPaU6<%5*(cL^;Dt,Q]'!JL$aKXU@<B;*($PjmMkB]GP@a[%A?_M/P>L.d2[)-LXqJE;l>)`3oc9B-%+g&o?N[sXqEG!7,9a?XDR(Z3=[Sc%>QWD,_SZ,,]R%e/i=]D0H^ZV(<d=uu#=a;6G^$$.ZUL5s_'7+<h>`Qg!fa')S*oPfQlsWt=G5B'+5]Cc0t)&`(;Y3`'nbLAEr?V1%CDJT7N!u]\kuYV*nl!u5K2t:j>=7:OMf&jH3cEji9/*e9]^Zdk!RY"N%Al7t-nf'&Z&4bQ'GUm#]4fSne#G]n3Jsf*O.k;0htYl=%1on&!Y?:1+6oXr\<P*9dngA-tC8qerLKrfBc:UbfCJ9@,30.H[p1`,-2C83[U>AdCaUEa6>C;G%43N]J]2l!j;7&aQXCmf0^[g\Y%IYu.bJ!S)X<=!nalq.uOk@nc1B5)1V07o;*Y!g[96QdP(E#fpX<A*DCQ?"Id)M+))Y!g[;ZX'b&0NC0QDDR8Q^SM@Z0JIOtf4`^f%nQ1aEjX$aqQpt&A.d;?F1QC/WN?!L#`\9)eX1cnYf8j?/5C>4NR@VE31IdX+aIbTtjAa_JZ4je+-n<55LT%f(d)@SJo-XiK<XLcf%Z$Ic0:gC?GCN)oqar&="MX4M)?2E#DQ2`Cb-I[CWQra%/W;L:R+Jq8_Y4$#1=(9f48m:uEH.4S[Va:pQbf8&YbLu-hMe=-#Dqcdc%I:[ljnBi%SS4mU_2=k-C0>!'5W'6^[N%DVI3nPW=cW;Jm40c>8\b"i5=*L3/c1blCl\c3i6GK[>G<W1!Qh82SPD-UR;l`RUd*XTH%H1I1m_(M=mhgIQ[C%LFIiVW7`l/g..o>T=&MY@$Slhp5Q]fl@RrZbcH,;m4i4*c=8hEHEQs8Gl2NK>`@A/+F1PO3#MWUC?5k#rR\%7Hum]b8n*mZZcpD^Lp[3j-,h#c=5:N8c9Ym*uJGAo_YC"N++4V^@RM6Brt4T[gTibeB>>M&\YpJ>`R+b=f=*tQCMHsDkj3XP8in6%<Ba<EHB0mHZ1ll3o@Cq%GU,=PT)KlDD#8q]gsStiknbGSNiX%WU=RoIf_OXBmI\e_\",-gO#t8;cCIIAa.LSECgXD(EaXP`2/Xhf%OLP.,67u$cAN;q0r$8WoI\1NR-9FGhEk;TLE^!)g9(Ar(?#IG3WjAp!bJa_Pa:`joUUBXN`MspTYVdg%<ej_oiS!E,%+/S4_23I^%`7F[^_A;P*aV[oam"XJ4%/]/c4f^WGO&%,2O'V1JPN/ujpXu%:Am\kdbf-pIKB;iGGJABpbgtCXYW;%Y9l9@6V#Tep*P/_eR1,(Y%^H!6JN*Mqbh>;4Z]5jk?."+<:H's,*K.:ZmhSZRGfq>lLXA$o5]bYYc>sl)]hRm'L*fl;n/_3[W^O7itc2P=Z;09%CiNdnSQf\nb%Z)ei>@::^o]UItr7Si#*/6BlN0mo`D]HE,4.#5Q]H+fK(3i_K;iL:Y?(,e@H7.T$%2d!je?MBE(f`r_3l7@o,jEE89*4a4X=kHeJ%Yru#!oZ$0:o]YTG.B&FJYns;e-F)[424h$J.WE%C2I<MO,KWEMK<NaFlJ>A0aE[t2IGJ(<lZS83@Hm1R[W=q+r-057bf&O"kMN\-%VB4$fnH\TMj(`+S\-)&iAB$,H^Fh*qjip.i=m]`LJ,??TIMghp:;6UQ6L5c]UPdEf<j4VF7Wuu:<dCQj"QQ[Z"`[-JfKd_d/OsI*%Ait"Xp3G/VdHmEl.cXY=^X2Zl%F\!8"JZO$jA\gTIHT?%T08fEmFR8Wr&W(t/CX&`>B2it0QR*IK37K"1h-=NhaR0O@;((0B($cQ%hsij(ru%^TESR"SSG@J)d`(dK<Q!91QB(6AG^V4Z/o+:>Jj-q?\Ls)WG;T4_DI78u20-7-e\1AA=>$V_&&l]HCs'Hdr_D&58"\pf%k&Rh`OTC`5SZT)p=T%KA:pZWcM]YjbjbH-&oKtH]5gXA%5O[bu,DtKcA!u[LWc/-c[m#;2SsLPfmnXT?NIi)jD0T-t2XL@hVp4Z\%4s@Ggh&/-tB)_F]fp[,7AKF*4(:sf9ZL%a4=?n"Ti6Yc$O:su3O*nq2/jE)B:fX7IERgWtm>*3rd@_XW:U\hek%:>`A"3'`9#2mX%XDo&)qXC=5VPZ:ao:RIp;tlhl1Je<l.5AO1CUC`]RljLh(tc7"N\4BE8<INXjI%rnGM&HG$.iVEde9^df5)f1G4?s/kdR$pDjtuH%9`5gY]US+QcM#^&QbHGdZ_;*C4X)40\aXuQ\L.q1i[uMVak&8gL!+\oOeF#6i=dEQNC\=MA?mRlk;nL@1&_iOaF1n/!Wfl3>Z$XJ%*4Q_-3=J-Op?1nnHo2N8,N2CV\5PEE*)bRaf_p7C+C2'Plak'<UqJhB@$<G&D=>*-:b-U^D)jcr/JHlV4f%2,Rhg?lZdW=:F83]&%WdXN%I0_L$;CuRke/VOX1+Gf,+B53L5i#<^n\Btp#NoGa9C+C)#hc!56mQ\367UUPA?PRWDi6Ora.pZ_N=GMB:+OnUErOPkm1<'b%fil7*C@ijDZmK"L5><f3p6-$AriH#T>W7I>,adfT\H='^>ZZB%4_2/7VYJ?ub"U@Z;=0FNo?j=E4]WU0PO"B6RGCD!+N2<@1:9e,%+<\o=4ARLrP+FX!2S7k]91M'j_^BD1Y#"X"3<rj^PfhZ(1NOOCdrbDN.m;b7mp@+KX6;[?:\%Sgm]A]U-"I[WMfn-#;62T!MfJbs%!s-ZCrEtkC#][.RJ`:89Bku,U4GWNS>5WD[_SR#10RCCUp*NCJn*sL?(*d@g3NZ=NQ57VnO&'r8RsV>F+!`B2+7G?Wd[ZosO9.K=%o#^^`aXcB;6Le52*PZho)g?#/p#Oj?dHB$?[$[:h,G$HU04(66+LA<qQB.W-78GR4f=D.P/6$fB8':YCSafC)GkTDJ(aSeMi.K;c%Rg1$/3'K5HVHs_6e^G`'psiP9eKd_9Oa"QhB*'8/ilN[Iq/Gb%;a,!;l.F)4o]J^`TU7$J:X))77Z1ZpgW]63;6ddB1QSICQ/0Ic%cA:@^g&,28KB#M0m[cY1gq8-&LE:kbhP/EdS+dIQo+I1BGD;t12P(A;fu"-7-k7D2V?+s$a3a%6h2P<<\8kgknY/*""9qG>^=+7%%@V(KVht%)L#dGtD\J&?1k]hQ;[it$g8.m'<N*'dFc%\)"38?^YVK=@*Wsfg"P`N1<`)?:umfb5C-*RB4W<Kg3j]]WRKc?1GB#[JY%_3I4L/C5)8fQ3F3_`mPVjV9:hNSY`mU_dR-&ZbCPIc(BtMkc)Qdei3]BFF3MqlE(=h#)fgd?dcYpIRD.2G$Df^@n6:pR<urV`<i@%l/\pqkM_cGbheo$!/RW%cf7]/=3DpDM7:`YJc,6Y5,aj**`!/B)T[j*W!E$NG1/d93r#DJe,)j#V;>L>&ip%R)7ld%hJXgQ3+S:-%<g)uha)Di,cY#hZq7)I[590Z\X/ZihI6e]G;gL$a#6O&?Us;YP4HLZ8q?G+T*#qD\&FSZ2dI,sCZkeh#G!A*d5>Rk;+u++X@Wn=Q%Pf;f.:-g8lQeCTOg3H`LVk2*o:m-,bO2su-@sNI[?UQ9D<rV>1&/Q\a'oR=uYNF;:<+kHn+>Y<#FNogS/^-tuf,#Nf9tkPLW6`el%)K.GKceb;.THDCQ`Np*Fq^SXC\\_c_(HPIAe)QWbiaWWHEr<nm2mN6go9<A5ZXp]'?9XeS0k-`qKm.#om>VdSYI4dLdeFQ#U%Rq<%!/+m?[6$uuYE#cK*&WlR!(0PihR%h2Qd@>r`*.?gJsBg0hm?20M[d)$F`c#kpCH-N<D`'1GJF,ja76i3Z1`M9<34#IR(3(KG((q?%?kR*H1sfR"a%A1CcTCFKK9bW7b4tSt.=IPVnVQsHGW(@iS/c;#H2W&&o(gZ&'uljg]X42&c1/>um5-WpnCN.c1B4\e#l;Ocg(nI>%jhn?'3ZMiAjLRF&>0$HV2tH1Cbim-6hDYg;gn3fs0,,&\o`!Uu2oI"#IWR)D@Wh<,.tCo_?/PE+oJ4"ak_Q(`,kCK[EeU@O8X9)u%?$ULJCtCR:gM8m3U<!"`/@/CHZ.5OJYE/rNEd"1"oEM5lp:9jnPNAp#/:md=52GSbdfUgpSGHDQ*K2-RHf1_g`/c6Xa1b-UI58&=%QpEoQ8$lXAb"0D_U\rI]<d5I<4lUrZ#:ZWR(Mb%Q`>o3<rVe*`mJ%,IEA7=22=@Bd+U6f(Et]h=mlV_i&Zm4d0;53^-;EZS_JqZh%Q=Ea--AGhkln<ueXmOU%1\P7.[*qUp(E+AdXkf@MF4#URF<7Al')b:l]!,$U+C/RdQ9R=Uq9W\b*HY28M_T?c!PEhZN9.mij1N%G%'_VoNn7cJ5OXFm_oXasj]l3N>hW=7ciV*3H8'bLc5-EdKmu/?rO6R)3,\+S0;NlHG?F4#IIiXXZ_`Q%_cY)_'Kr/HQJpm35HsLm5%ZZkEN^%ba<+C9qqXq`m$M@o!a0:VTJ2eUhCd"e%(3:12;f<b$K>HT#(g8>HF5D=7PUp8X"nmh<sC>X<O:?9(X<@s7@NREs(ri!N8%nRSJRRHJ6h(l$[YO:'SV8KY43O]uljZ:Y-ZbhB[3Qn02Z('32.Ib(>`N]]nmFRFVMC7+m.jiSS3P(\K!9?PdUCtCc?cf.`=f0?b=%Sp`QaN#EO)VClM*E1brcnQ"8i^fk2RN9%/>33iIMj:"%@qs)@P.:VkE#R%kq]r09hoAVmp8^^jgRU%9>mLO:V'7Z_,DKa4F:[Rb+%i>JitPYDPO40oHGr*NP9a"r85GP3c6ee1]\D;CQ=_rm'gDU0*;?c;C\i<ksIre?+_OA?l<cB;$"I+(SRj@8=[TI&/IDu$cgVZ6X+%qb\M`6,=Z7!W$#-GI#$]=$P>I`D4[uA!Q@Z2SkKR1=RHRFs"s)'+(%<Psj]H,pBa!%d2s5KBHrdLKRLAm4\4QMHrlkq&;s5EGqP-%*$/:^a-NYP2DE-!pFGLYNIG\l.=+++rn-htM+/j'M,1D,4)D*?dHNHe4eWpT^#tk,-XFCLFXZYkMD%UJ]!!u;&Hi/+;'4rb_3E]4%:o"3:E[D^<%+NN"Z&L[p'a"ZTDulM<jg[lp_"T3Q%jq`ahBuWf[qA8?7=;WR.\0^k4m$3sMc@2/L$e-@l+i,LacY^V?Z:LPZV[/3%8^uYedHN@TcYhTRB%(<-'g86s$_*(L:R],T2qBj7%LPj3B!1):LIV[2!@qNPCA>VtO$5_g_q\[l##_BUn&$E`RH]PNUEl3-.<EH=%S6;J2FCpi-`D?'BOP9DRL#;'OrW8YpigX>&:'fSob;0UZVa<r]aX2;9+YlfY/ru-7'"Po;a;G"4lb]Qob\l@bk999L_b!C-cb6lF%[Xq:*EB3J_$DX_T5a1@_jrl!ZX[5!lma2Z$10WJ'q;<kuF'o\,?4U^_m%Kc*J2*C4"606Lj6#;gqq9i([=uZ%6SJ;@s,ll%MQ0Vr%3PMfkTYOZ`cYIq$0g8rkfW2b4L[>nE_afW'pRanB\B2)TjSR+2F*YdPRh$t^U0d-S9U^t8Z4HZ_AYd2(!B'as.m%$F:>1+,_=t@Y%jG_]</ptR#Ep!fpCPQBhrWsRtD`pR!L%lp3F6hN6.";S"aH,mZT!A&kKg.,9*R8ljf.SIH"gm5[F8TKXE@N"/OIc*!69TLTR0bR@%i]k..;LVreLJ95d()[ulf(\g/2m4Bo]GLC-%,3p*e:?e@d6(e4q!--%_IPF9[']Vh<K_\B/kuiFeS4?NFSXcppWb*`1&3[J-11@m%.m&NXS/-BOFmZIu+.:'[&*GQdq<6,1H[4cEH'W:%*2P!#)I+5=)4,E4jG]"&mERn])ci'FJ@/PM<k(/S`br*%lQ"II;l`\;\<X!D%6J]h6^gVREo7PM^K-Y*V&=o(l):#nJV`"_R`T(!].MljP1M]iuFs#%2YdM8ISS&5>]:S8on=_Q-ba?G!]&*"XCP9\'imRLUUC"ug%$JYehbH(12^R9XT-"8Qg;_cqY\3)r7H[9jWG]Yu+2/n&<eQru"o5t#edb2IQbCfi*=ST=KH#dkM0fV>KC;6-C>trP[_;;["K0^:b%qD$8+hhE4f*jX1sPQ\=PKhpt(f9Nre%sJdQ7;ldc$J"IGT@MB@q4%*@R;^!AAT5e'%!E]99tu!.eU!??*><d@PJ_7J13k<lcC`oE%3+=400E*)nfrVP^bk/unm,[>R*$Z1_Ssu:F5PH),Aj+!0^?G+Zc5^(Jl`#PEEE0E-ShF.](%^!1.,#>Y(Cn_OQ]%&'em:-_AHaT1%oOd\m/o6>jXV\+)<Ok9iAHc\A92\,![#m%*f"Tm&]rRXiNW%u%-,Y_c1HIh5lL*#`>\XdD^)_Vd2#d#Di_s-,9[c"fbI'RIJKp@(%_t'j^lA+H''/;AQ1t-dAEbn4)]KL0Ha_i+hT,(d]Dp+Qte**hpq9b3aGMZVhDEHG%\MGo@T>;cMk<<,Vc\<@?HQO^MDF_8H;cuHW%UQZlb59SXMiKM#]cM6V@2l9t%gJ%XXQIY'uJK<<+NB)atM/j89JE,&^im*cIX7MtTbpILj]_F*]7*\ZH[.G5!(=YRYZ-ZEmW0W,Y%*/auEkc/rJbF/[3`8@BU6$0`-#L&_'=$=')bl`bd\#iM(^ZGQd$0tYU\7NneU9U1e4c!uWo7/gE9r]7&\#Xccbb\(bK3Qnh@)8Xf%eV!(/2%Mg)WE]&RQ8K2gq3_PmS/oipc^N,0MgHrnF*d#c8m=J@)\V.?FPN0\([((TlB(H(ID9jpRKpcpDc68dQ8K0W>gRBEWX$#7%GlUIN6.LTlei`FNZZW;igp6&CY?:b'#LSNH*dFG]:BAaG=Y*o:iJ;5nnUnq^StB)[4?(-AkIoqrWA#ehLG$TlEtlrH;!<btVI!u/%oM'Tp4+#=n23PSWVMjpWHZs/!1VAgCfXoafU=0HGLo%4b;/AeL:gGd3P>etq(KiNpU!4!*9$a06IP@#.]liu>F>D3r5]S0Q#BTT!%^dC:Gq#8B)<CSb:d[cTGVjL,tjTLXEFBhinqICj=-ZWQ::WA*HTRJq>O]cn_j?+9/r??Up(P1&Rr?Al`e$<[Ei=^N4^1U(mVh-3[%nk5+2X]rag?p%eKWro%CFtH&T'$O+#4jB:#@\gX>NLrsZH[&C41VK$=h*hRTe'BZCk,-a$bD)*?c3QBeo/<#mm&@!XM`u!\#6gI*%^3t180@H=5(`9dmMYUlE7U'V8U^+m$FR*SRL6tRd-G!m%P\>;)9uF+f=h-,e>_hfP%i7W[bqsSbX;<;7]46tV#enVT<FZj_WQh%R%_lJAdSDRIUl!u4/?"E0t#hgkSIZ4/I94()l@eMDu;a,r#^9^!!;`"^Qb0SKQQOCLC(b04c_d)hT1cG2Ult:#`3Z[\4HM\m7e(EC8%e?rg*U?J#bLU_@R]4gQRPrO0D\g9diklO.>h&EeH-*A-g$%2\3?bPGCS;21GY7[(dJV\U=Nk]lK#Xc@I.J\A%$3d6ZT:#o-QZ*K7%bVWAeR]%rqJWVHP0tSU4)8k,9Vf+X"/,H!Nq&hr,qdF$030A-e'"`p_PBFq($OcWdik+t7U4T_PnT3IuT!@F;c6:X2\k\t_4+H!:%mLd[GcA$hO4In"mZ+]=iD'-<&`#).3KcQFKqqu;Z8%^N;nM46l]@:.kHJ![kG#dP,X-i"s9V&(obW/Kj#PjJGPtt.r?$*]_$9:m<%a.RZ%-YqPBR:VWf]hXS1V6"JVNLLr4?I(M!KQHfI("YQir`fr:E<Gk^Q<Lg#+,,DN7mH1UB-32$*3(:@jC&@U-c:/Z-?I5`j$rf2%W(XV:+*r@J\_FQaQhQe0?Dcf[?J\o_G[6\[D(k?0ID!D(*d,-.2)&),G\L79`63L#+"r,1qHi#_qKN6_k2j:QO#P_gFhGAro^TLX%h:c2l>P`Si0(loj\+K2ODaJ:omk&t#_)7g,]Y(`Gn^<<N`63L#+)_u7d)X=&3u?2tmD[QQd#gCD1.%'=#8``adD0RB%M"Opf67.7%E&JgCh>\\q+9!4WK0go;dMVhu!4oU#0\0sa5@32k]",O/5.Gbs0XBMLT3Wufm9L][45DpocepWF>>Ng.<u2(=#><>1&!#&)U2>4-%IN=1SH(2ga4V/(2l2S6l9g`TDVl-EpOWOfos$M8uU5(B)qY-Y=#+l=<HQN^bj,K%LL<rY_W-GNiXYk_Y"-#^6+DW9Z1("T?+5l#?%ljcF4!1hFmXKg%!e")\TrP?CXSc'dX`.]'NCd^uaON'#H6kgqe1>'s\>g6BJ<n"ftOs\%,9\CM-e4d6s1_nh?;JBfNS\kK-U8H='%E:oD0EAL?H?oj=;7[eG'F#*6A`nTbMq&J#aXb7[1D&hm^&!$#s9i#[Ils8tJ*ZcCs:Tk`X*Ib_A?Rk?iVN$(1':TopN.k8[Ra0C!%*LpuW`ej&;nb(</`Fmdn6n7KRb[GkY)NLqkrbL]lBRbE6[<[(O&;:o:B1JkT4`>1b]0+oI+("s048l!nq"FWpZdXO_pTF:jSg3tf%/_)=J;g7!He"_hrS`An"48WYPVu@'[_,faR[u,l!rjMRohaci7=+;VWp'mbRbO`CHHB$HL)N1(AQ9Xm?DYe8H"8ps/2uWO1\>,[@%f7/YSY0ktN^CFRthSB`KG0Y8+c9:;&Jnk5"X"-90qo8qSlbq_]YrcWUD%*l(^KjYPhp1qP/+WFHrYD`L?:Ms<nRRDEnNZZ_i7NF(%FkQB8Q_2!_S[b<_0sp\im2g)Q=&YV+0/!6FI'?lbTlb[<_6*YgSh4m&Z]"E.Ef?F^WZ<&u+5D0*J>?`rRrjJWU"O*aF,Xit5NsT`%3_#`b*\G[PHnd$aSYEjk[]"8'rkP9j7VNQ2ASRg4Z7/[#"W]-LO\JLKLZ;@S\nOTD#TOf4N"VZk*f#`UTfJ!?I$_tXe;i#A6lZSk%"4DZ$UD"7:eSF(b3_^k?c6<kgF!s(Y9Tkj\r.,?uZl,jq%d"92@8p/or*pWG(tla-P5un]Ud'Y^Ml3T,NO5R^1eju9P-nsm1m-)?%:\<JBh7&=WM'DSM0s[dd&ErnhdsXnH9cV,$/S?Tgi13ViNs*1VD\kKK>&4.=YPI(iALmN>[A;2gJ!T.bU0ZN\>4H?29cMk5Nhh$<%7(h5!ZroqE+`O0EO\h4PQ:WmPk:Zj)eC6nN+bDii,->]OZ!_QGd`.1YQ7_?^-F">nQ:<fi4CWhn;<TiNRY[anN$?fs'G;;B(*lU#%$2#;?[;F>r6p"DtfW-[9VD^?j%F%FZ"jpC-+^$@=A7J042\9=b@Ys:P&\Xj>6QF[CT(65?ood<!/4,Oo94Q?#M6CDGTZ!ccq+1Yf%hfD%gs(SXm"[k!Fl]"?1Da86:9_SsTdLZhE92(P15%kX^^n^uCELE]/U("ABdhp[jH_8Ac8P*=7g6>,69H=dp'Dj&^.3AbnD:7uY%-Mq7c=qNUBNp:,+JlE#G'!5Z1"Yc.gBbIJ_WgVD7H-rFYVBr@=N'rPOR]WW($DIXqpJAMuEU&AS3A$:h1B'Z22uPG^d(:G6[PG[]%CJkd8;?_BMJ.eiL'Pp]'0248XC]]f$Xdd7_P;866S.RN(T?'0U-0PiN+P+KaN<ED)`8oq]a1mR)oFZt;4W&`M`56$-43k'(`B(Ys%ZjEh.hEkU\8MnD[;_a!;jA#q.SJ^"]oZ_6;7+NHU.IA`#88go^MG>?_Vf1V\-VJef3BIQX04jCt]8kH6BVZXn;Z2)tfWY0'f20$]%Z]1?Q>-"*K8=7mMY=b\V*82Ol8MZ*;WoKsI^nR)<RSL@9I3ACI/@d0T4bcWre.7rLge&.r'>lS3jrd!M1EalLL'6$`9&0:I=BjLc%.4I>"WSukA1:4plEr@MSHt`U("OGQb+djZcnV.gW)(SFN7qhC>j,A)"P?s!7NWa+!pftt^%kpT$<i)X\ME#Im:@'I]Uh]_fYLZMo%)$;`a@m6)J#c4ZWqjhE6@76(H@.6R1O:uj/#GI!bVi"IZS>Spm6SfmN_[pO4/rHR`[gc@i26e$`8J5GX(%d-Nkdsd*D`Z\gI3pk8%`jBotUmmU7Q?\s^MM5n=h[Xs/#]@_:cM/*L:CN>^&OXW>`.NpB9$cg$k`hGQI9R:FekDfo8d/mtPbV>9_($'X;IM@`5aop"$Riq0%+aFRuA'-/SYq@UO=Ld4Y`$5C^-LIZcA^[)YaWeES@N5D[as:\eKXEWV4i#F)AR(h+87Fo>?GeY"=MMSG)1s\e'^LE$1Bl+"ZNA%F%?m(,b[Z0C$Pr&Z0K'?bqq+8r!<@"_u%]OFV#qTQ*dG*AC(qZYTMEX0\:@L]Z\d!/0&W7nX9fgkUNO?c]8n-]Qb#)Q',.G/l$B,0J%M!P&P9SoRD-V8%nO!MD$Q7<$dFs2<uGU=<eKGG[AdS(;*&up7EPg6'mHR?2Tl[f1N9LFr8XSI_*,\^\lZlYU?bi`XoG,/An2%:n\%9XR..2L\@m2]_T`2?4$!`$U>!64#%R,6T8<+_6,t-.[6:,>g8%g,,FQFC#GGVaO^W.k19>%[j-".TIuY:P@A];2T?`DDE\eO>>*0%8AC/J$lDq^.Q#O(e-e>8#"aJ_RZo`dM-Z!N#6@H8=Aiahb*'7LiN$*m8Nmicians26\0C,;U],DRh'=tp]Z(.g(P`C#nkPLoa@'V%7l8>!`#kfu<Y``V<u(+>/Q8MO;U?029W.<G8aR_<LG7c#&Pti3U+r8R%<o-WBLFaN*>-bUQU6DaL8=L=29o;oCiO2?M;spA7Q;'<%T.pf(-Emn:F?gb1GmOI^:G<5N;Ta[7J8EF[d;T-+^*Lk:L1./tbX@uJN-T'G!V#n,&NpdjFqLt[HOu?s3!*kL>st2LS!)_ER#6_E%ASJ;hN75ePBmE].<q$G?[b&oG7"_>r<_:@Ye<dW9PsIDU9$fO3p'ioYKZ/pb^_m:ho1]iDL`-[s)dVt\;/h+s>C_=Am\gj+R+=U%%[*;N5X[SdER<hFD8Mm@^l^HJ%l9u\F;9J_m;.`a`2"fp6A&&P@"]AnPq9mp[6hVg5g@U7NL8=o%*YV-U-LrIs(HJoV6!a83Yb3<!%,o]F#B/Pkpj?(PsL0/FO!`_-tcG3u4oLiCPAjM6(8p/;Z"^#7i)P-qaeIaYFTS[%WQq*h&r]m3b_+SA9Kr@Xk&+iM3V+oAnr=V=2%8t0c,//#aE=Iq+dg#,3.]Ijq7GSM#qf2+.pnhfSs"kAR?31]%c'ms"K,+`6O%XlL<n7cE3cif?W'/>>+.>];c!Ym;1`S4))$&Bgc%BT=>R#Y2fi2\Jghkp/o26;b'ra+d03KLo1l!c'Bf\g9[tYr^%Y=Y#Z:3ct\`JAS&:@BX>pV-ms?+Zh@"^FS:P$@nfVd`6"l/\ZKU%N:H:q]3d\'XhBq$D\?(adkickS"1Q5V%\C#lGa/n6sh*'ZCo\)ao=g\OuUFs&A'j-GW,s\pg:+b?b=fh/*.bY_KI4G\MFNK4E[*<%$(O=G6kDkAL%#9h-=.Nb,&GG%Kg=?TF=oppMp#sO$VMd^)/BNM,@CWXR.re+H9,0F8fpDd/I;[?@<apPCXt82<0"8!!VW\EXW*ou%pq19;Brr[LLpY%:6Q7#b%58XnYCMEpE^BCPFU`8aG/oId<h;:ZV.kf@,XQh#T"8:[OsW^..tPu37q.DpZ;,h;?9:#kA`I6_`7dlJ%.CR2QT"aOMGY7KLMoWk.hp6YE6YPdS`dO@"5,2d3#1X8r-'ICleM%9WYq\q=0IHG4\90sS^;39aMp*4ZKH*uNI!0V9Ge.7[fo(cZ%Z\tKM#i]jpG*UH72*ruZJmT7C_5rW?WJN011aLR"_qJr6S3Y=5f]>)I21'-R"FJH@Zq->[L0[Qp6,IN+TI&hf,h@f-aq3dKkP#?<%WDNjiFU>#i%4kDWgj]N=/l`=fBH'XF^fmuC=7[:X+/I9^!_-[.J?Xm:=2_=-)UE(fo[*m68cI5WBESW%1$%U(l%\]e_@on(d8]em%WS)()P"(d_UB@d_fHeRW@PgtrpN:p*UTlN$Q,=@:0Ufb5dD-`2UbgF;Gc@2?<s"ScP;5;=1[V#F-t!fE3YW9HkR7ZR%')LlIMFGC%o@M8eO^ef.^2pq.Jk9ok74uLbgAq6pG+SfGs'hcmgMfbFer&_l)KCM!<W_)*qj5r@&rYaVl5FPNc&,jJ6at@N$lB!j[,S(^AX1+H%Po*iFKOtM7$XDgp]ln/a8q"NZ)b[qL.ZJnH32<nY37i3h&kZ__4dU`A;qW\sf%0L2s)=B0>Xjp;Sgoc3+q_>!AaEm5!\g*+3=I5]%Bj/*3T7.RXC55QYVNt,8^cb)n`2(V]SM4_M&j%+f\r8KHAg7;-!)//cbTSD9;E@j4AsZ+DJ..8.K>A=?K5'F<.otT[0H/AK'0,?a%J#.hpW:GEWYj3UTE7`#d82H?fd3K$I8F9gTeGV-sMHFEmhbU>h0<B4%h6,@)c!D?DFATF7d:+9eL_fbE8Mf)1Df[M&ObiY.Q;Kt,%PJYHTa#2Mn'aXhYR9EibV$JK4`Z$W8>hg]<YTRXJ+G<(XC^ap`Sob\dZ+#JEMN!JSaad(NE5t$hUM*:r"=mskJ_:;G5n5g&YEU_N%#$=S,92nk35n8S=:lMhr)pG@u>."RLM9eEudAb42gBh]%b\)b#_<sCP5P/n46NS,I`XU@$&-X&mosd[qT:K/6EmV#<On8k>8H1:`%"(s9:QX@aB@S9n40Rn>kDpXg`S7O<P*0E!7AP"3Oe(5-N5S0hQ`F9X!:3=XAEtZGd/T_7C6;Qg4'i#8GRNgHR]!aWI&=<n,#Qc\s%VAOcD&lq`A>;33f!#Z1p;_Ze8BfN.5C"3Rg)@dEJJg2V/rMrKLK4?\6QPq9N3\I5J1_HG#%)sLh#<q;0WV]td_"e\^'ge@"Js^'2%\%5;3SXQ*-&pVL!k'/&5+?E$k/g`qP-@_J"R1(Oc&L(,Vj"^h5DGii`\I.:;/lPQ/U"q>,?k<,kPnR[8-tb/$*&^7?hR[[>/-Oe)%:#VW"3R!3!,UuM]/J5p[#_EUt!6b4N#*hPUg.\>s-`+V7E!^5O?$d,XnR@G[]3m*K\r''dBCQ_D_%PcG$QM88/4:5mR'^QY*Uqas%4WDpR.$$JY@Y>`Tb41o+#`2J'#)fDIGMtW"_E.hM8A$ZO>TVS#3pkG`["4>/fEK>ufYFZ7+T#`))!*s+YMq(.*=IP/eaP*f@4XY3%=&LbiF2^_-2PIf63T)Fk-]$DEHm#/bX_(KTZjPOdE7S,:S$Je4#K!`5LI5T]?#H,[C<IZX!,DSY7K<PlQm;$,.LEAC@P3aK>8fd3%"G1$g7GD3V"kJPg\;nt`<g-_b]EEl$dte*aZp^^q:;,&A3+j-KQs[1tm[#f1R*CH_N(?jB2:n(#W]KOsm$%t!&_khIV<@L+hns13%+"$W"I[LHD^Api82*=N]=NsXJR_Pb4bNFH."8u-^s&;8Z;ZYuU"dD4d:jrH>H="j*pp]n(AO7)'K_/:OH+*;9jjP$R8q^_LldQ18%_-sIV7.Y6XK%S0/?kttsf209_hGo?!P#)=[PoV,ENs$g.Idm4DMKUE\_+1%6Xgt%R8IeK&0^=EM'Ol1g-_;2dYS_W5![.%F8<)UC%Z5`lRl]Df"6KphF+o`\i)M6>i5ajSW];o5M[`_fdI8.g/*#CqdOmQXaUqEQGKZiNkcFFttX!Y9q-e#!JSP0stA&s&4rcgbI;;"*4%I7D1RM5H,O^SY:K@?U>Ce9)6Nal-Q0r.`[8rS-#IcLJ"HX7kuW\)YYi5"soW33<`I/s2(bG9'jGlJR0FflbKA.;hpOs%C\@Yt!QD%'"(NG5B?ZD3W>'Zs51^%s2aa1\/[.X+W^efHE7"d)ccd!Fenh+qVTOIk/J!$9'7=YaB81SC?3)X&O;BX-)iXpiW'<e7T2`.k(P(p%PT?D?:r&W9S`CfAUSJd*WH;eUYT_[;8V:GY8E3@)g)1AN"7DH;OF_sA&u]\W8goct(`Ss/3\(70^gJW%^tCQ)bMZjP6"g#IoWE%<%qf+[b5?L@[As/nDYLC#f'e3n<nfgSdS)2`<J479\S64Ul<DmScft.:A:4KpQ[4?3C]C0@GHS5?Fg-7l=VRg(>ihr6&/+Z;q5j,PF%=u'd>VPZ$&98#&h9iQ@s8]OUA#<XgV$!.RFXqcO)@R4o[m/8fm\ATF48OYE_73/XHL<-U@<=sT8erete#Vi8S?:A=75c)^^6-4h8%0W6NMlZPrYMsu1T6:Asm_mIaj&a@&m>6r`pi,mqH6aj@U>l?uA5ZIH&'XYWsRAX9dH'7C4p*GV0:[,XEgB-lENPY+Vg)>pDC3+Ls%E/X,224J'-n..am70l?T-L(Bck1aEWRl1W7d$q:OP4`b1Qk:68Rl0(+GNUI2IG"/4p*V3&gUcMY*=;YY7_aQ8;;8IM?)ao4q/r[1%@j+AYE?98pXBV,'rr6Y`6Jf38q^nhTXW+pHDZ#7!nJh&m+6=k%8cQFHl5$T&e%4/Pp*N2eQU_k4#D;Eh-D-AaDQLrnKPS*1=Dr]s%+XpqAD-[%D891[JA-J,]_-&u^]ifg*JZ)QMTdM_Z[K^;^%#9NN=@8bC30On?EfK!4+9=eKGM9PV[X%$rOJCe*JHftD.HO[DAq#B<%cbe,`_o;'Za]L=!5%t<?h5o\DQH][=8K1_nTF,Al6>sA/KoBnM<2AOB]$Y3!nr@EX;.?Ou+b\etLu+&QoW">d>;]7VM%BEsElZ,K%g[)NBh5#3^M%/*@!Jj=N6'42\gRW@Z7qmf@3SV6c=>D!Y;\Zic]!*cQQZonM'Nd_qk@t%9+9`(3e.<cil4>%<l9#1:%?q'#Zn5mS%,:u^g]"#?X"i4aki#>lDWljK_83'LO$I/UO'[j@oJ%3XG_B4SZ]1%hiT)sk*0GJNKT?=?P<4u!/X%"E_+e:94fXk.ESQ\0#rg,%V%a)@/dUsn4eAR1(^U'e)!Wrmlja%`bSpkP9g&[h20W*5s<?RRE>!#.3Jnqj<-.g;977<GHSBpYc_!EiC]Z@+$<K+p2sRB@<0N\prc%V@l-:b![p6":.ji.PXd:;osP@.cgaAg(lKeOd;oYGC:'%0^9"q5F/[m/_@E"%gcTM+bBrpN5s#JK4,&iF#<J$SRAl4-5J`;^2?c0%0p/FTPUK=?;T8Q%JpjrX-$uTB1[u0J]8F.&A+iah.]OW&inmuEho)%E?$FZ:!nWQXW@*M_Nfp&_hET;K6kmJ==IfG;9*t&:P^f&u%]rDTtDZgB6;#s3QCl7[(JZ-FO>&f5^):QQ`1*B4=8Ma(`\ZJ/LDedHt6_J']!<hM&;(+ClLf/)Pcs=jD"7?VO!tEs"1WkiGVgS_)%Z<-T@';OOnEiQDMY/D:"_1PK_;etK:8_#XU9cYm=1#I$)MX7>:AV801;B`i41b/&AS54Zm3%1QUa<0^?$[+jA_XOjA%i)97$<9,C%kse3QlI6i[<iEq'b4SjhNii>NpeZnpMEZ=<[pqd,@Jn#sC=\u]W:R.o2AADQ=#i]K.13_\fItE)\7[&N@KdX2q%,r:V_."INJs>Z%:SpAq^cWD_!1K+5iJ7iFU"FK=\obRnaD+a1b+``,T,_Xu[',XLe<PE;Qiq+JL:q*rJXp;^oY@:M1'^RMV=f3ABo4I8"ckgM'.6CL%TKa_t6o(=0))*F950c*:W7Nj'I&&:4>kC%'W-B&B-Cgu,&]_^Xm*m+5hdC#CNAK7P;5p;Z5L,-;33]N&GWSrJ'uiJ>W"(<bK-p/P%dl>d'iEi6*Y,m'""\kJD$X]ZJXgRS'*j&6_O6I3ZRCeV-"+jAeP21i(mAFWU3-0TF@=^9=\cM<t"VcYgXC1?pJJ;0h\]S*l!&>Z.%"G8;[#1G'+p9)371(+C:0VgPfs*!#=K]8q8I"=R,pr&N=8oZp$I,i1E:SgkB9kSE@?R&%FX4UTW)XB;PG%u3cKZc?Ydih0X]*`uG%[SV@@?WQ>GV=0umHW<eT5BT/>\Ub%Zgalek&@.c*MEGY:;57&eqG8B]_nd>tiGQtlHgY(fe6THp[#IAEmS]qaCB+dq9`W.</:>QG%L_TA'<ljh31*Eom@^&;U?s3`bhA*Q6_$EXZDDuFn%pD4`8AYVeGndf:-'D:;WX,nLPk&sMCjRTPHX<U9`["l`OG$6"%TqhH,EAmE%j:Cp07ei4"h3g(\rBnQ)1<")fDXHI2Cu7uKW]+UU+&A,J?/bK*(S:1:UncX[$?r/ZRec:%e5[@cYc2rkR\\bV6k=VoTVR8e*:fqG%Ip1p9pb^KbYIQ'd-P,!RL*tq9p56;#ILB_N1=cFBYbqINBhtRnm3b7N\DD*>Hcgl_Sr1?"D1cO;=F4--eg;YAgIYLPb8u1rXipMB%$G&XFQ1I<[4PV^Q\.eMTKFK^4A+/`"cAkJ""F&;^)H.I-Bi4Q/O[%@]f`u`4RUt/>`N'>L9B&uT1aD6;AZ.\(e=K_o>0sc_e+%o,%G=#:Td+5D\:01m%_k$(4-X=#)e"hm`"]3\K`c[g]gc67MNjpr`!dETsW2k1dF!k4/-<.N-/sUJ]E<<3B0]Yt4<5LoCB6&Ne["hb@%0(tY5R6).9/_UEX.^8WL_!N^Hi-B2Rk7>!MP;IXeP>E6b:.ukN($;c6:C&(dAt8e(pN<6Um;t\].7rJRj.1(-diE>`arfpA9KYf&%7MdJ$q*W-%\G1V"n+h]K)6),lVcn_-KPL>>86TQZlY+Ll*IE[6eajT_V^jJ#@8F?k052V9_sV^'TU*s2$O\AuYQ/DR4]#.9_\)^i%PuP)(2JFYDKTLam`D5Ei8Tc"2ZkBhbC/r+f!jgbZ*gn!!;91BLMog"0.)P@dOVYXn0K+OGj"-W'1Wj]<:&ZJ:PXN%d=0U)\`'qBm%*mMK1Fd!A/N##Jk1FLEGB],=hD67"qgJfSRnU#j7"YQX7I3aBL-&:r:XCF]MI-Y/L9?pNSs(q<,1P(bgGLgn6P:>DVfZh\K-uLdu%HuU)X^sq`?a47dVV]Z]_-&7&D_7/CkM[>i(<37e5/78K?$_RQ9*8GT99&+f_.d(ftfi\ONZ'Tp47FPX63R3Mmf.`F:1<g9ief$!#%W]RJ)%?;$QftWhRJJaRMLBem@^(_j\<R:*5+X)V)-LogLWVe4p]#p@tN_rJ?+k)M@_n(,SSQ\07:b/$!%,Kb#<[YY_Z?q#F)WNm!%?cZ<P_"WVbhTS6F451u]Lc"0H!>q*!S;rn=fK7p6Fi;g.(OD<=9GrdX-JY@/Q((qXc^_&<R3N/lU!-JdAZA;!i!A]OX5j]H3%8j8%%)t6^jC9d1#.#e@<inV-$b<4[VW<YsrA=tm.L3g-;L`*_'=\2">/"P]"\j8]E(n8#qr'*o=>sJC<eqT:BJB2HI6ElN2EH#rLiDmC%O!)6'??eQN-!qY5?E7jN1q;\4;d)R_MdcI@)X=]AKcGDc'_/637u_kQXlWA-Baq3mrEVn`)i0$Cqla`OU?[Ye=(2$EXQhJi8MW-j%nGp0F_N,<Vh\*O.^pq9FKgj$MK!mYrb>'"^.3s:O!P?K^/CGB2`Mla6UoW0NP`^^9OBiT/M>RTVm05qZ`!C%;7&%W&1)MCFjC9d1%#.#e@<inUrMg6C^`BdKD&5)<?ZANCYG>9.bg`Q!Z9+cuN=L[gWB,D5-Fp/Nm468jM'-b^-m!YMY'lJnAD@jdsYfC$gV.jQJ:'W.t%-cr+!CNL&@767osnUS6+35;?M<>9D4XZIH&>L^q-`XR]>,kr9%P1gLlot+\)DSWL?$Q>8Rs)eb9.ZAio<^"Vd;4)?I7?lJ)!OfL\%O);<;>?9El6UHX;U80j30P47Zi$-1<e.e6X#q="f"(8(="lKYH*up;C@$QOK:=><fR)>:cj^Tm2L9o$b<inV-ds3$!,n``iL:q,S%]/;r"dLl?k2;Vh<a[n$-,))BZ&uh/V;i$W]],e0f-eS(**Fk-llaV``G/c8';MOg@>Z$7*IE@'.osuJNPK5*.+"_/!\Z7A5?6oW'%R_'6L_XD4ZQ`;oXGL7T^hFZe35c4Oaj&%($P)sqec!L'ge5[@cn>P*1cXHS\cB#kCAVat&+9N2Y(V>bmkM:'5`h!09drt9@6O&1j%K7kGH0GH)N4RBtJ15$gpoufhr%&Qrh9ZO[>7ii`r'Q>IU4m0&_JRXEqYa@tAY@kHH[3Z&kj-0,UJP@]-r3hIb8sj4_]7=g"F<FU<%*l_:Xh#8!.pgZDc2+7aXbX`B^o!8=LK3]be+;#lu(+s]6B26!hT4K^03\)J3WcCa;f^%Ra4MhYqo<SFOLa^AS6%KRBIG0q\=UmfH%;*Mo,(ec3mf/)7?<,M\;A0ijK^n:apY;Tc6U*mbOMPp$7L;'Q]XG^RJ7(%j:<#_e"YZ%U?#2]^/#841H'>L[!5[?QWZeE2(f]\rB%"2DuZY)1Z(.WLXPA0h*-ko`olX2>c!h_Zp+P7.Z[#ZmBS.aD62Q6c1`Q:De/Ec+dj:jF;FUoa\?Ed+XEb0j,kgD_PqQii8'jS4%u%qmY,o&B"f!mnB+*C!=dgN(@AG:Um]'r`E$/5bnV$!\Jog?E[RETVC=i2$OW@&[<O;7?l5#(oTH&dPTuDFbrNmIempS"_u5%2+nA5%7%X9S@c1lZ&MbS)>2hdJ8Af:?#J#AM1hNbCO4]gT#KgF6AkCL1fLAfH6k4oiOkUbj&=.C1!#C]?P-@;<a/;MdM\BCY5T,Lt8Nt'4%(ec3mf/)553)KOZ`<B(J<sX"cTN/q->\sMqT=APlj\d`,@mtM@r(++C3"UK8elD[N;-fipj*JZJO<pfmM]fJfd4V],k(la[N$C5P%)+[oXD_!D9QNbp@/oUn&oV]:9:OD(d`?Ga/:]SoLnY;;7oT@Y$)]02FS4Z[5TF;$Y.`F"-U=<)_AnlE-+q.m?!t&F566ZfCd0b8k%!2`2Ap#Rl&-hB^LJ\a`0Hp,sW>K[@=+,c--;Ga,m\>fV;M%-F6E7+oN'ibG,A#(\g,#Kd]fU>eDW]I:a<.Jq&j2FL8'WJ,^:ijR^%'%.)!W-'-\2Wn7L##qq+^^V.-T:,hrc>(V_hL@.nil6I#CLTrWT?E[@r;ln&f(;aCel6nPn@o8hinE9q]l<&7dD8@d1[3/I;_Ua6%JD^EcI0,[*<'5!a$oDFhJS5iCKIFne<d[1BJJ40W&EC^b51#*_Hn8%!\DouqLt=pFSP3i*`18W;PFK.P`eZg#5^Lqi41#./2($>S%pB*)UDb7eO$D[_^YK'rIHQ^'FN&>O3=XbFU+`[I[#9q]`JLE`(WPNk8J69Mp_.sN#qf$dJL%:/,Oefo%iUOp(VCrD&"*n8m6BgbN%CN,VUL,Ft&5iK9W@+837qclIX,`ZpE:T8gSA-<NBQ_pf8WcH52Ii6/?$+p=CaH/7@X!qXti7#K[-A[h67f'@tdETBf',6E"^>#/#%1kPEqenpprHrgR^-6@c$*%_B<8;iNK$m6Yue6`cg!!d@Ln4mL#B)i9b&"pm,",t3`HD_:OJJ_YU=rW=`2L_tM<"P<<R-/)0,gGO+%iQVu:nWM(g07iAO8Blj4!j%4TJ8S7'JHmq3eEHFLTP,j3WY=3B2#r@U#f+Dm"0BJSHIlOX-_H3]8Z"1'A8=_h.=%<qlk;SM5rI\e%]#KaUh9NOG]t?4T23GY94^d$'dQCX35S@^<1Zd0nSOlflR.c?:a9#NXg@GL_CLY`U!inH20BEgj`dn<!M+r20'Gj>?&!T_!lgB='%XAl\G;(j(3B<[I1ESEPA5o,!gY"d@Zq^DZ+MD[Y8B\EiZ[$A!._$$R36tYL'D&5_TECe-V6868;Gc-6TD3I^V"r?$AfR2:Q4h,hG%_<SSE)ZGO`,8Ihu$c&]16/R>mU"#ZmHbcXq9I`@_%m3R\lt!@MZhk:NcFa8qHmr/(WukMj"<Q2YFUqgEg2<_G.N.nUM*NfD3+E9)%WX(CI!VTJ?(#VK9*f:SPhO5KP'.@drHhId2m+^1dJ8m62mD3'_lJgj?Jf;i!4=-iY0j<kp)O8^$QMrC3a#`mO*.iO"F>$o6_dTQk%Q7aA1/=$7P,Xe_V!Q03(m&%&%i,CCP,QTkE#L*7DmKSHK%J]K/csRh.1CQ9;`)VffSJeuU*cVFTH/-pP,*OK;-AaR:F%Il>]_o:Y%.lH.!a5SA%ia+=d?Udq2*8St\:;NV#J281a9FZ6\Wu"4R1Ic>7$clhD0?>ZZCLs_8N@3haa';I-$cXgF^dXT<^dXT@!/>g=gA89(%6pMeA$=Ro9?Ol4YV(;J&nHc:S&H\_\NZFU"Jn#9;)IpBiLc*&#bMm1hJdf0P`#PPHm^>(p=n3!*L;71"!Ort`J@1bG`>SkW=>2j4%LX_a76cZGA_)sq&q9R6@q->Zm*=S6\"!oY,fT`Xn-)C=oRam+2F<6f@ENr-Jg)B$XFWo"<@K-?b)eji-Qr:oq]*0l_>fJdlciL/4%SWocKhV#gTd)qnT(c/S,I((3^92^M[4YL;*hA*If'XPn./[89:UMS.CfP!R-$./3"n(pjI/V2Nb^ne!1`+2c4<AM*'bbWbm%Ys$3%;@Fs(S6J`k]JeIY_$[/<K$(FU0)9gF&6P[o!)39?j6f:9`Jt6o&FQ]/+bR5qUgf+0(=foDTZEGDBj(fj,iQVe%'Kn_JQ\sSqLKNu%SLaW&&Lr3[/X-J%JR3KA8>Ko<:`*XdX<+I;]"Lq+-)&/bGi"Oa_;C>kYi6miiaGq)$5c23$l;)1k6rcS=tF8>JoKZ\09XuU[OD+%%`RP#ld!l'JL)Q^9-<7;N"]#NH(@X-p2iE@q_)saS#YBkOKWp!)"Q4n1"@rna'ojp)C!u)hPZjgZTi#)T$XhV:#gS0nUF^"V0mc\W%4kJ&,di!&V4/<?q;?r`N,Y;u9Y`f_6L#`LSJdFtD3YVE95)0JIQlm54;j9G`a"L8(>h>][Nap:ZcXD(SVRZIJ/iU2<RJ8Qc`u2[E%hK*?ac2qQ2U#*=id4/E>@g#uM4P;kWgYRs;%@c`bOhUV:amQXueV2$KjTs^sJ^QY*qGPaPQXC2FKjP<:+RZO4fdVlIdk5%<c8h8o%<ZEt3?tDbV/PX_\n8=2,^YG?tbq-#QNoDh*!a&di!1XS+^_ohEGOGDSD5DFagZl^(Gc+h6H8Eu5n(K7i]1?a;7_8+ncCgJN3u;e0%iTmF6\CI+lD.5,b**'^J].?8e,bereb7gChN<KB\L..[sT?O]h7TL0cBnZ:I?]1_^IME?6B.1W&[rdeC$`WG$RVeeA&J>/nIE(JN%Oh)]!gRHPGZ]o6&MOSIFY'[H%0%oKr0Rt+<Wu)Q.>5^6.M@oapP6-?.@T/6DB,K1?p*i)8r#MfSY?fYkC]VTHpP]%[cX@NsjuPW/%TA_lEC-T[_qCLAhE#l(MpU=4%GnIS`&2^fK>[<`sFpYp&Qch4!p&4d(cIpM-hSIZj*LrZ@m>(,3in!nkBoR:RHdupcT'ifLr9*">%d;XSZ%M"Op))<<=7DL7hTJU8B'VH:#I11XA])uOr(Um_b(a!#KkG-p\Z:9HgS0#mXhWI0pgMU&gIG2]K]DjM]D`>5,2b$et`/.@u%"K98l'.jP[F0]Nj-ADa#f87^F,]"DG[6HFO.g[02#f9KO7JTMERmA4)j%;,j.77O>88p]!`SHBf!A-^L1oHj'"R`f64&0<kDMsB%%NX$L5?qe._L(5X#rsQWhI1drA!ELEVb3>'Lne'qJ0*V1!#&T9D+d#2Dp'M!s+:o[[[)HF`4Hs\1q8sVCpFL6IiYs#O-rt/\/\Y9r%giGdimT1mI9k&&>1jffVhg8289$<A`Z)gR%?;R:'8>(Q>=Dfg@jG!lAdPRP(_8jF?r=C4_4Bn=@fH"\Pl5Z-^LJJJl_PAh7cCT\P%f5VCUR3jQ_NK3[&.HpsBNMb'#9anop+3D4"'C.s3KLh:lJP.(]m0^]'>kff2J5mD2=0H6>N1m`_5#s.]opL\=\Y-.<%1p'Lq"gQX%K=6VR\e:jL&C;\"-r4AsP!c/?Vq,5D+m9[,beLZ$86?mafc?R#4<bDC;Wk/1@.(%F&0RF(AMXHt'1ooTKi3cVQ'5=>&@goI(riiY%U+'>;-kTKH)?SA];p-<&!+?WT+t:j6@b-*MXnYc_h'Gf.<QIdR>:]l'4-*#3DO,\G;[E"?$R)HY-DWFULdYkZZKY>qV,bWghJVQ%%raB#(Cr_<ak#auYRMk3B823TJ29*U&(UL*.q/=ojn,Tb>L=dA9-+VESE.O=NH(%k#FtA&8,p4HM'"4?pT]1)l!FRc1Z%D%T$mb5H%A*`em\RR-rjis\ZG+BOQo!@bWXlVX5\QCS7ifrc*pM="+fOS.fhqaBW8Ei5P!>tJG38PrRBFYp5=LXc-a&"OEJP$Igk\Q>h;qciO%'k/h8L-XYrr'1Q^H]!8E$?)rY!fVQ1F.Z<iUb=\rdY7EciNcV46=Rn-$TGauk`"1cWVefEJup_Gcae++GDf>GQG#1CMis#q!og4O%C,nLT!f+)i^-s,_[W6/uiC"CL<>*Ps<KVr[-cu3;1.WAXNk+N\]9MCi.@*MTbL-!s9F<6`fbhi.n<0WFcZ*'bgZm7lk=r$FXIU5s%Q<_5Ufr7,DX-*,=DH0;+S^7"I/NPU@".oQqS:idhAo.iH0\QocSW;n:pEM@GPr^u6<91^D-u2.AWXZd[%dYU%=`)+>>K`:k,N0.e%^AZ05.oe>-U0[tZ>_k<,C.g*.E@F<B>_X]9"Jea5\[(iR0Z`%\3M8j++)I0L/0Q^!?f0DR$,G2W<^jYqJCK(Hm.eR/;XJ^DE73K#%c@k&ID%(!l-2A,'=@2ukOGGD['"<[oT.eM5"0X_(/:;#Q@\h'Y,,"Q/;_17s"HSrs85:ic"S0\Pn$W[p=qnj!32t;5>pUW`1ZQ^D%,r"Nu9YG3OWT<.bTY#92^C2%O_A#h\6CQM[kXEL&19@/$hf2n2Fu[Bq_Mhph#1S"&)'o$Xm`6fs:MBM0=Eq`nfJd.B^[$"_iMP7l%oA8HA:0\P6MW;9Kcdg'Yc`<k&TL?On:L]iBWFICM#)u9-\Kh^6R1XlsD$<__Hm_MZL%lVf:GLM6BaMFQ"uG_*X97MCps_1rWaTH_%WeLA:SM6k*i_(2mF_O/bkQs7gI(r&$eg@nj;g:0_PV^\j,[O2S,B'pj*1k<_UK?N']b_$a&g;&&$`XaYk(bHmm82qGNi3CbOE4,q%3MPY)E#utrgL.i)X9$ZY@(s"XV9p&cW"1l_6GMWXjud@*IUQ/FV0$`4>&$N[.K%bK;!Ck?<T4?a<P5K_<,fN9g0(X6X+%'aXcE9"%em5I'QIg.+=:MF210]":0jF,ImJ%di+tE!1>oQhL^W]h#kY\V:M[goc6Pi)@9$l"0.o>j=(HDDCVFk#F>>7p=7:9KoY''Fk"Md=C%E*eV?(W*F8Jac=X([QQSV(ptkLqV1TQ@Psu_c,lC>g6/nha@O@G+gbbj[dCRh?d(qbQc6B\UXh7b(;XepVXo%/2I0k`!9>g/Jtk>%c[5r#Q,'6PS`Ao=NF8N*!E]o9]Ui"1%5>Rk.!le?%P8,Aa3Y&@,YAR@5dg2s&IdW$3M26SQN*'0l.!BT2X^hmI(do9]N,5loT(>U%1>Q=X4\;51D-VS0a$>No&>fl2M8ApD?hrB(a0)/>/?UEim$TA=BV9Q1Nt:Z@N3(o:]#i1AE%loUmaLb_I=6e-#ffYN?UJ5'DQEM2%n!aY`kCUV8]Mu6LIS\K3Yp$AL`r7_sUqJ/+AjFNoOtniOEX_8*(Dm01CoBTr9UA@Ii]En.TfKp6@bpRC!P(sEjOnn,eo3[1gM&\!%'$u\i.sMh;X:f/2LKJW\69'Q*kURB\UCGomo*V_qXo[+2I^#5PQg\^S?V2L8-/I<=!13CTJYWf95k=Yf$rUIn:7h6;cj71g7(pb*%d4Z+($F_ffb?2;*D4m!4b1BXN>*^S9:2_CK.d;06eEXSjF7d0R1Ttf]4le],]aS7dcj&oBjXbQn!U3I8%$194[*GjIc-1#NE+U$+%<?Xu#D/46p&cYq;$A!S9JAt<F\uVrM7S9#,GU6a+E!sJ_72b0>7*ub-'"&KGqLT*-)oc\<=-t^$\7'iC82Cm%7Pq3"2K?jE`YEo9%VQoQ(CCr2\p%Zbh<WX$@[h'P)0)-?5_#L@L%EDfkLe6U.6D?8ZQfMli&JJm^D]0$B]s"INO-8RtS!r-43j*7>_mbGmI>.kd=DBni%LQ!aW_gCRKMQ;dZgt8&BR;U,I+D`\u9Hc0&57h0X/PK1LN3esL[7C&pA2I[@>0ohA0$uN_pUS8Q&e+?YQ<(R9$p,Qs/dQO+fsI8K%9>!c>+&`@HYsV^aML3_d/jXuN22_*I+_m5dMJSe_hV]-e,RfDUiXh&W+]uf'4`GNgWH\uG%Erh;#;'qjZi_M+1b&M\0TCXo$R(G:%_*YGE_^8YS^G+d"L%-;)NKP+q^5qrg#78&"*"9Sm@CdpPH=4;C>EsjmgKL9PqP(3uF!_k`('5`A=?+3$$(Uet$`!eHp!R+5rkk2D%b%W"1<T2kJJqU<N8OIG!C5Rs*pING8VBIK-=oj=bc_W9^P]43T=E2uA#5"P3.El5Tn1tVV()'=[_U2cti>(?*>9F@:dl[<]iNbuA%-^VlJI3eV<#s*0mZdpNAcsaIrIYk]/,/IIfX:*!&.pc9`/Et6hG&jnT@o08YEAbMtI5U0NF/M"<\5H!^L08H=nF@rhf@#cQ,=Ir.%p'o_C-/(Z]@;u5#l+[_R/e61P`s5g;e=MGfdn><d8&t9!i5WV/jmbcNoMTfZWW&]g^"o7!_1$2=3r-/3fL\cd89`;WT%L;_-`X*\%csA$7lfGt_>eITAG4qPfSUW<Z>jQ9Ma!>fH%^t)l6Js0X3>u]cSK/\dT'h*OC-sPC&L"<KmN;@&<X49)(D&UZ_Y`_!'Z)i`3QG7m%rdOV>\q8B$aK#K)^>^7YU'R[SiK>T2;cQ(m0B94G#V;NKFVPbMU=;K&%Q\Y6?XCOYbOd'^;hs#%OE(I=Z5M[8E6lLb$g[*4'l=Vu%(7e7JR#W..<`K,[L=QNO"].Fk2&GiMMG."Pn\.6O!\!IdLjYF2YqkVm,uPO@88"##2DZIGJFTHb>to;\M\Bo:0]FW[.K`kA+b_E[%&:fD,p3s6[,%Wl#aLQjo`*(Mk_Qd%tO=E`&8]>h#1^#%r(uQ;<h!#&UKMp"E)9Ynfi.uA>3iO(W2)+p;TI,8+ju.42gGiJ6IJ<''%B`SE\NOWDmA#HIuoJ=EFh!;"H^3?-.4'W[^&R_aIS9?8cn#MP6ge-MJ.P#m;;lq4,UsrA`\RI-_29)@l>D(*GFa%-O;t>3U;?hmq%LB`us%e]p-7/co!Wt:5YZE>AW.U]ah22HF<91m.9[Eb"u!BE%f-$h19+1elr(EC!Y,l'kHp6:=t3iI$m#DYnei,H>0A^9@c@!^3C%*GNbA&[C*XrP4k4<9[jC/BXeL;l>m`arBV<HA4ejC"At4C$0IgJA-u!M3TX$%6kM@<Jtafs*"!`qprVeb;UUOaNCY$8_UPkV+qV:%$==^8"*p&_,O^GpBS3;X^9's,D&V'6I,p>BeQ](\a-Bl0i`/lV;B+_^S7n;q+'h*CbB_11-K@!#<"\@./Z9d+HIc_-*uPk[NAF`o%N5dM6&D-(REe^71IEb$kmKVq>BiiJ+9;DeH@>A4sLq%FRZGa^%N4`W$!b2rtjNqFWG!Z-Lj?r8(OVTO,.2=7X-I:g?^m3J+geT;8%?IBb>^!-Ut\5rbXID?#L^O8ag>hVeTL;\[sD_ORkYY]5T,F4I*`U*ps$FpO6NCg(7N2PiU*T>KpSrYISm$:cJfb/EgY20c(Dk[Sq%Fqha_;;r&Jou;sc)XEqHUo135'tCBu'=+:<nFHnC"Qhk<a1Z2Zqp5QVWPs*bK?J52RCj>M_hjfVY$O#F?'kW<<p;Bd8(5oFUrmO?%$d?XoY"Dt*H2t=OM_ac>cT)hd5fE2#$#@B*K+We'T10ct4`.U]^A^r;CFlYTjQ+jmX8.<%37p_9b8sVHTm(kuB/Z0A/hm3e]WGU/%O\p:P]BUZ?RH*$VaCj1@j$$>k:8*]]96)HMKtqXN$SV^)^'H.*$,PE,mp#FU!OF%W5L,p=0r"ec`U*J:n\7geV7i\?>m5%u3d,.6%j9h8gUqECqOpa'6FKTdaHc-b![P@KgNg+8]4o9jG6@#tp>-$[u&[h@55tZX$F[h#irp%uTZUOGOe"g@[_sZq+_[Ahi1Rj%k,63Ls%!.rCimZCgCY]f/##,<_pP+=:h%g9m1FO$n<&O_<X.qBQ;+"#9p;7&b,=lVLKC852$90`X?8aSiq$ZNUe+j.FV;Z4Ca7(OR"AMBW1%0(p,B,pM4Lde[\Q!3$sZ_7dq&<aAF>L-'H9Y.2t4C]m"m3`!ut5T(OM\)Pm8L*IQG8U#k9fUh!^ap!<1(gF,`Jp8T8ANq\c0iI^n%otIRR'\h!6E4[X/;1C=.7aM%OeF$Dsl#Kfp#Z3um?;.I[BT=X$>^RG[&65ZZcC^ZC[$lJWWJh2u6,]R>$<W7o(`/irF@]KH#9--)%&c:3U;;MD@'2EE=+j6"P3mm&tC#%2bMh+K*,]3Vj:50<PUJA+&@ZhA1e'4GPkWUGK_<chD\16l*e^[\Em6u<%R]B<dW83H_RR?qA%YJd;CZT@fC&p+XcH:XfYA@@5Qk$c(?rpk^>']O8ofWESYKc"H#lYT^-">8h1bIHKchQJf/S`L]Z92ra%#t0-4F@2>UbjH+fYcu'M%.*d?69V$B7gh<muZe+)HKTIN1P7IePOKYL>ErB=UJE62mGT_K-"]p=*[gbf\O<#d]8'5oLq[[AC*6+8k;;WAj';`30al`C+kq_!u%E$7P^Gr'1E05ot,,a9H%2F<]=aY?ZX_dRjO8?IoQ3CqJs=F0"4'JM`pA@b]da9YV#SV)d+!"%Ckea`!.LljC]LeN;S'B<PG"#,*d%=Z!;':7s-`_-5WCPE]$-csDYL\$k$n'7pU%,Jn%KF):ngrR6%(4d9)ZA0"T,csi*&*WdLmGa5lDf%pXg3@Nhsm@6u^WoWpq@0rtr%)M,\7(JZ0m%PgG^1,.]3bG'"l1KU&MB"lVLc*VKoS+8<>i(UNOl_-`m]>7>!<E'b#Yt@pjnXulkhe*u38X?S5=Z?O',-ZluM[Q?6%a@ZQUJFh<t=QA$WA%Z@VdoVZj*>.C0XH__&9!Hg-\"ViJ2u$`G6ZEg,J6guBi3b<W(@MZ8i!>uAG90p+/02UoT;n9oDpTe<5m%UJ%k_3!Jj&i+k6u%;t,2NBP(df`W9JOe`YJo^RSJDC+f*"%m.7B`IIEgS*3ppYKmXCEldGLjqEQL2P+mY3BimQ`&3R4=`UoH@7M3SAT%jR11c:mhU*+esVS0i#:h:aL(S9Fu(#hX*upEls&(.:FIE<WtNP;8':=`6L^CWH+us6/)N#R&$NOP^nHC&V:*>*-dH@h,`kR*%2IH%E2H;O/M'aG=0u*t^_)]@T!q%S5ZG6&j;uoR_$ZU`;4KBR^]IdcKEd(2pi-7d.Uci42g$qe%mqZK+NftQ21`RjJWm%lD*!W4j.S*N%NAZQmNb`AB3*8^<k-]g]K(QBEm4hh03HL>J-=X6a=&J/->@7%Lo,i"OH0V`RE_>?\B^ga5PA4A?"HCUiS/k8ZbEbVo]o8?[6!oFO%1IcPq7F;d>q-#)Bi08a_?hFO?J0EYd[d,/_=JZo0k0WT/AkeE[(4n@"'P8ZhZjP>Ml7DWle3Z]Y,K2;"C)S8#.g*@R-&Vo,a;*jA%\CWHUEY6$KLiUZH&VO@jJKbr!/'W?sd$]$E7tmHR$nDn2\^Xg4h%Wp47_,QMdbR0PBASujo]7A@PUPYSfJ_e4[a9a_I$_o#3JL@0%UJbu0X@UJ<>R]N4_V(Nc:E%!(j6jA6/2e/#A]""B0=Cc`k8>a%i.OIC*l7Ta=k)D3/q=/m:&'>Zd=bb'h&r1KK'le3\fut>jfd;f%JNutuoO0)SHELj,]s"1"60bQ,'%`#0XEmsM5pNg=,lTDJKiGoQZ&Yd%Oa:k$E1iK3R0O0dWDqP(B),IXVniU%1cc_@=Dkb)_GMsB%^RXnhQ%4Q!XTZoh?B!D>:un4QdKg15>%t?4gL+=kf%r9'@J0bf5's(B)MBk[[hCh+LJgfsUDiu)3mfpBdC>XnEJj=Tg'7YR]I:fX%U8!4NVQff;Q/WQac06T7oV,@Y>gn[E;-_U3A$Fmc[]p>FXu0l\N2PAMQR"c\<)eS(V\0>P(4VMOD1pj*CRUL%VG4XSTL*T/Zr$m;%5oU#*T@RV/)L'gWoIk6/S;0BL.)qt:]aDTl#l,X+fcfX42G1b/BHmY87#>@aen);^!Jg<-Ck+M12Q<%Y7F26Z@C#+o4D4hBPq#PO%LH4p@@\LA/F0&R1X/6)<K?oc&`Dtg`T*X.Yocn%&5_j/S8XniSp*@IF+0LW^e>lo2G"%15Ae)RIe4*Ha25<'3lAJ>:%pHn<jtZQe%##.1JPS0>]SjL)QIE^Z)71[ja%`^`fdTo?UR)@>(phIj[3?3ld=bKX!L/9*_`KjIbT@f<!TtB#&Yfle0XPj=20SThJbSG(/6R#c5%[Y:Jp;NSM-iLKD",\:1>Q:\X1GmdidiH9sgD;j\08`FVl35@l7Z7VTt$^s?6(63t-+^0RO*;M9OG&rVnV>(b5n>]9LgVT)=j1XT/%.D,e*QLGO.)8ZgfA*.g52hZ6jhJs\T_?#[Vc"qrI#R:OOYq6p39:qo>\kU%a0hka(Hr-5VZ$/D3KGbaR^2cYi'UX1,j1Q_)lJu6l%5+2`jl@#3;Po)XU(3]2IT'P+HOfdiMDF.fn^m3$4qL`s2?;:eoGnr*"9&gPTmWn&n5RTJ(=/U=[DPdU_4c=0WTcVG*RRnQVluZIG%JQq3_\X=LT@&?]3)6.?hdH5CnMn'm6!Z$*$#gW*NN7Pq=s*-[dKEZ[@$(QnXKLn\ia!#\apI0igL^r2kPUC,`+YbYQAgoeeE-S?F%:kSjE[H^eGYqe)hIK&T@S0Qmu-,X-p>EZF=k",j466oK@7CWIO']BZa;hR0M.J!Df/&EI2:kVJ<Y6\W<&pIVQE)NA,JF0Td@f2YQ%4_TaAM)7Gs&snp89<nMQ-B*$m2Gts;Hs@N7<FDJ/!_ss[^Qlqm;SHk.kq1EChJR+D_(6>A:4_OQ5EgDZ;J3p=-rS&s*chM^9Wt6f%)IF-Mf[L>qV_YTSk1g(G;Hi5GUZ3\Kdu;FF;TBrBA<t4YCsV4<Bq'3!*b7XkgsGGV8I,`l8H:B1$%,1]g\N[;'#6hG&qY1:!q2Vn%)PLOMLi`3'<ldrG@@ou_j_\F(O)tTubX<9F1h7pOB5J/4+Ui(Ta0Ku.JulaUF<0)o\,pOL\";0NX"Em.E]M<aP7SRMP7X7*'3l=@%'pOZF'VKuC"Mft]Y^p0B.4gKB(aOG#E"\tDH)"os'HZ$X;^spXWM%glKTef/rm:/+L.t,CcUn>11OMM5Tn9]%$=6%#/a>:6[pUNt%4kJdBM/fAA@#cJ_T_!98>(\_P4Ghj59\R)S01q!EF\=*XAN*.[4)!i+*As!>;2o+Y-u7`,l2@0DIjc=4rebg-^MeRH3aB;'aYO@g%=.W^lgdKc<WonMST[0.p:*L1d:>5K=&#'7K.sm9J5jUB%m9Zf,G+V;dqBb%#rf!SS).D1idagdSC]!u/lWhRMY?5-8V`tK+B??i_%-)a-n46*aE!_"2MJ`Ci[CNAA4@#K3LVk[1Zs0J8ScSo4qS\7g^e;Bed\o3FOP$QPhg"kEE_R?6[lpN*ls,rYMWj"_YD!1<Gjk7r,%n\NnoiVCd6%L.,P:VU3%>TA-h?\i,4S5TXtKE'hd1\/^T,![_6jf5>`rbf@K$-CR#~>%AI9_PrivateDataEnd